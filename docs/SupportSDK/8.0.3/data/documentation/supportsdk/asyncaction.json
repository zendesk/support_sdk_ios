{"identifier":{"url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncAction","interfaceLanguage":"swift"},"sections":[],"abstract":[{"type":"text","text":"Async action this type of action is intercepted by "},{"code":"AsyncMiddleware","type":"codeVoice"},{"text":" and is not dispatched to the reducer.","type":"text"}],"metadata":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncAction"}],"symbolKind":"protocol","modules":[{"name":"SupportSDK"}],"roleHeading":"Protocol","title":"AsyncAction","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncAction"}],"externalID":"s:10SupportSDK11AsyncActionP"},"kind":"symbol","relationshipsSections":[{"identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Action"],"type":"inheritsFrom","title":"Inherits From","kind":"relationships"},{"identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockAsyncAction"],"kind":"relationships","type":"conformingTypes","title":"Conforming Types"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/supportsdk\/asyncaction"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncAction\/execute(getState:dispatch:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AsyncAction","kind":"identifier"},{"kind":"text","text":" : "},{"text":"Action","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Action","preciseIdentifier":"s:10SupportSDK6ActionP","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"Recepie to use ","type":"text"},{"code":"AsyncAction","type":"codeVoice"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Create an ","type":"text"},{"type":"codeVoice","code":"AsyncAction"},{"type":"text","text":" action"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In the block passed at init. Perform any operation (dispatching it on your queue)"}]}]},{"content":[{"inlineContent":[{"text":"When result is ready, call ","type":"text"},{"code":"dispatch","type":"codeVoice"},{"text":" passing a new action","type":"text"}],"type":"paragraph"}]}]},{"inlineContent":[{"text":"If the ","type":"text"},{"code":"AsyncMiddleware","type":"codeVoice"},{"type":"text","text":" receives an "},{"type":"codeVoice","code":"AsyncAction"},{"type":"text","text":" it does the following:"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Call action.execute passing in the dispatch and get state functions","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Stops the action from propagating to other middlewares and reducers","type":"text"}]}]}]},{"type":"heading","text":"Example","level":1,"anchor":"Example"},{"anchor":"Performing-an-async-loading-from-disk","level":2,"type":"heading","text":"Performing an async loading from disk"},{"syntax":null,"code":["struct MyDiskAsyncAction: AsyncAction {","","  func execute(getState: @escaping GetStateFunction, dispatch: @escaping DispatchFunction) {","    \/\/ Perform some work in a background thread","    DispatchQueue(label: \"MyQueue\").async {","      \/\/ Load from disk","      \/\/ Process loaded","      \/\/ Do more work","","      \/\/ Maybe consult the current state","      let currentState = api.state","","      \/\/ At a latter time dont forget to dispatch","      dispatch(DataLoadedAction(data: data))","    }","}","","store.dispatch(action: MyDiskAsyncAction())"],"type":"codeListing"},{"text":"Performing an async network request","level":2,"type":"heading","anchor":"Performing-an-async-network-request"},{"syntax":null,"code":["struct MyURLAsyncAction: AsyncAction {","","  func execute(getState: @escaping GetStateFunction, dispatch: @escaping DispatchFunction) {","    \/\/ First dispatch some action syncrhonously","    dispatch(SomeAction(...))","","    let session = URLSession(configuration: .default)","    \/\/ perform a dataTask","    session.dataTask(with: urlRequest) { data, response, error in","","      if let data = data {","        \/\/ Do something with the data","         dispatch(RequestSucceeded(data: data))","","      } else if let error = error {","","         \/\/ Error happenend","         dispatch(RequestFaile(data: data))","      }","   }","}","","store.dispatch(action: MyURLAsyncAction())"],"type":"codeListing"}]}],"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK"]]},"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Action":{"abstract":[{"type":"text","text":"Action to dispatch to the store"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Action"}],"kind":"symbol","navigatorTitle":[{"text":"Action","kind":"identifier"}],"role":"symbol","title":"Action","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Action","url":"\/documentation\/supportsdk\/action"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/AsyncAction/execute(getState:dispatch:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"execute","kind":"identifier"},{"kind":"text","text":"("},{"text":"getState","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"GetStateFunction","preciseIdentifier":"s:10SupportSDK16GetStateFunctiona"},{"text":", ","kind":"text"},{"text":"dispatch","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchFunction","preciseIdentifier":"s:10SupportSDK16DispatchFunctiona"},{"kind":"text","text":")"}],"kind":"symbol","abstract":[{"type":"text","text":"Execution block that is executed in the "},{"code":"AsyncMiddleware","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"If the "},{"type":"codeVoice","code":"AsyncMiddleware"},{"text":" receives an ","type":"text"},{"type":"codeVoice","code":"AsyncAction"},{"text":" it does the following:","type":"text"}],"required":true,"type":"topic","title":"execute(getState:dispatch:)","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncAction\/execute(getState:dispatch:)","url":"\/documentation\/supportsdk\/asyncaction\/execute(getstate:dispatch:)","role":"symbol"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/BlockAsyncAction":{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockAsyncAction","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BlockAsyncAction"}],"type":"topic","role":"symbol","kind":"symbol","title":"BlockAsyncAction","url":"\/documentation\/supportsdk\/blockasyncaction","navigatorTitle":[{"kind":"identifier","text":"BlockAsyncAction"}],"abstract":[{"text":"Create an ","type":"text"},{"code":"AsyncAction","type":"codeVoice"},{"text":" inline by passing a block to the init","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Check "},{"type":"codeVoice","code":"AsyncAction"},{"type":"text","text":" for more info"}]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/AsyncAction":{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncAction","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AsyncAction","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","title":"AsyncAction","url":"\/documentation\/supportsdk\/asyncaction","navigatorTitle":[{"kind":"identifier","text":"AsyncAction"}],"abstract":[{"text":"Async action this type of action is intercepted by ","type":"text"},{"code":"AsyncMiddleware","type":"codeVoice"},{"type":"text","text":" and is not dispatched to the reducer."}]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"role":"collection","title":"SupportSDK","url":"\/documentation\/supportsdk","abstract":[],"type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","kind":"symbol"}}}