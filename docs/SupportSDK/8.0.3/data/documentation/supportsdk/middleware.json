{"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/supportsdk\/middleware"]}],"abstract":[{"type":"text","text":"Middleware protocol that represents a suas store middleware"},{"type":"text","text":" "},{"type":"text","text":"A middleware helps extending the dispatch logic of Suas."}],"sections":[],"topicSections":[{"identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware\/onAction(action:getState:dispatch:next:)"],"title":"Instance Methods"}],"relationshipsSections":[{"title":"Conforming Types","type":"conformingTypes","kind":"relationships","identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncMiddleware","doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockMiddleware","doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/LoggerMiddleware"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Middleware","kind":"identifier"}]}]},{"content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"text":"A middleware can be used to implement:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Logging that logs the state before and after the reducer changes it"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Perform async network calls and dispatches actions representing the result when the network returns."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Other advanced usagesâ€¦"}],"type":"paragraph"}]}]},{"level":1,"type":"heading","anchor":"Example","text":"Example"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Implementing a logging middleware."}]},{"type":"codeListing","syntax":null,"code":["class LoggerMiddleware: Middleware {","  var api: MiddlewareAPI?","  var next: DispatchFunction?","","  func onAction(action: Action, getState: @escaping GetStateFunction, dispatch: @escaping DispatchFunction, next: @escaping NextFunction) {","    \/\/ Read the state before any reducer changes it","    print(\"The old state is \\(getState())\")","","    \/\/ Print the action","    print(\"The action is \\(action)\")","","    \/\/ Continue the dispatching process..until the reducer reduces the action","    \/\/ Not calling `next` will prevent the action from reaching the reducer","    next?(action)","","    \/\/ Read the state after any reducer changes it","    print(\"The new state is \\(api?.state)\")","  }","}"]}],"kind":"content"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","metadata":{"modules":[{"name":"SupportSDK"}],"role":"symbol","symbolKind":"protocol","title":"Middleware","navigatorTitle":[{"kind":"identifier","text":"Middleware"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Middleware"}],"roleHeading":"Protocol","externalID":"s:10SupportSDK10MiddlewareP"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware"},"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Middleware":{"navigatorTitle":[{"text":"Middleware","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Middleware"}],"abstract":[{"type":"text","text":"Middleware protocol that represents a suas store middleware"},{"text":" ","type":"text"},{"type":"text","text":"A middleware helps extending the dispatch logic of Suas."}],"kind":"symbol","title":"Middleware","type":"topic","url":"\/documentation\/supportsdk\/middleware"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/BlockMiddleware":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BlockMiddleware","kind":"identifier"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"BlockMiddleware","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Create a middleware inline with a block.","type":"text"}],"title":"BlockMiddleware","url":"\/documentation\/supportsdk\/blockmiddleware","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockMiddleware"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Middleware/onAction(action:getState:dispatch:next:)":{"role":"symbol","url":"\/documentation\/supportsdk\/middleware\/onaction(action:getstate:dispatch:next:)","type":"topic","title":"onAction(action:getState:dispatch:next:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"onAction"},{"kind":"text","text":"("},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK6ActionP","text":"Action"},{"kind":"text","text":", "},{"kind":"externalParam","text":"getState"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SupportSDK16GetStateFunctiona","text":"GetStateFunction","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"dispatch","kind":"externalParam"},{"kind":"text","text":": "},{"text":"DispatchFunction","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK16DispatchFunctiona"},{"text":", ","kind":"text"},{"text":"next","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SupportSDK12NextFunctiona","text":"NextFunction","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Function called when an action is dispatched"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware\/onAction(action:getState:dispatch:next:)","kind":"symbol","required":true},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/LoggerMiddleware":{"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LoggerMiddleware"}],"abstract":[{"type":"text","text":"LoggerMiddleware that logs the action and state when each action is received"},{"type":"text","text":" "},{"text":"When an action is dispatched, the LoggerMiddleware will print information related to it in the console.","type":"text"}],"url":"\/documentation\/supportsdk\/loggermiddleware","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LoggerMiddleware"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/LoggerMiddleware","title":"LoggerMiddleware","role":"symbol"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/AsyncMiddleware":{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncMiddleware","role":"symbol","url":"\/documentation\/supportsdk\/asyncmiddleware","abstract":[{"text":"Async Middleware handles actions of type ","type":"text"},{"type":"codeVoice","code":"AsyncAction"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncMiddleware"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AsyncMiddleware","kind":"identifier"}],"kind":"symbol","title":"AsyncMiddleware"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"role":"collection","title":"SupportSDK","url":"\/documentation\/supportsdk","abstract":[],"type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","kind":"symbol"}}}