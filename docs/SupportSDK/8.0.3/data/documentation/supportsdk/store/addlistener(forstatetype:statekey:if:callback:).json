{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store\/addListener(forStateType:stateKey:if:callback:)"},"abstract":[{"type":"text","text":"Add a listener to the store. The listener will be notified when the state changes."}],"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store"]]},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"symbolKind":"method","extendedModule":"SupportSDK","roleHeading":"Instance Method","role":"symbol","externalID":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF","modules":[{"name":"SupportSDK"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"addListener"},{"kind":"text","text":"<"},{"text":"StateType","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"forStateType","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp","text":"StateType","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"kind":"externalParam","text":"stateKey"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SupportSDK8StateKeya","kind":"typeIdentifier","text":"StateKey"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"if"},{"kind":"text","text":": "},{"text":"FilterFunction","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK14FilterFunctiona"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp","text":"StateType"},{"kind":"text","text":">?, "},{"text":"callback","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp","text":"StateType"},{"kind":"text","text":") -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK12SubscriptionV","text":"Subscription"},{"text":"<","kind":"text"},{"text":"StateType","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"kind":"text","text":">"}],"title":"addListener(forStateType:stateKey:if:callback:)"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"addListener","kind":"identifier"},{"kind":"text","text":"<"},{"text":"StateType","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"forStateType","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp","text":"StateType"},{"kind":"text","text":".Type, "},{"text":"stateKey","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SupportSDK8StateKeya","text":"StateKey","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/StateKey","kind":"typeIdentifier"},{"text":"? = nil, ","kind":"text"},{"text":"if","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"filterBlock","kind":"internalParam"},{"kind":"text","text":": "},{"text":"FilterFunction","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/FilterFunction","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK14FilterFunctiona"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp","text":"StateType","kind":"typeIdentifier"},{"text":">? = nil, ","kind":"text"},{"kind":"externalParam","text":"callback"},{"kind":"text","text":": "},{"text":"@escaping","kind":"attribute"},{"text":" (","kind":"text"},{"preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp","text":"StateType","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Subscription","preciseIdentifier":"s:10SupportSDK12SubscriptionV","text":"Subscription"},{"text":"<","kind":"text"},{"text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["iOS"]}],"kind":"declarations"},{"parameters":[{"name":"type","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The type of the state to listen to. If the state type is not found, the listener will not be notified."}]}]},{"name":"stateKey","content":[{"type":"paragraph","inlineContent":[{"text":"(Optional) the state key to listen to. When not passed (or passing nil) the type name from ","type":"text"},{"type":"codeVoice","code":"forStateType"},{"text":" will be used.","type":"text"},{"type":"text","text":" "},{"text":"Only pass when the state key for the state was changed in the reducer (99% of the times you dont need to set this parameter)","type":"text"}]}]},{"name":"filterBlock","content":[{"inlineContent":[{"text":"(Optional) block that receives the old state and the new state.","type":"text"},{"text":" ","type":"text"},{"text":"It decides wether the notification for the listener should be sent or not.","type":"text"},{"type":"text","text":" "},{"text":"When not set, the listener is notified whenever the state changed.","type":"text"}],"type":"paragraph"}]},{"name":"callback","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Notification block called with the new state when the store’s state changed."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Listener’s subscription that can be used to remove the notification and for other listener related stuff."}]}]},{"kind":"content","content":[{"type":"heading","anchor":"Example","level":1,"text":"Example"},{"type":"heading","text":"Adding a listener","anchor":"Adding-a-listener","level":2},{"inlineContent":[{"type":"text","text":"Add a simple listener for a "},{"type":"codeVoice","code":"MyState"},{"type":"text","text":" state type"}],"type":"paragraph"},{"syntax":null,"code":["let subscription = store.addListener(forStateType: MyState.self) { newState in","  \/\/ Do something with the state","}"],"type":"codeListing"},{"text":"Adding a listener with a filterBlock","anchor":"Adding-a-listener-with-a-filterBlock","level":2,"type":"heading"},{"inlineContent":[{"text":"Adding a listener for a state of ","type":"text"},{"code":"TodoItemsState","type":"codeVoice"},{"type":"text","text":" type with a filter block."},{"text":" ","type":"text"},{"text":"In the filterBlock we check that the new state has more items than the old state.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The Listener will be notified only if the filterBlock returns true."}],"type":"paragraph"},{"code":["let subscription = store.addListener(","  forStateType: TodoItemsState.self,","  if: { old, new in return old.todos.count > new.todos.count }) { newState in","    \/\/ Do something with the state","}"],"syntax":null,"type":"codeListing"},{"type":"heading","anchor":"Adding-a-listener-with-a-state-key","level":2,"text":"Adding a listener with a state key"},{"inlineContent":[{"text":"Adding a listener for a state of ","type":"text"},{"type":"codeVoice","code":"TodoItemsState"},{"text":" type, the reducer registered the state key to “todos”","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let subscription = store.addListener(forStateType: TodoItemsState.self, stateKey: \"todos\") { newState in","  \/\/ Do something with the state","}"]}]}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/supportsdk\/store\/addlistener(forstatetype:statekey:if:callback:)"]}],"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/StateKey":{"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"StateKey"}],"abstract":[{"type":"text","text":"Store state is stored as a Dictionary of [StateKey: Any]"}],"navigatorTitle":[{"kind":"identifier","text":"StateKey"}],"url":"\/documentation\/supportsdk\/statekey","role":"symbol","kind":"symbol","title":"StateKey","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/StateKey","type":"topic"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Subscription":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Subscription","title":"Subscription","kind":"symbol","abstract":[{"type":"text","text":"Subscription structure that represents a listener subscription."},{"text":" ","type":"text"},{"type":"text","text":"When adding a listener you get a subscription back."},{"type":"text","text":" "},{"text":"You can use this subscription to remove the listener, notify about the current state or link the listener lifecycle with an object.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Subscription","kind":"identifier"}],"navigatorTitle":[{"text":"Subscription","kind":"identifier"}],"url":"\/documentation\/supportsdk\/subscription"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/FilterFunction":{"role":"symbol","url":"\/documentation\/supportsdk\/filterfunction","title":"FilterFunction","abstract":[{"type":"text","text":"Filter function that decides if the listener should be notified or not"}],"navigatorTitle":[{"text":"FilterFunction","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FilterFunction"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/FilterFunction","kind":"symbol"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"role":"collection","title":"SupportSDK","url":"\/documentation\/supportsdk","abstract":[],"type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","kind":"symbol"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Store/addListener(forStateType:stateKey:if:callback:)":{"abstract":[{"type":"text","text":"Add a listener to the store. The listener will be notified when the state changes."}],"role":"symbol","url":"\/documentation\/supportsdk\/store\/addlistener(forstatetype:statekey:if:callback:)","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store\/addListener(forStateType:stateKey:if:callback:)","kind":"symbol","type":"topic","title":"addListener(forStateType:stateKey:if:callback:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"addListener"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"StateType"},{"kind":"text","text":">("},{"text":"forStateType","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp","text":"StateType"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"stateKey"},{"text":": ","kind":"text"},{"text":"StateKey","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK8StateKeya"},{"text":"?, ","kind":"text"},{"text":"if","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SupportSDK14FilterFunctiona","text":"FilterFunction","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"StateType","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"kind":"text","text":">?, "},{"text":"callback","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"kind":"text","text":") -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK12SubscriptionV","text":"Subscription"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"text":">","kind":"text"}]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Store":{"navigatorTitle":[{"kind":"identifier","text":"Store"}],"role":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Store"}],"abstract":[{"text":"Store that contains the application state, the reducer logic, the middleware and the listeners","type":"text"}],"kind":"symbol","title":"Store","type":"topic","url":"\/documentation\/supportsdk\/store"}}}