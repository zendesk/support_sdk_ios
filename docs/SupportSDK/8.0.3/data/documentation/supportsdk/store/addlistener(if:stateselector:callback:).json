{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store\/addListener(if:stateSelector:callback:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addListener","kind":"identifier"},{"kind":"text","text":"<"},{"text":"StateType","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"if","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"filterBlock"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/FilterFunction","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK14FilterFunctiona","text":"FilterFunction"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/State","preciseIdentifier":"s:10SupportSDK5StateV"},{"kind":"text","text":">? = nil, "},{"text":"stateSelector","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:10SupportSDK13StateSelectora","text":"StateSelector","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/StateSelector","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp","text":"StateType"},{"kind":"text","text":">, "},{"text":"callback","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"text":" (","kind":"text"},{"text":"StateType","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Subscription","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Subscription","preciseIdentifier":"s:10SupportSDK12SubscriptionV"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp","text":"StateType","kind":"typeIdentifier"},{"kind":"text","text":">"}],"platforms":["iOS"],"languages":["swift"]}]},{"parameters":[{"name":"filterBlock","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"(Optional) block that receives the old state and the new state."},{"type":"text","text":" "},{"type":"text","text":"It decides wether the notification for the listener should be sent or not."},{"type":"text","text":" "},{"text":"When not set, the listener is notified whenever the state changed.","type":"text"}]}]},{"name":"stateSelector","content":[{"inlineContent":[{"type":"text","text":"state selector block that selects a part of the full state"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Notification block called with the new state when the store’s state changed."}],"type":"paragraph"}],"name":"callback"}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"inlineContent":[{"type":"text","text":"The Listener’s subscription that can be used to remove the notification and for other listener related stuff."}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"level":1,"type":"heading","text":"Example","anchor":"Example"},{"type":"heading","level":2,"anchor":"Adding-a-listener-with-a-state-selector","text":"Adding a listener with a state selector"},{"type":"paragraph","inlineContent":[{"text":"Add a simple listener for the full state with a state selector that selects part of it.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a state selector that selects and creates a "},{"type":"codeVoice","code":"TodoItemsState"},{"type":"text","text":" from the full "},{"code":"Store","type":"codeVoice"},{"type":"text","text":" state."}]},{"code":["let stateSelector: StateSelector<TodoItemsState> = { state in","  \/\/ Read values from the store","  let value1 = state.value(forKeyOfType: SomeType.self)","  let value2 = state.value(forKey: \"someKey\")","","  \/\/ Create and return a TodoItemsState","  return TodoItemsState(.....)","}"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a listener with the state selector and"}]},{"syntax":null,"code":["let subscription = store.addListener(stateSelector: stateSelector) { newState in","  \/\/ newState here is a TodoItemsState","}"],"type":"codeListing"},{"type":"heading","text":"Adding a listener with a state selector and a filter block","anchor":"Adding-a-listener-with-a-state-selector-and-a-filter-block","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a simple listener for the full state with a state selector that selects part of it and a filter block that decide when to notify."}]},{"inlineContent":[{"text":"Create a state selector that selects and creates a ","type":"text"},{"type":"codeVoice","code":"TodoItemsState"},{"text":" from the full ","type":"text"},{"code":"Store","type":"codeVoice"},{"text":" state.","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let stateSelector: StateSelector<TodoItemsState> = { state in","  \/\/ Read values from the store","  let value1 = state.value(forKeyOfType: SomeType.self)","  let value2 = state.value(forKey: \"someKey\")","","  \/\/ Create and return a TodoItemsState","  return TodoItemsState(.....)","}"]},{"type":"paragraph","inlineContent":[{"text":"Add a filter block that decides when to notify","type":"text"}]},{"type":"codeListing","code":["let filterBlock: FilterFunction<State> = { oldState, newState in","  \/\/ Read a string from the oldState and newState","  \/\/ oldState and newState are the full Store state","  let value1 = oldState.value(forKey: \"someKey\", ofType: String.self)","  let value2 = newState.value(forKey: \"someKey\", ofType: String.self)","","  \/\/ Compare","  return value1 != value2","}"],"syntax":null},{"inlineContent":[{"type":"text","text":"Add a listener with the state selector and"}],"type":"paragraph"},{"syntax":null,"code":["let subscription = store.addListener(stateSelector: stateSelector) { newState in","  \/\/ newState here is a TodoItemsState","}"],"type":"codeListing"}]}],"sections":[],"metadata":{"symbolKind":"method","title":"addListener(if:stateSelector:callback:)","modules":[{"name":"SupportSDK"}],"extendedModule":"SupportSDK","externalID":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"addListener","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"StateType"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"if"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"FilterFunction","preciseIdentifier":"s:10SupportSDK14FilterFunctiona"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StateV"},{"text":">?, ","kind":"text"},{"kind":"externalParam","text":"stateSelector"},{"text":": ","kind":"text"},{"text":"StateSelector","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK13StateSelectora"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"callback"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp","text":"StateType"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:10SupportSDK12SubscriptionV","kind":"typeIdentifier","text":"Subscription"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp","kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">"}],"roleHeading":"Instance Method","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store"]]},"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Add a listener to the store with a stateSelector"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/supportsdk\/store\/addlistener(if:stateselector:callback:)"]}],"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/State":{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/State","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"}],"type":"topic","role":"symbol","kind":"symbol","title":"State","url":"\/documentation\/supportsdk\/state","navigatorTitle":[{"kind":"identifier","text":"State"}],"abstract":[{"text":"Structure that represents the store state. The store state is kept as a ","type":"text"},{"code":"Dictionary","type":"codeVoice"},{"text":" with ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":" Keys and "},{"type":"codeVoice","code":"Any"},{"type":"text","text":" Values ("},{"type":"codeVoice","code":"[String: Any]"},{"type":"text","text":")"}]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/StateSelector":{"role":"symbol","url":"\/documentation\/supportsdk\/stateselector","title":"StateSelector","abstract":[{"type":"text","text":"Function that selects part of the full state"}],"navigatorTitle":[{"text":"StateSelector","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"StateSelector","kind":"identifier"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/StateSelector","kind":"symbol"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/FilterFunction":{"role":"symbol","url":"\/documentation\/supportsdk\/filterfunction","title":"FilterFunction","abstract":[{"type":"text","text":"Filter function that decides if the listener should be notified or not"}],"navigatorTitle":[{"text":"FilterFunction","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FilterFunction"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/FilterFunction","kind":"symbol"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"role":"collection","title":"SupportSDK","url":"\/documentation\/supportsdk","abstract":[],"type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","kind":"symbol"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Subscription":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Subscription","title":"Subscription","kind":"symbol","abstract":[{"type":"text","text":"Subscription structure that represents a listener subscription."},{"text":" ","type":"text"},{"type":"text","text":"When adding a listener you get a subscription back."},{"type":"text","text":" "},{"text":"You can use this subscription to remove the listener, notify about the current state or link the listener lifecycle with an object.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Subscription","kind":"identifier"}],"navigatorTitle":[{"text":"Subscription","kind":"identifier"}],"url":"\/documentation\/supportsdk\/subscription"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Store":{"navigatorTitle":[{"kind":"identifier","text":"Store"}],"role":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Store"}],"abstract":[{"text":"Store that contains the application state, the reducer logic, the middleware and the listeners","type":"text"}],"kind":"symbol","title":"Store","type":"topic","url":"\/documentation\/supportsdk\/store"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Store/addListener(if:stateSelector:callback:)":{"abstract":[{"text":"Add a listener to the store with a stateSelector","type":"text"}],"role":"symbol","url":"\/documentation\/supportsdk\/store\/addlistener(if:stateselector:callback:)","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store\/addListener(if:stateSelector:callback:)","type":"topic","title":"addListener(if:stateSelector:callback:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"addListener"},{"text":"<","kind":"text"},{"text":"StateType","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"if","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"FilterFunction","preciseIdentifier":"s:10SupportSDK14FilterFunctiona"},{"text":"<","kind":"text"},{"text":"State","preciseIdentifier":"s:10SupportSDK5StateV","kind":"typeIdentifier"},{"text":">?, ","kind":"text"},{"text":"stateSelector","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SupportSDK13StateSelectora","kind":"typeIdentifier","text":"StateSelector"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"callback"},{"kind":"text","text":": ("},{"text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"Subscription","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK12SubscriptionV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp"},{"text":">","kind":"text"}]}}}