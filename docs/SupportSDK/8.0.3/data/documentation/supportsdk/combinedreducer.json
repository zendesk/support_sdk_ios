{"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK"]]},"identifier":{"url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/CombinedReducer","interfaceLanguage":"swift"},"metadata":{"externalID":"s:10SupportSDK15CombinedReducerC","roleHeading":"Class","title":"CombinedReducer","navigatorTitle":[{"kind":"identifier","text":"CombinedReducer"}],"modules":[{"name":"SupportSDK"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CombinedReducer"}],"symbolKind":"class"},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CombinedReducer","kind":"identifier"}]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"syntax":null,"type":"codeListing","code":["let combinedReducers = Reducer1() + Reducer2() + Reducer3()"]},{"anchor":"Example","text":"Example","type":"heading","level":1},{"text":"Combine reducers","level":2,"type":"heading","anchor":"Combine-reducers"},{"type":"paragraph","inlineContent":[{"text":"If your application has two screens, you can model that with two states, for example ","type":"text"},{"type":"codeVoice","code":"TodoList"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Settings"},{"text":" states.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"We can then create two reducers for each of these states."}]},{"type":"codeListing","syntax":null,"code":["let todoReducer = BlockReducer(state: TodoList.self) { state, action in","  guard let newState = state as? Int else { return state }","","  if action is SomeAction {","    return newState + 1","  }","","  return newState","}","","let settingsReducer = BlockReducer(state: Settings.self) { state, action in","  guard let newState = state as? Int else { return state }","","  if action is SomeAction {","    return newState + 1","  }","","  return newState","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"We can then combine these 2 reducers with:"}]},{"type":"codeListing","syntax":null,"code":["let store = Suas.createStore(","  reducer: todoReducer + settingsReducer",")"]},{"type":"paragraph","inlineContent":[{"code":"todoReducer","type":"codeVoice"},{"type":"text","text":" will handle the “TodoList” key of state and "},{"type":"codeVoice","code":"settingsReducer"},{"type":"text","text":" will handle the “Settings” portoon of the full Store state"}]},{"anchor":"Combine-reducers-with-custom-state-key","type":"heading","level":2,"text":"Combine reducers with custom state key"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If a store has a state with two keys “key1” and “key2”. We can register a reducer for each one of these keys."}]},{"type":"paragraph","inlineContent":[{"text":"We create two reducers with ","type":"text"},{"type":"codeVoice","code":"stateKey"},{"text":"s of “key1” and “key2”","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let myReducer1 = BlockReducer(state: 1, key: \"key1\") { state, action in","  guard let newState = state as? Int else { return state }","","  if action is SomeAction {","    return newState + 1","  }","","  return newState","}","","let myReducer2 = BlockReducer(state: 1, key: \"key2\") { state, action in","  guard let newState = state as? Int else { return state }","","  if action is SomeAction {","    return newState + 1","  }","","  return newState","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"We can then combine these 2 reducers with:"}]},{"code":["let store = Suas.createStore(","  reducer: myReducer1 + myReducer2",")"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"codeVoice","code":"myReducer1"},{"text":" will handle the “key1” key of state and ","type":"text"},{"code":"myReducer2","type":"codeVoice"},{"type":"text","text":" will handle the “key2” key of state"}],"type":"paragraph"}]}],"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/CombinedReducer\/initialState"]},{"identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/CombinedReducer\/reduce(state:action:)"],"title":"Instance Methods"},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/CombinedReducer\/Reducer-Implementations"]}],"sections":[],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Reducer"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/supportsdk\/combinedreducer"]}],"abstract":[{"text":"Reducer that represents a combination of two reducers","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This reducers is not to be implemented by hand. You combine reducer by adding them with the "},{"type":"codeVoice","code":"+"},{"type":"text","text":" operator."}],"kind":"symbol","references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Reducer":{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Reducer","url":"\/documentation\/supportsdk\/reducer","type":"topic","kind":"symbol","role":"symbol","title":"Reducer","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"abstract":[{"text":"Protocol that represents a reducer","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/CombinedReducer/Reducer-Implementations":{"abstract":[],"type":"topic","title":"Reducer Implementations","role":"collectionGroup","url":"\/documentation\/supportsdk\/combinedreducer\/reducer-implementations","kind":"article","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/CombinedReducer\/Reducer-Implementations"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/CombinedReducer/initialState":{"abstract":[{"type":"text","text":"Inital state value for this particular reducer"},{"text":" ","type":"text"},{"type":"text","text":"This initial state will be used to populate the Store state (which represents the app state)"}],"kind":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/CombinedReducer\/initialState","type":"topic","title":"initialState","role":"symbol","url":"\/documentation\/supportsdk\/combinedreducer\/initialstate","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"initialState","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"keyword","text":"Any"}]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/CombinedReducer":{"abstract":[{"type":"text","text":"Reducer that represents a combination of two reducers"},{"text":" ","type":"text"},{"text":"This reducers is not to be implemented by hand. You combine reducer by adding them with the ","type":"text"},{"type":"codeVoice","code":"+"},{"type":"text","text":" operator."}],"type":"topic","title":"CombinedReducer","role":"symbol","url":"\/documentation\/supportsdk\/combinedreducer","kind":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/CombinedReducer","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CombinedReducer"}],"navigatorTitle":[{"text":"CombinedReducer","kind":"identifier"}]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"role":"collection","title":"SupportSDK","url":"\/documentation\/supportsdk","abstract":[],"type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","kind":"symbol"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/CombinedReducer/reduce(state:action:)":{"abstract":[{"text":"Generates a new state from the old state and an action","type":"text"}],"type":"topic","title":"reduce(state:action:)","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/CombinedReducer\/reduce(state:action:)","kind":"symbol","role":"symbol","url":"\/documentation\/supportsdk\/combinedreducer\/reduce(state:action:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reduce","kind":"identifier"},{"kind":"text","text":"("},{"text":"state","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"Any"},{"text":", ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:10SupportSDK6ActionP"},{"text":") -> ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?","kind":"text"}]}}}