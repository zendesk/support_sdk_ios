{"kind":"symbol","sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"EqualsFilter","kind":"identifier"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/FilterFunction","kind":"typeIdentifier","text":"FilterFunction","preciseIdentifier":"s:10SupportSDK14FilterFunctiona"},{"kind":"text","text":"<"},{"kind":"keyword","text":"Any"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["iOS"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In order to use this filter block your state types has to implement "},{"type":"codeVoice","code":"SuasDynamicEquatable"},{"type":"text","text":" protocol"},{"text":" ","type":"text"},{"text":"Note: if you implement ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":" you can implement "},{"code":"SuasDynamicEquatable","type":"codeVoice"},{"type":"text","text":" without any extra code."},{"type":"text","text":" "},{"type":"text","text":"You only have to include "},{"type":"codeVoice","code":"SuasDynamicEquatable"},{"type":"text","text":" in the list of protocols for your type (check examples)."}]},{"level":1,"anchor":"Example","text":"Example","type":"heading"},{"level":2,"text":"Implementing SuasDynamicEquatable manually","type":"heading","anchor":"Implementing-SuasDynamicEquatable-manually"},{"type":"paragraph","inlineContent":[{"text":"Implementing SuasDynamicEquatable without Equatable","type":"text"}]},{"type":"codeListing","code":["\/\/ Implement SuasDynamicEquatable manually","struct MyState: SuasDynamicEquatable {","  let value: Int","","  func isEqual(to other: Any) -> Bool {","    \/\/ Cast to same type","    guard let other = other as? MyState else { return false }","","    \/\/ Compare values","    return other.value == self.value","  }","}","","let subscription = store.addListener(forStateType: MyState.self, if: EqualsFilter) { newState in","  \/\/ use new state","}"],"syntax":null},{"level":2,"text":"Implementing SuasDynamicEquatable as an extension","type":"heading","anchor":"Implementing-SuasDynamicEquatable-as-an-extension"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If your type implement equatable"}]},{"syntax":null,"code":["struct MyState: Equatable {","  let value: Int","  static func ==(lhs: MyState, rhs: MyState) -> Bool { ... }","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"You dont need to implement "},{"type":"codeVoice","code":"SuasDynamicEquatable"},{"type":"text","text":" just add it as an extension to "},{"type":"codeVoice","code":"MyState"},{"type":"text","text":". No extra code needed."}],"type":"paragraph"},{"type":"codeListing","code":["extension MyState: SuasDynamicEquatable { }"],"syntax":null},{"inlineContent":[{"code":"EqualsFilter","type":"codeVoice"},{"type":"text","text":" now works with "},{"code":"MyState","type":"codeVoice"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let subscription = store.addListener(forStateType: MyState.self, if: EqualsFilter) { newState in","  \/\/ use new state","}"]}]}],"metadata":{"role":"symbol","modules":[{"name":"SupportSDK"}],"fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EqualsFilter"},{"text":": ","kind":"text"},{"text":"FilterFunction","preciseIdentifier":"s:10SupportSDK14FilterFunctiona","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"keyword","text":"Any"},{"text":">","kind":"text"}],"roleHeading":"Global Variable","title":"EqualsFilter","symbolKind":"var","externalID":"s:10SupportSDK12EqualsFilterySbyp_yptcvp"},"identifier":{"url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/EqualsFilter","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/supportsdk\/equalsfilter"]}],"abstract":[{"text":"Listener filter callback that returns true if the old state and the new state are not equal.","type":"text"},{"text":" ","type":"text"},{"text":"You can use this filter function when adding a listener if you want your notification function to be called when the state changes.","type":"text"}],"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/FilterFunction":{"type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/FilterFunction","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FilterFunction","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Filter function that decides if the listener should be notified or not"}],"navigatorTitle":[{"kind":"identifier","text":"FilterFunction"}],"url":"\/documentation\/supportsdk\/filterfunction","kind":"symbol","title":"FilterFunction"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/EqualsFilter":{"role":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/EqualsFilter","abstract":[{"type":"text","text":"Listener filter callback that returns true if the old state and the new state are not equal."},{"type":"text","text":" "},{"type":"text","text":"You can use this filter function when adding a listener if you want your notification function to be called when the state changes."}],"type":"topic","url":"\/documentation\/supportsdk\/equalsfilter","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"EqualsFilter","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK14FilterFunctiona","text":"FilterFunction"},{"kind":"text","text":"<"},{"kind":"keyword","text":"Any"},{"text":">","kind":"text"}],"kind":"symbol","title":"EqualsFilter"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"kind":"symbol","type":"topic","title":"SupportSDK","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","url":"\/documentation\/supportsdk","role":"collection","abstract":[]}}}