{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/supportsdk\/blockmiddleware"]}],"metadata":{"roleHeading":"Class","modules":[{"name":"SupportSDK"}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"BlockMiddleware","kind":"identifier"}],"symbolKind":"class","navigatorTitle":[{"text":"BlockMiddleware","kind":"identifier"}],"title":"BlockMiddleware","externalID":"s:10SupportSDK15BlockMiddlewareC"},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"BlockMiddleware","kind":"identifier"}],"languages":["swift"],"platforms":["iOS"]}],"kind":"declarations"},{"content":[{"anchor":"Example","level":1,"text":"Example","type":"heading"},{"syntax":null,"code":["let middleware = BlockMiddleware { action, getState, dispatch, next in","  \/\/ Read the state before any reducer changes it","  print(\"The old state is \\(getState())\")","","  \/\/ Print the action","  print(\"The action is \\(action)\")","","  \/\/ Continue the dispatching process..until the reducer reduces the action","  \/\/ Not calling `next` will prevent the action from reaching the reducer","  next?(action)","","  \/\/ Read the state after any reducer changes it","  print(\"The new state is \\(api?.state)\")","}"],"type":"codeListing"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK"]]},"topicSections":[{"identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockMiddleware\/init(actionFunction:)"],"title":"Initializers"},{"identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockMiddleware\/onAction(action:getState:dispatch:next:)"],"title":"Instance Methods"}],"sections":[],"relationshipsSections":[{"identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockMiddleware"},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Create a middleware inline with a block.","type":"text"}],"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Middleware":{"url":"\/documentation\/supportsdk\/middleware","abstract":[{"type":"text","text":"Middleware protocol that represents a suas store middleware"},{"type":"text","text":" "},{"text":"A middleware helps extending the dispatch logic of Suas.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Middleware","kind":"identifier"}],"role":"symbol","title":"Middleware","kind":"symbol","navigatorTitle":[{"text":"Middleware","kind":"identifier"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/BlockMiddleware":{"kind":"symbol","abstract":[{"text":"Create a middleware inline with a block.","type":"text"}],"url":"\/documentation\/supportsdk\/blockmiddleware","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockMiddleware","type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BlockMiddleware"}],"navigatorTitle":[{"text":"BlockMiddleware","kind":"identifier"}],"title":"BlockMiddleware"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/BlockMiddleware/init(actionFunction:)":{"title":"init(actionFunction:)","role":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"actionFunction"},{"kind":"text","text":": "},{"text":"MiddlewareFunction","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK18MiddlewareFunctiona"},{"text":")","kind":"text"}],"kind":"symbol","abstract":[{"text":"Create a middleware with an onAction callback block","type":"text"}],"url":"\/documentation\/supportsdk\/blockmiddleware\/init(actionfunction:)","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockMiddleware\/init(actionFunction:)"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"kind":"symbol","type":"topic","title":"SupportSDK","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","url":"\/documentation\/supportsdk","role":"collection","abstract":[]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/BlockMiddleware/onAction(action:getState:dispatch:next:)":{"url":"\/documentation\/supportsdk\/blockmiddleware\/onaction(action:getstate:dispatch:next:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"onAction"},{"kind":"text","text":"("},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK6ActionP"},{"kind":"text","text":", "},{"text":"getState","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"GetStateFunction","preciseIdentifier":"s:10SupportSDK16GetStateFunctiona"},{"kind":"text","text":", "},{"kind":"externalParam","text":"dispatch"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SupportSDK16DispatchFunctiona","text":"DispatchFunction","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"next","kind":"externalParam"},{"kind":"text","text":": "},{"text":"NextFunction","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK12NextFunctiona"},{"text":")","kind":"text"}],"kind":"symbol","abstract":[{"text":"Function called when an action is dispatched","type":"text"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockMiddleware\/onAction(action:getState:dispatch:next:)","title":"onAction(action:getState:dispatch:next:)"}}}