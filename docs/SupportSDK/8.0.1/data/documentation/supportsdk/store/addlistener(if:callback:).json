{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store\/addListener(if:callback:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/supportsdk\/store\/addlistener(if:callback:)"]}],"metadata":{"role":"symbol","title":"addListener(if:callback:)","modules":[{"name":"SupportSDK"}],"symbolKind":"method","externalID":"s:10SupportSDK5StoreC11addListener2if8callbackAA12SubscriptionVyAA5StateVGSbAJ_AJtcSg_yAJctF","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"addListener","kind":"identifier"},{"text":"(","kind":"text"},{"text":"if","kind":"externalParam"},{"kind":"text","text":": "},{"text":"FilterFunction","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK14FilterFunctiona"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StateV"},{"kind":"text","text":">?, "},{"kind":"externalParam","text":"callback"},{"kind":"text","text":": ("},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StateV"},{"kind":"text","text":") -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Subscription","preciseIdentifier":"s:10SupportSDK12SubscriptionV"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StateV"},{"text":">","kind":"text"}],"extendedModule":"SupportSDK","roleHeading":"Instance Method"},"abstract":[{"text":"Add a listener to the store. The listener will be notified when the state changes.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The listener will be notified with the full state when"}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"addListener"},{"text":"(","kind":"text"},{"text":"if","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"filterBlock"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SupportSDK14FilterFunctiona","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/FilterFunction","kind":"typeIdentifier","text":"FilterFunction"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:10SupportSDK5StateV","text":"State","kind":"typeIdentifier","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/State"},{"text":">? = nil, ","kind":"text"},{"text":"callback","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"attribute","text":"@escaping"},{"text":" (","kind":"text"},{"preciseIdentifier":"s:10SupportSDK5StateV","text":"State","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/State","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Subscription","text":"Subscription","preciseIdentifier":"s:10SupportSDK12SubscriptionV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/State","kind":"typeIdentifier","text":"State","preciseIdentifier":"s:10SupportSDK5StateV"},{"kind":"text","text":">"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"(Optional) block that receives the old state and the new state."},{"text":" ","type":"text"},{"type":"text","text":"AnyObjectIt decides wether the notification for the listener should be sent or not."},{"text":" ","type":"text"},{"type":"text","text":"When not set, the listener is notified whenever the state changed."}],"type":"paragraph"}],"name":"filterBlock"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Notification block called with the new state when the store’s state changed.","type":"text"}]}],"name":"callback"}]},{"content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Listener’s subscription that can be used to remove the notification and for other listener related stuff."}]}],"kind":"content"},{"kind":"content","content":[{"text":"Example","type":"heading","anchor":"Example","level":1},{"level":2,"anchor":"Adding-a-listener","type":"heading","text":"Adding a listener"},{"inlineContent":[{"type":"text","text":"Add a simple listener for the full state."}],"type":"paragraph"},{"syntax":null,"code":["let subscription = addListener { newState in","  \/\/ Do something with the state","","  \/\/ Get value of Any? Type with key \"TheKey\"","  let value1 = newState.value(forKey: \"TheKey\")","","  \/\/ Get value of MyState? Type with key \"MyState\" (Key value = the type of the state we want)","  let value2 = newState.value(forKeyOfType: MyState.self)","","  \/\/ Get value of MyState? Type with key \"TheKey\"","  let value3 = newState.value(forKey: \"TheKey\", ofType: MyState.self)","}"],"type":"codeListing"},{"type":"heading","level":2,"text":"Adding a listener with a filterBlock","anchor":"Adding-a-listener-with-a-filterBlock"},{"inlineContent":[{"type":"text","text":"Adding a listener for the full state with a filter block."},{"type":"text","text":" "},{"text":"In the filterBlock we check that the new state has more than 10 items.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The Listener will be notified only if the filterBlock returns true."}],"type":"paragraph"},{"code":["let subscription = store.addListener(if: { oldState, newState in","","  \/\/ Read values from the oldState and the newState","  let old = oldState.value(forKeyOfType: TodoItemsState.self)!","  let new = newState.value(forKeyOfType: TodoItemsState.self)!","","  return new.todos.count > 10","}) { newState in","  \/\/ Do something with the state","}"],"type":"codeListing","syntax":null}]}],"sections":[],"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Subscription":{"type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Subscription","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Subscription","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Subscription structure that represents a listener subscription.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"When adding a listener you get a subscription back."},{"type":"text","text":" "},{"text":"You can use this subscription to remove the listener, notify about the current state or link the listener lifecycle with an object.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Subscription"}],"url":"\/documentation\/supportsdk\/subscription","kind":"symbol","title":"Subscription"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Store":{"abstract":[{"type":"text","text":"Store that contains the application state, the reducer logic, the middleware and the listeners"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Store"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store","url":"\/documentation\/supportsdk\/store","title":"Store","kind":"symbol","navigatorTitle":[{"text":"Store","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Store/addListener(if:callback:)":{"title":"addListener(if:callback:)","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store\/addListener(if:callback:)","url":"\/documentation\/supportsdk\/store\/addlistener(if:callback:)","abstract":[{"type":"text","text":"Add a listener to the store. The listener will be notified when the state changes."},{"type":"text","text":" "},{"type":"text","text":"The listener will be notified with the full state when"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"addListener"},{"text":"(","kind":"text"},{"text":"if","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SupportSDK14FilterFunctiona","kind":"typeIdentifier","text":"FilterFunction"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:10SupportSDK5StateV","text":"State","kind":"typeIdentifier"},{"kind":"text","text":">?, "},{"kind":"externalParam","text":"callback"},{"text":": (","kind":"text"},{"text":"State","preciseIdentifier":"s:10SupportSDK5StateV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10SupportSDK12SubscriptionV","text":"Subscription","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","preciseIdentifier":"s:10SupportSDK5StateV","kind":"typeIdentifier"},{"kind":"text","text":">"}],"kind":"symbol","role":"symbol"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"kind":"symbol","type":"topic","title":"SupportSDK","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","url":"\/documentation\/supportsdk","role":"collection","abstract":[]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/State":{"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"}],"type":"topic","abstract":[{"type":"text","text":"Structure that represents the store state. The store state is kept as a "},{"code":"Dictionary","type":"codeVoice"},{"type":"text","text":" with "},{"type":"codeVoice","code":"String"},{"type":"text","text":" Keys and "},{"type":"codeVoice","code":"Any"},{"type":"text","text":" Values ("},{"type":"codeVoice","code":"[String: Any]"},{"type":"text","text":")"}],"url":"\/documentation\/supportsdk\/state","title":"State","navigatorTitle":[{"text":"State","kind":"identifier"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/State"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/FilterFunction":{"type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/FilterFunction","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FilterFunction","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Filter function that decides if the listener should be notified or not"}],"navigatorTitle":[{"kind":"identifier","text":"FilterFunction"}],"url":"\/documentation\/supportsdk\/filterfunction","kind":"symbol","title":"FilterFunction"}}}