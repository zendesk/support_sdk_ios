{"identifier":{"url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store\/addListener(if:stateSelector:callback:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store"]]},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addListener"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"StateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"if"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SupportSDK14FilterFunctiona","text":"FilterFunction","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StateV","text":"State"},{"text":">?, ","kind":"text"},{"kind":"externalParam","text":"stateSelector"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK13StateSelectora","text":"StateSelector"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp","text":"StateType"},{"text":">, ","kind":"text"},{"text":"callback","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp","kind":"typeIdentifier","text":"StateType"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") -> "},{"text":"Subscription","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK12SubscriptionV"},{"kind":"text","text":"<"},{"text":"StateType","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp"},{"text":">","kind":"text"}],"role":"symbol","modules":[{"name":"SupportSDK"}],"externalID":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF","symbolKind":"method","extendedModule":"SupportSDK","roleHeading":"Instance Method","title":"addListener(if:stateSelector:callback:)"},"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"addListener","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"StateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"if"},{"kind":"text","text":" "},{"text":"filterBlock","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/FilterFunction","text":"FilterFunction","preciseIdentifier":"s:10SupportSDK14FilterFunctiona"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:10SupportSDK5StateV","text":"State","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/State","kind":"typeIdentifier"},{"text":">? = nil, ","kind":"text"},{"kind":"externalParam","text":"stateSelector"},{"text":": ","kind":"text"},{"kind":"attribute","text":"@escaping"},{"text":" ","kind":"text"},{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/StateSelector","text":"StateSelector","preciseIdentifier":"s:10SupportSDK13StateSelectora","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp","kind":"typeIdentifier","text":"StateType"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"callback"},{"text":": ","kind":"text"},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" ("},{"text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:10SupportSDK12SubscriptionV","kind":"typeIdentifier","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Subscription","text":"Subscription"},{"text":"<","kind":"text"},{"text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp","kind":"typeIdentifier"},{"kind":"text","text":">"}]}],"kind":"declarations"},{"parameters":[{"name":"filterBlock","content":[{"inlineContent":[{"text":"(Optional) block that receives the old state and the new state.","type":"text"},{"type":"text","text":" "},{"text":"It decides wether the notification for the listener should be sent or not.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"When not set, the listener is notified whenever the state changed."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"state selector block that selects a part of the full state"}]}],"name":"stateSelector"},{"content":[{"inlineContent":[{"type":"text","text":"Notification block called with the new state when the store’s state changed."}],"type":"paragraph"}],"name":"callback"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"The Listener’s subscription that can be used to remove the notification and for other listener related stuff.","type":"text"}]}]},{"content":[{"text":"Example","anchor":"Example","level":1,"type":"heading"},{"level":2,"text":"Adding a listener with a state selector","type":"heading","anchor":"Adding-a-listener-with-a-state-selector"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a simple listener for the full state with a state selector that selects part of it."}]},{"inlineContent":[{"text":"Create a state selector that selects and creates a ","type":"text"},{"type":"codeVoice","code":"TodoItemsState"},{"type":"text","text":" from the full "},{"code":"Store","type":"codeVoice"},{"text":" state.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["let stateSelector: StateSelector<TodoItemsState> = { state in","  \/\/ Read values from the store","  let value1 = state.value(forKeyOfType: SomeType.self)","  let value2 = state.value(forKey: \"someKey\")","","  \/\/ Create and return a TodoItemsState","  return TodoItemsState(.....)","}"],"syntax":null},{"inlineContent":[{"text":"Add a listener with the state selector and","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let subscription = store.addListener(stateSelector: stateSelector) { newState in","  \/\/ newState here is a TodoItemsState","}"]},{"text":"Adding a listener with a state selector and a filter block","anchor":"Adding-a-listener-with-a-state-selector-and-a-filter-block","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a simple listener for the full state with a state selector that selects part of it and a filter block that decide when to notify."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a state selector that selects and creates a "},{"type":"codeVoice","code":"TodoItemsState"},{"type":"text","text":" from the full "},{"type":"codeVoice","code":"Store"},{"type":"text","text":" state."}]},{"type":"codeListing","code":["let stateSelector: StateSelector<TodoItemsState> = { state in","  \/\/ Read values from the store","  let value1 = state.value(forKeyOfType: SomeType.self)","  let value2 = state.value(forKey: \"someKey\")","","  \/\/ Create and return a TodoItemsState","  return TodoItemsState(.....)","}"],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a filter block that decides when to notify"}]},{"code":["let filterBlock: FilterFunction<State> = { oldState, newState in","  \/\/ Read a string from the oldState and newState","  \/\/ oldState and newState are the full Store state","  let value1 = oldState.value(forKey: \"someKey\", ofType: String.self)","  let value2 = newState.value(forKey: \"someKey\", ofType: String.self)","","  \/\/ Compare","  return value1 != value2","}"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Add a listener with the state selector and","type":"text"}]},{"syntax":null,"type":"codeListing","code":["let subscription = store.addListener(stateSelector: stateSelector) { newState in","  \/\/ newState here is a TodoItemsState","}"]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/supportsdk\/store\/addlistener(if:stateselector:callback:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","abstract":[{"text":"Add a listener to the store with a stateSelector","type":"text"}],"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Store":{"abstract":[{"type":"text","text":"Store that contains the application state, the reducer logic, the middleware and the listeners"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Store"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store","url":"\/documentation\/supportsdk\/store","title":"Store","kind":"symbol","navigatorTitle":[{"text":"Store","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"kind":"symbol","type":"topic","title":"SupportSDK","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","url":"\/documentation\/supportsdk","role":"collection","abstract":[]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/FilterFunction":{"type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/FilterFunction","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FilterFunction","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Filter function that decides if the listener should be notified or not"}],"navigatorTitle":[{"kind":"identifier","text":"FilterFunction"}],"url":"\/documentation\/supportsdk\/filterfunction","kind":"symbol","title":"FilterFunction"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Subscription":{"type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Subscription","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Subscription","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Subscription structure that represents a listener subscription.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"When adding a listener you get a subscription back."},{"type":"text","text":" "},{"text":"You can use this subscription to remove the listener, notify about the current state or link the listener lifecycle with an object.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Subscription"}],"url":"\/documentation\/supportsdk\/subscription","kind":"symbol","title":"Subscription"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/State":{"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"}],"type":"topic","abstract":[{"type":"text","text":"Structure that represents the store state. The store state is kept as a "},{"code":"Dictionary","type":"codeVoice"},{"type":"text","text":" with "},{"type":"codeVoice","code":"String"},{"type":"text","text":" Keys and "},{"type":"codeVoice","code":"Any"},{"type":"text","text":" Values ("},{"type":"codeVoice","code":"[String: Any]"},{"type":"text","text":")"}],"url":"\/documentation\/supportsdk\/state","title":"State","navigatorTitle":[{"text":"State","kind":"identifier"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/State"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Store/addListener(if:stateSelector:callback:)":{"type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store\/addListener(if:stateSelector:callback:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addListener","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"StateType"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"if"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK14FilterFunctiona","text":"FilterFunction"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:10SupportSDK5StateV","kind":"typeIdentifier","text":"State"},{"text":">?, ","kind":"text"},{"text":"stateSelector","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StateSelector","preciseIdentifier":"s:10SupportSDK13StateSelectora","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"callback","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK12SubscriptionV","text":"Subscription"},{"text":"<","kind":"text"},{"text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp","kind":"typeIdentifier"},{"kind":"text","text":">"}],"role":"symbol","abstract":[{"type":"text","text":"Add a listener to the store with a stateSelector"}],"url":"\/documentation\/supportsdk\/store\/addlistener(if:stateselector:callback:)","kind":"symbol","title":"addListener(if:stateSelector:callback:)"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/StateSelector":{"type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/StateSelector","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StateSelector"}],"role":"symbol","abstract":[{"type":"text","text":"Function that selects part of the full state"}],"navigatorTitle":[{"text":"StateSelector","kind":"identifier"}],"url":"\/documentation\/supportsdk\/stateselector","kind":"symbol","title":"StateSelector"}}}