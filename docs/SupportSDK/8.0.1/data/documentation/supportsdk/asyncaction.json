{"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Async action this type of action is intercepted by ","type":"text"},{"code":"AsyncMiddleware","type":"codeVoice"},{"type":"text","text":" and is not dispatched to the reducer."}],"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AsyncAction","kind":"identifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Action","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK6ActionP","text":"Action"}],"languages":["swift"]}]},{"content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Recepie to use ","type":"text"},{"code":"AsyncAction","type":"codeVoice"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Create an "},{"type":"codeVoice","code":"AsyncAction"},{"type":"text","text":" action"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In the block passed at init. Perform any operation (dispatching it on your queue)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"When result is ready, call ","type":"text"},{"type":"codeVoice","code":"dispatch"},{"text":" passing a new action","type":"text"}]}]}],"type":"orderedList"},{"inlineContent":[{"type":"text","text":"If the "},{"type":"codeVoice","code":"AsyncMiddleware"},{"type":"text","text":" receives an "},{"code":"AsyncAction","type":"codeVoice"},{"text":" it does the following:","type":"text"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"text":"Call action.execute passing in the dispatch and get state functions","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Stops the action from propagating to other middlewares and reducers"}]}]}]},{"level":1,"text":"Example","anchor":"Example","type":"heading"},{"text":"Performing an async loading from disk","level":2,"anchor":"Performing-an-async-loading-from-disk","type":"heading"},{"type":"codeListing","syntax":null,"code":["struct MyDiskAsyncAction: AsyncAction {","","  func execute(getState: @escaping GetStateFunction, dispatch: @escaping DispatchFunction) {","    \/\/ Perform some work in a background thread","    DispatchQueue(label: \"MyQueue\").async {","      \/\/ Load from disk","      \/\/ Process loaded","      \/\/ Do more work","","      \/\/ Maybe consult the current state","      let currentState = api.state","","      \/\/ At a latter time dont forget to dispatch","      dispatch(DataLoadedAction(data: data))","    }","}","","store.dispatch(action: MyDiskAsyncAction())"]},{"level":2,"text":"Performing an async network request","anchor":"Performing-an-async-network-request","type":"heading"},{"type":"codeListing","code":["struct MyURLAsyncAction: AsyncAction {","","  func execute(getState: @escaping GetStateFunction, dispatch: @escaping DispatchFunction) {","    \/\/ First dispatch some action syncrhonously","    dispatch(SomeAction(...))","","    let session = URLSession(configuration: .default)","    \/\/ perform a dataTask","    session.dataTask(with: urlRequest) { data, response, error in","","      if let data = data {","        \/\/ Do something with the data","         dispatch(RequestSucceeded(data: data))","","      } else if let error = error {","","         \/\/ Error happenend","         dispatch(RequestFaile(data: data))","      }","   }","}","","store.dispatch(action: MyURLAsyncAction())"],"syntax":null}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/supportsdk\/asyncaction"]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncAction"},"topicSections":[{"identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncAction\/execute(getState:dispatch:)"],"title":"Instance Methods"}],"metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncAction"}],"externalID":"s:10SupportSDK11AsyncActionP","title":"AsyncAction","role":"symbol","navigatorTitle":[{"text":"AsyncAction","kind":"identifier"}],"modules":[{"name":"SupportSDK"}],"symbolKind":"protocol","roleHeading":"Protocol"},"relationshipsSections":[{"title":"Inherits From","kind":"relationships","identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Action"],"type":"inheritsFrom"},{"identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockAsyncAction"],"title":"Conforming Types","kind":"relationships","type":"conformingTypes"}],"kind":"symbol","references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"kind":"symbol","type":"topic","title":"SupportSDK","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","url":"\/documentation\/supportsdk","role":"collection","abstract":[]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/AsyncAction":{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncAction","url":"\/documentation\/supportsdk\/asyncaction","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncAction"}],"abstract":[{"type":"text","text":"Async action this type of action is intercepted by "},{"type":"codeVoice","code":"AsyncMiddleware"},{"type":"text","text":" and is not dispatched to the reducer."}],"title":"AsyncAction","type":"topic","navigatorTitle":[{"text":"AsyncAction","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Action":{"url":"\/documentation\/supportsdk\/action","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Action","kind":"identifier"}],"role":"symbol","title":"Action","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Action","navigatorTitle":[{"kind":"identifier","text":"Action"}],"type":"topic","abstract":[{"text":"Action to dispatch to the store","type":"text"}],"kind":"symbol"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/BlockAsyncAction":{"navigatorTitle":[{"text":"BlockAsyncAction","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BlockAsyncAction"}],"title":"BlockAsyncAction","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockAsyncAction","abstract":[{"type":"text","text":"Create an "},{"type":"codeVoice","code":"AsyncAction"},{"text":" inline by passing a block to the init","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Check "},{"type":"codeVoice","code":"AsyncAction"},{"text":" for more info","type":"text"}],"url":"\/documentation\/supportsdk\/blockasyncaction"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/AsyncAction/execute(getState:dispatch:)":{"title":"execute(getState:dispatch:)","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncAction\/execute(getState:dispatch:)","required":true,"abstract":[{"type":"text","text":"Execution block that is executed in the "},{"type":"codeVoice","code":"AsyncMiddleware"},{"type":"text","text":" "},{"type":"text","text":"If the "},{"type":"codeVoice","code":"AsyncMiddleware"},{"type":"text","text":" receives an "},{"type":"codeVoice","code":"AsyncAction"},{"type":"text","text":" it does the following:"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"execute","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"getState"},{"text":": ","kind":"text"},{"text":"GetStateFunction","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK16GetStateFunctiona"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"dispatch"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SupportSDK16DispatchFunctiona","text":"DispatchFunction","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/supportsdk\/asyncaction\/execute(getstate:dispatch:)"}}}