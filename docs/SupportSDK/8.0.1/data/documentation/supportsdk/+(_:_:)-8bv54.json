{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"+"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"R1","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"R2"},{"text":">(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"R1","preciseIdentifier":"s:10SupportSDK1poiyAA15CombinedReducerCx_q_tAA0D0RzAaER_r0_lF2R1L_xmfp"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"R2","preciseIdentifier":"s:10SupportSDK1poiyAA15CombinedReducerCx_q_tAA0D0RzAaER_r0_lF2R2L_q_mfp"},{"text":") -> ","kind":"text"},{"text":"CombinedReducer","preciseIdentifier":"s:10SupportSDK15CombinedReducerC","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/CombinedReducer","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"R1","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Reducer","preciseIdentifier":"s:10SupportSDK7ReducerP","text":"Reducer","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"R2"},{"text":" : ","kind":"text"},{"text":"Reducer","preciseIdentifier":"s:10SupportSDK7ReducerP","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Reducer","kind":"typeIdentifier"}],"languages":["swift"]}]},{"content":[{"level":1,"anchor":"Example","type":"heading","text":"Example"},{"text":"Combine reducers","type":"heading","anchor":"Combine-reducers","level":2},{"inlineContent":[{"type":"text","text":"If your application has two screens, you can model that with two states, for example "},{"code":"TodoList","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Settings"},{"text":" states.","type":"text"},{"type":"text","text":" "},{"text":"We can then create two reducers for each of these states.","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["let todoReducer = BlockReducer(state: TodoList.self) { state, action in","  guard let newState = state as? Int else { return state }","","  if action is SomeAction {","    return newState + 1","  }","","  return newState","}","","let settingsReducer = BlockReducer(state: Settings.self) { state, action in","  guard let newState = state as? Int else { return state }","","  if action is SomeAction {","    return newState + 1","  }","","  return newState","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"We can then combine these 2 reducers with:","type":"text"}]},{"code":["let store = Suas.createStore(","  reducer: todoReducer + settingsReducer",")"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"todoReducer"},{"type":"text","text":" will handle the “TodoList” key of state and "},{"code":"settingsReducer","type":"codeVoice"},{"text":" will handle the “Settings” portoon of the full Store state","type":"text"}]},{"level":2,"type":"heading","anchor":"Combine-reducers-with-custom-state-key","text":"Combine reducers with custom state key"},{"type":"paragraph","inlineContent":[{"text":"If a store has a state with two keys “key1” and “key2”. We can register a reducer for each one of these keys.","type":"text"}]},{"inlineContent":[{"text":"We create two reducers with ","type":"text"},{"type":"codeVoice","code":"stateKey"},{"type":"text","text":"s of “key1” and “key2”"}],"type":"paragraph"},{"type":"codeListing","code":["let myReducer1 = BlockReducer(state: 1, key: \"key1\") { state, action in","  guard let newState = state as? Int else { return state }","","  if action is SomeAction {","    return newState + 1","  }","","  return newState","}","","let myReducer2 = BlockReducer(state: 1, key: \"key2\") { state, action in","  guard let newState = state as? Int else { return state }","","  if action is SomeAction {","    return newState + 1","  }","","  return newState","}"],"syntax":null},{"inlineContent":[{"type":"text","text":"We can then combine these 2 reducers with:"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let store = Suas.createStore(","  reducer: myReducer1 + myReducer2",")"]},{"inlineContent":[{"code":"myReducer1","type":"codeVoice"},{"type":"text","text":" will handle the “key1” key of state and "},{"code":"myReducer2","type":"codeVoice"},{"type":"text","text":" will handle the “key2” key of state"}],"type":"paragraph"}],"kind":"content"}],"kind":"symbol","variants":[{"paths":["\/documentation\/supportsdk\/+(_:_:)-8bv54"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Combines two reducers. The combined reducer calls each of its internal reducer for a each paricular state key.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK"]]},"metadata":{"symbolKind":"op","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"+","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"text":"R1","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"R2","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"R1","preciseIdentifier":"s:10SupportSDK1poiyAA15CombinedReducerCx_q_tAA0D0RzAaER_r0_lF2R1L_xmfp"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:10SupportSDK1poiyAA15CombinedReducerCx_q_tAA0D0RzAaER_r0_lF2R2L_q_mfp","kind":"typeIdentifier","text":"R2"},{"kind":"text","text":") -> "},{"text":"CombinedReducer","preciseIdentifier":"s:10SupportSDK15CombinedReducerC","kind":"typeIdentifier"}],"externalID":"s:10SupportSDK1poiyAA15CombinedReducerCx_q_tAA0D0RzAaER_r0_lF","modules":[{"name":"SupportSDK"}],"role":"symbol","roleHeading":"Operator","title":"+(_:_:)"},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/+(_:_:)-8bv54"},"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Reducer":{"kind":"symbol","title":"Reducer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Reducer","abstract":[{"type":"text","text":"Protocol that represents a reducer"}],"role":"symbol","url":"\/documentation\/supportsdk\/reducer","type":"topic","navigatorTitle":[{"text":"Reducer","kind":"identifier"}]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/CombinedReducer":{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/CombinedReducer","title":"CombinedReducer","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"CombinedReducer","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CombinedReducer"}],"url":"\/documentation\/supportsdk\/combinedreducer","abstract":[{"type":"text","text":"Reducer that represents a combination of two reducers"},{"type":"text","text":" "},{"type":"text","text":"This reducers is not to be implemented by hand. You combine reducer by adding them with the "},{"type":"codeVoice","code":"+"},{"text":" operator.","type":"text"}]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"kind":"symbol","type":"topic","title":"SupportSDK","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","url":"\/documentation\/supportsdk","role":"collection","abstract":[]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/+(_:_:)-8bv54":{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/+(_:_:)-8bv54","url":"\/documentation\/supportsdk\/+(_:_:)-8bv54","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"+","kind":"identifier"},{"kind":"text","text":" "},{"text":"<","kind":"text"},{"text":"R1","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"R2","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"R1","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK1poiyAA15CombinedReducerCx_q_tAA0D0RzAaER_r0_lF2R1L_xmfp"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK1poiyAA15CombinedReducerCx_q_tAA0D0RzAaER_r0_lF2R2L_q_mfp","text":"R2"},{"text":") -> ","kind":"text"},{"text":"CombinedReducer","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK15CombinedReducerC"}],"abstract":[{"type":"text","text":"Combines two reducers. The combined reducer calls each of its internal reducer for a each paricular state key."}],"title":"+(_:_:)","type":"topic","kind":"symbol","role":"symbol"}}}