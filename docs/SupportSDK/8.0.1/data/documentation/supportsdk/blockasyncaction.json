{"sections":[],"identifier":{"url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockAsyncAction","interfaceLanguage":"swift"},"abstract":[{"text":"Create an ","type":"text"},{"code":"AsyncAction","type":"codeVoice"},{"text":" inline by passing a block to the init","type":"text"},{"text":" ","type":"text"},{"text":"Check ","type":"text"},{"type":"codeVoice","code":"AsyncAction"},{"type":"text","text":" for more info"}],"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK"]]},"metadata":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BlockAsyncAction"}],"roleHeading":"Structure","externalID":"s:10SupportSDK16BlockAsyncActionV","title":"BlockAsyncAction","modules":[{"name":"SupportSDK"}],"symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"BlockAsyncAction"}],"role":"symbol"},"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Action","doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncAction"],"type":"conformsTo"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BlockAsyncAction","kind":"identifier"}],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"SeeAlso:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"AsyncAction","type":"codeVoice"}]}]}]},{"anchor":"Example","level":1,"text":"Example","type":"heading"},{"inlineContent":[{"type":"text","text":"Performing an async network request"}],"type":"paragraph"},{"code":["let action = BlockAsyncAction { getState, dispatch in","","  \/\/ Read the current state from the Store","  getState()","","  \/\/ First dispatch some action syncrhonously","  dispatch(SomeAction(...))","","  let session = URLSession(configuration: .default)","  \/\/ perform a dataTask","  session.dataTask(with: urlRequest) { data, response, error in","","    if let data = data {","      \/\/ Do something with the data","       dispatch(RequestSucceeded(data: data))","","    } else if let error = error {","","       \/\/ Error happenend","       dispatch(RequestFaile(data: data))","    }","  }","}","","store.dispatch(action: MyURLAsyncAction())"],"type":"codeListing","syntax":null}]}],"variants":[{"paths":["\/documentation\/supportsdk\/blockasyncaction"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockAsyncAction\/init(executionBlock:)"],"title":"Initializers"},{"title":"Instance Methods","identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockAsyncAction\/execute(getState:dispatch:)"]}],"kind":"symbol","references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/BlockAsyncAction":{"navigatorTitle":[{"text":"BlockAsyncAction","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BlockAsyncAction"}],"title":"BlockAsyncAction","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockAsyncAction","abstract":[{"type":"text","text":"Create an "},{"type":"codeVoice","code":"AsyncAction"},{"text":" inline by passing a block to the init","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Check "},{"type":"codeVoice","code":"AsyncAction"},{"text":" for more info","type":"text"}],"url":"\/documentation\/supportsdk\/blockasyncaction"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/BlockAsyncAction/execute(getState:dispatch:)":{"title":"execute(getState:dispatch:)","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockAsyncAction\/execute(getState:dispatch:)","abstract":[{"text":"Execution block that is executed in the ","type":"text"},{"code":"AsyncMiddleware","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"If the "},{"type":"codeVoice","code":"AsyncMiddleware"},{"type":"text","text":" receives an "},{"type":"codeVoice","code":"AsyncAction"},{"type":"text","text":" it does the following:"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"execute"},{"kind":"text","text":"("},{"text":"getState","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SupportSDK16GetStateFunctiona","text":"GetStateFunction","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"dispatch","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK16DispatchFunctiona","text":"DispatchFunction"},{"kind":"text","text":")"}],"url":"\/documentation\/supportsdk\/blockasyncaction\/execute(getstate:dispatch:)"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/BlockAsyncAction/init(executionBlock:)":{"type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"executionBlock","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"GetStateFunction","preciseIdentifier":"s:10SupportSDK16GetStateFunctiona","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"DispatchFunction","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK16DispatchFunctiona"},{"kind":"text","text":") -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"title":"init(executionBlock:)","abstract":[],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockAsyncAction\/init(executionBlock:)","url":"\/documentation\/supportsdk\/blockasyncaction\/init(executionblock:)"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"kind":"symbol","type":"topic","title":"SupportSDK","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","url":"\/documentation\/supportsdk","role":"collection","abstract":[]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Action":{"url":"\/documentation\/supportsdk\/action","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Action","kind":"identifier"}],"role":"symbol","title":"Action","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Action","navigatorTitle":[{"kind":"identifier","text":"Action"}],"type":"topic","abstract":[{"text":"Action to dispatch to the store","type":"text"}],"kind":"symbol"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/AsyncAction":{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncAction","url":"\/documentation\/supportsdk\/asyncaction","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncAction"}],"abstract":[{"type":"text","text":"Async action this type of action is intercepted by "},{"type":"codeVoice","code":"AsyncMiddleware"},{"type":"text","text":" and is not dispatched to the reducer."}],"title":"AsyncAction","type":"topic","navigatorTitle":[{"text":"AsyncAction","kind":"identifier"}],"kind":"symbol","role":"symbol"}}}