{"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware\/onAction(action:getState:dispatch:next:)"]}],"relationshipsSections":[{"identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncMiddleware","doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockMiddleware","doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/LoggerMiddleware"],"kind":"relationships","type":"conformingTypes","title":"Conforming Types"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/supportsdk\/middleware"]}],"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK"]]},"identifier":{"url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Middleware"}],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A middleware can be used to implement:"}]},{"items":[{"content":[{"inlineContent":[{"text":"Logging that logs the state before and after the reducer changes it","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Perform async network calls and dispatches actions representing the result when the network returns."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Other advanced usagesâ€¦"}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"Example","type":"heading","level":1,"text":"Example"},{"type":"paragraph","inlineContent":[{"text":"Implementing a logging middleware.","type":"text"}]},{"syntax":null,"type":"codeListing","code":["class LoggerMiddleware: Middleware {","  var api: MiddlewareAPI?","  var next: DispatchFunction?","","  func onAction(action: Action, getState: @escaping GetStateFunction, dispatch: @escaping DispatchFunction, next: @escaping NextFunction) {","    \/\/ Read the state before any reducer changes it","    print(\"The old state is \\(getState())\")","","    \/\/ Print the action","    print(\"The action is \\(action)\")","","    \/\/ Continue the dispatching process..until the reducer reduces the action","    \/\/ Not calling `next` will prevent the action from reaching the reducer","    next?(action)","","    \/\/ Read the state after any reducer changes it","    print(\"The new state is \\(api?.state)\")","  }","}"]}]}],"metadata":{"modules":[{"name":"SupportSDK"}],"symbolKind":"protocol","role":"symbol","roleHeading":"Protocol","externalID":"s:10SupportSDK10MiddlewareP","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Middleware"}],"navigatorTitle":[{"kind":"identifier","text":"Middleware"}],"title":"Middleware"},"abstract":[{"type":"text","text":"Middleware protocol that represents a suas store middleware"},{"type":"text","text":" "},{"text":"A middleware helps extending the dispatch logic of Suas.","type":"text"}],"kind":"symbol","sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Middleware":{"url":"\/documentation\/supportsdk\/middleware","abstract":[{"type":"text","text":"Middleware protocol that represents a suas store middleware"},{"type":"text","text":" "},{"text":"A middleware helps extending the dispatch logic of Suas.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Middleware","kind":"identifier"}],"role":"symbol","title":"Middleware","kind":"symbol","navigatorTitle":[{"text":"Middleware","kind":"identifier"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/LoggerMiddleware":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LoggerMiddleware"}],"role":"symbol","title":"LoggerMiddleware","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/LoggerMiddleware","navigatorTitle":[{"text":"LoggerMiddleware","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"LoggerMiddleware that logs the action and state when each action is received"},{"text":" ","type":"text"},{"text":"When an action is dispatched, the LoggerMiddleware will print information related to it in the console.","type":"text"}],"url":"\/documentation\/supportsdk\/loggermiddleware"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"kind":"symbol","type":"topic","title":"SupportSDK","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","url":"\/documentation\/supportsdk","role":"collection","abstract":[]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Middleware/onAction(action:getState:dispatch:next:)":{"kind":"symbol","abstract":[{"type":"text","text":"Function called when an action is dispatched"}],"required":true,"url":"\/documentation\/supportsdk\/middleware\/onaction(action:getstate:dispatch:next:)","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware\/onAction(action:getState:dispatch:next:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"onAction"},{"kind":"text","text":"("},{"text":"action","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SupportSDK6ActionP","kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"text":"getState","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"GetStateFunction","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK16GetStateFunctiona"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"dispatch"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SupportSDK16DispatchFunctiona","text":"DispatchFunction","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"next"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SupportSDK12NextFunctiona","text":"NextFunction","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"onAction(action:getState:dispatch:next:)"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/AsyncMiddleware":{"url":"\/documentation\/supportsdk\/asyncmiddleware","navigatorTitle":[{"kind":"identifier","text":"AsyncMiddleware"}],"abstract":[{"type":"text","text":"Async Middleware handles actions of type "},{"type":"codeVoice","code":"AsyncAction"}],"title":"AsyncMiddleware","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AsyncMiddleware","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncMiddleware"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/BlockMiddleware":{"kind":"symbol","abstract":[{"text":"Create a middleware inline with a block.","type":"text"}],"url":"\/documentation\/supportsdk\/blockmiddleware","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockMiddleware","type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BlockMiddleware"}],"navigatorTitle":[{"text":"BlockMiddleware","kind":"identifier"}],"title":"BlockMiddleware"}}}