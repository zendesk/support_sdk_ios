{"metadata":{"symbolKind":"protocol","navigatorTitle":[{"text":"AsyncAction","kind":"identifier"}],"modules":[{"name":"SupportSDK"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncAction","kind":"identifier"}],"title":"AsyncAction","roleHeading":"Protocol","externalID":"s:10SupportSDK11AsyncActionP"},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Async action this type of action is intercepted by ","type":"text"},{"code":"AsyncMiddleware","type":"codeVoice"},{"text":" and is not dispatched to the reducer.","type":"text"}],"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/supportsdk\/asyncaction"]}],"identifier":{"url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncAction","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK"]]},"relationshipsSections":[{"title":"Inherits From","identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Action"],"kind":"relationships","type":"inheritsFrom"},{"title":"Conforming Types","identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockAsyncAction"],"kind":"relationships","type":"conformingTypes"}],"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncAction\/execute(getState:dispatch:)"],"generated":true,"anchor":"Instance-Methods"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncAction","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:10SupportSDK6ActionP","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Action","text":"Action","kind":"typeIdentifier"}],"platforms":["iOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Recepie to use "},{"type":"codeVoice","code":"AsyncAction"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Create an ","type":"text"},{"code":"AsyncAction","type":"codeVoice"},{"text":" action","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"In the block passed at init. Perform any operation (dispatching it on your queue)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"When result is ready, call "},{"type":"codeVoice","code":"dispatch"},{"type":"text","text":" passing a new action"}],"type":"paragraph"}]}],"type":"orderedList"},{"inlineContent":[{"type":"text","text":"If the "},{"type":"codeVoice","code":"AsyncMiddleware"},{"type":"text","text":" receives an "},{"type":"codeVoice","code":"AsyncAction"},{"type":"text","text":" it does the following:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Call action.execute passing in the dispatch and get state functions","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Stops the action from propagating to other middlewares and reducers","type":"text"}],"type":"paragraph"}]}],"type":"orderedList"},{"text":"Example","anchor":"Example","type":"heading","level":1},{"text":"Performing an async loading from disk","anchor":"Performing-an-async-loading-from-disk","type":"heading","level":2},{"code":["struct MyDiskAsyncAction: AsyncAction {","","  func execute(getState: @escaping GetStateFunction, dispatch: @escaping DispatchFunction) {","    \/\/ Perform some work in a background thread","    DispatchQueue(label: \"MyQueue\").async {","      \/\/ Load from disk","      \/\/ Process loaded","      \/\/ Do more work","","      \/\/ Maybe consult the current state","      let currentState = api.state","","      \/\/ At a latter time dont forget to dispatch","      dispatch(DataLoadedAction(data: data))","    }","}","","store.dispatch(action: MyDiskAsyncAction())"],"syntax":null,"type":"codeListing"},{"text":"Performing an async network request","anchor":"Performing-an-async-network-request","type":"heading","level":2},{"code":["struct MyURLAsyncAction: AsyncAction {","","  func execute(getState: @escaping GetStateFunction, dispatch: @escaping DispatchFunction) {","    \/\/ First dispatch some action syncrhonously","    dispatch(SomeAction(...))","","    let session = URLSession(configuration: .default)","    \/\/ perform a dataTask","    session.dataTask(with: urlRequest) { data, response, error in","","      if let data = data {","        \/\/ Do something with the data","         dispatch(RequestSucceeded(data: data))","","      } else if let error = error {","","         \/\/ Error happenend","         dispatch(RequestFaile(data: data))","      }","   }","}","","store.dispatch(action: MyURLAsyncAction())"],"syntax":null,"type":"codeListing"}],"kind":"content"}],"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/BlockAsyncAction":{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockAsyncAction","navigatorTitle":[{"text":"BlockAsyncAction","kind":"identifier"}],"abstract":[{"type":"text","text":"Create an "},{"type":"codeVoice","code":"AsyncAction"},{"type":"text","text":" inline by passing a block to the init"},{"type":"text","text":" "},{"type":"text","text":"Check "},{"type":"codeVoice","code":"AsyncAction"},{"type":"text","text":" for more info"}],"title":"BlockAsyncAction","type":"topic","role":"symbol","url":"\/documentation\/supportsdk\/blockasyncaction","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BlockAsyncAction","kind":"identifier"}]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/AsyncAction":{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncAction","navigatorTitle":[{"text":"AsyncAction","kind":"identifier"}],"type":"topic","url":"\/documentation\/supportsdk\/asyncaction","kind":"symbol","abstract":[{"type":"text","text":"Async action this type of action is intercepted by "},{"code":"AsyncMiddleware","type":"codeVoice"},{"type":"text","text":" and is not dispatched to the reducer."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncAction","kind":"identifier"}],"role":"symbol","title":"AsyncAction"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/AsyncAction/execute(getState:dispatch:)":{"url":"\/documentation\/supportsdk\/asyncaction\/execute(getstate:dispatch:)","abstract":[{"text":"Execution block that is executed in the ","type":"text"},{"code":"AsyncMiddleware","type":"codeVoice"},{"text":" ","type":"text"},{"text":"If the ","type":"text"},{"code":"AsyncMiddleware","type":"codeVoice"},{"text":" receives an ","type":"text"},{"code":"AsyncAction","type":"codeVoice"},{"text":" it does the following:","type":"text"}],"required":true,"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncAction\/execute(getState:dispatch:)","title":"execute(getState:dispatch:)","type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"execute","kind":"identifier"},{"text":"(","kind":"text"},{"text":"getState","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SupportSDK16GetStateFunctiona","text":"GetStateFunction","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"dispatch","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SupportSDK16DispatchFunctiona","text":"DispatchFunction","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"title":"SupportSDK","kind":"symbol","abstract":[],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","type":"topic","url":"\/documentation\/supportsdk","role":"collection"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Action":{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Action","navigatorTitle":[{"text":"Action","kind":"identifier"}],"url":"\/documentation\/supportsdk\/action","kind":"symbol","type":"topic","abstract":[{"text":"Action to dispatch to the store","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Action","kind":"identifier"}],"role":"symbol","title":"Action"}}}