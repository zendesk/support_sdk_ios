{"abstract":[{"text":"Middleware protocol that represents a suas store middleware","type":"text"},{"text":" ","type":"text"},{"text":"A middleware helps extending the dispatch logic of Suas.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Middleware"}]}]},{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"A middleware can be used to implement:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Logging that logs the state before and after the reducer changes it"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Perform async network calls and dispatches actions representing the result when the network returns."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Other advanced usagesâ€¦","type":"text"}]}]}],"type":"unorderedList"},{"text":"Example","level":1,"type":"heading","anchor":"Example"},{"type":"paragraph","inlineContent":[{"text":"Implementing a logging middleware.","type":"text"}]},{"syntax":null,"type":"codeListing","code":["class LoggerMiddleware: Middleware {","  var api: MiddlewareAPI?","  var next: DispatchFunction?","","  func onAction(action: Action, getState: @escaping GetStateFunction, dispatch: @escaping DispatchFunction, next: @escaping NextFunction) {","    \/\/ Read the state before any reducer changes it","    print(\"The old state is \\(getState())\")","","    \/\/ Print the action","    print(\"The action is \\(action)\")","","    \/\/ Continue the dispatching process..until the reducer reduces the action","    \/\/ Not calling `next` will prevent the action from reaching the reducer","    next?(action)","","    \/\/ Read the state after any reducer changes it","    print(\"The new state is \\(api?.state)\")","  }","}"]}]}],"kind":"symbol","relationshipsSections":[{"identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncMiddleware","doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockMiddleware","doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/LoggerMiddleware"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"metadata":{"roleHeading":"Protocol","navigatorTitle":[{"kind":"identifier","text":"Middleware"}],"symbolKind":"protocol","role":"symbol","modules":[{"name":"SupportSDK"}],"title":"Middleware","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Middleware"}],"externalID":"s:10SupportSDK10MiddlewareP"},"schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware\/onAction(action:getState:dispatch:next:)"],"title":"Instance Methods","anchor":"Instance-Methods","generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/supportsdk\/middleware"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK"]]},"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/LoggerMiddleware":{"url":"\/documentation\/supportsdk\/loggermiddleware","title":"LoggerMiddleware","kind":"symbol","abstract":[{"text":"LoggerMiddleware that logs the action and state when each action is received","type":"text"},{"text":" ","type":"text"},{"text":"When an action is dispatched, the LoggerMiddleware will print information related to it in the console.","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LoggerMiddleware","kind":"identifier"}],"navigatorTitle":[{"text":"LoggerMiddleware","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/LoggerMiddleware"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/BlockMiddleware":{"navigatorTitle":[{"text":"BlockMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockMiddleware","url":"\/documentation\/supportsdk\/blockmiddleware","type":"topic","abstract":[{"text":"Create a middleware inline with a block.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BlockMiddleware","kind":"identifier"}],"kind":"symbol","title":"BlockMiddleware","role":"symbol"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Middleware/onAction(action:getState:dispatch:next:)":{"title":"onAction(action:getState:dispatch:next:)","role":"symbol","required":true,"kind":"symbol","abstract":[{"text":"Function called when an action is dispatched","type":"text"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware\/onAction(action:getState:dispatch:next:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onAction","kind":"identifier"},{"text":"(","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK6ActionP"},{"text":", ","kind":"text"},{"text":"getState","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"GetStateFunction","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK16GetStateFunctiona"},{"text":", ","kind":"text"},{"text":"dispatch","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"DispatchFunction","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK16DispatchFunctiona"},{"text":", ","kind":"text"},{"text":"next","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NextFunction","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK12NextFunctiona"},{"text":")","kind":"text"}],"url":"\/documentation\/supportsdk\/middleware\/onaction(action:getstate:dispatch:next:)"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"title":"SupportSDK","kind":"symbol","abstract":[],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","type":"topic","url":"\/documentation\/supportsdk","role":"collection"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Middleware":{"kind":"symbol","url":"\/documentation\/supportsdk\/middleware","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Middleware","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware","navigatorTitle":[{"text":"Middleware","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Middleware protocol that represents a suas store middleware"},{"type":"text","text":" "},{"text":"A middleware helps extending the dispatch logic of Suas.","type":"text"}],"title":"Middleware"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/AsyncMiddleware":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncMiddleware","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncMiddleware","kind":"identifier"}],"role":"symbol","url":"\/documentation\/supportsdk\/asyncmiddleware","kind":"symbol","abstract":[{"text":"Async Middleware handles actions of type ","type":"text"},{"type":"codeVoice","code":"AsyncAction"}],"title":"AsyncMiddleware","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncMiddleware"}}}