{"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store"]]},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Add a listener to the store. The listener will be notified when the state changes.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addListener","kind":"identifier"},{"text":"<","kind":"text"},{"text":"StateType","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"forStateType","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"StateType","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"text":".Type, ","kind":"text"},{"text":"stateKey","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StateKey","kind":"typeIdentifier","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/StateKey","preciseIdentifier":"s:10SupportSDK8StateKeya"},{"text":"? = nil, ","kind":"text"},{"text":"if","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"filterBlock","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"FilterFunction","kind":"typeIdentifier","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/FilterFunction","preciseIdentifier":"s:10SupportSDK14FilterFunctiona"},{"text":"<","kind":"text"},{"text":"StateType","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"text":">? = nil, ","kind":"text"},{"text":"callback","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"text":" (","kind":"text"},{"text":"StateType","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"Subscription","kind":"typeIdentifier","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Subscription","preciseIdentifier":"s:10SupportSDK12SubscriptionV"},{"text":"<","kind":"text"},{"text":"StateType","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"text":">","kind":"text"}],"platforms":["iOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"type","content":[{"inlineContent":[{"text":"The type of the state to listen to. If the state type is not found, the listener will not be notified.","type":"text"}],"type":"paragraph"}]},{"name":"stateKey","content":[{"type":"paragraph","inlineContent":[{"text":"(Optional) the state key to listen to. When not passed (or passing nil) the type name from ","type":"text"},{"type":"codeVoice","code":"forStateType"},{"text":" will be used.","type":"text"},{"text":" ","type":"text"},{"text":"Only pass when the state key for the state was changed in the reducer (99% of the times you dont need to set this parameter)","type":"text"}]}]},{"name":"filterBlock","content":[{"inlineContent":[{"type":"text","text":"(Optional) block that receives the old state and the new state."},{"type":"text","text":" "},{"type":"text","text":"It decides wether the notification for the listener should be sent or not."},{"type":"text","text":" "},{"type":"text","text":"When not set, the listener is notified whenever the state changed."}],"type":"paragraph"}]},{"name":"callback","content":[{"inlineContent":[{"type":"text","text":"Notification block called with the new state when the store’s state changed."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Listener’s subscription that can be used to remove the notification and for other listener related stuff."}]}]},{"kind":"content","content":[{"text":"Example","type":"heading","level":1,"anchor":"Example"},{"text":"Adding a listener","type":"heading","level":2,"anchor":"Adding-a-listener"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a simple listener for a "},{"type":"codeVoice","code":"MyState"},{"type":"text","text":" state type"}]},{"syntax":null,"type":"codeListing","code":["let subscription = store.addListener(forStateType: MyState.self) { newState in","  \/\/ Do something with the state","}"]},{"text":"Adding a listener with a filterBlock","type":"heading","level":2,"anchor":"Adding-a-listener-with-a-filterBlock"},{"type":"paragraph","inlineContent":[{"text":"Adding a listener for a state of ","type":"text"},{"code":"TodoItemsState","type":"codeVoice"},{"text":" type with a filter block.","type":"text"},{"text":" ","type":"text"},{"text":"In the filterBlock we check that the new state has more items than the old state.","type":"text"},{"text":" ","type":"text"},{"text":"The Listener will be notified only if the filterBlock returns true.","type":"text"}]},{"syntax":null,"type":"codeListing","code":["let subscription = store.addListener(","  forStateType: TodoItemsState.self,","  if: { old, new in return old.todos.count > new.todos.count }) { newState in","    \/\/ Do something with the state","}"]},{"text":"Adding a listener with a state key","type":"heading","level":2,"anchor":"Adding-a-listener-with-a-state-key"},{"type":"paragraph","inlineContent":[{"text":"Adding a listener for a state of ","type":"text"},{"code":"TodoItemsState","type":"codeVoice"},{"text":" type, the reducer registered the state key to “todos”","type":"text"}]},{"syntax":null,"type":"codeListing","code":["let subscription = store.addListener(forStateType: TodoItemsState.self, stateKey: \"todos\") { newState in","  \/\/ Do something with the state","}"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/supportsdk\/store\/addlistener(forstatetype:statekey:if:callback:)"]}],"sections":[],"identifier":{"url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store\/addListener(forStateType:stateKey:if:callback:)","interfaceLanguage":"swift"},"metadata":{"symbolKind":"method","modules":[{"name":"SupportSDK"}],"roleHeading":"Instance Method","externalID":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF","title":"addListener(forStateType:stateKey:if:callback:)","extendedModule":"SupportSDK","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addListener"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"StateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"forStateType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"stateKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StateKey","preciseIdentifier":"s:10SupportSDK8StateKeya"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"if"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FilterFunction","preciseIdentifier":"s:10SupportSDK14FilterFunctiona"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"kind":"text","text":">?, "},{"kind":"externalParam","text":"callback"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Subscription","preciseIdentifier":"s:10SupportSDK12SubscriptionV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"kind":"text","text":">"}]},"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"title":"SupportSDK","kind":"symbol","abstract":[],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","type":"topic","url":"\/documentation\/supportsdk","role":"collection"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Store":{"kind":"symbol","url":"\/documentation\/supportsdk\/store","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store","navigatorTitle":[{"text":"Store","kind":"identifier"}],"type":"topic","abstract":[{"text":"Store that contains the application state, the reducer logic, the middleware and the listeners","type":"text"}],"title":"Store"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/FilterFunction":{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/FilterFunction","abstract":[{"type":"text","text":"Filter function that decides if the listener should be notified or not"}],"url":"\/documentation\/supportsdk\/filterfunction","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"FilterFunction"}],"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"FilterFunction"}],"title":"FilterFunction","role":"symbol"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Store/addListener(forStateType:stateKey:if:callback:)":{"kind":"symbol","url":"\/documentation\/supportsdk\/store\/addlistener(forstatetype:statekey:if:callback:)","abstract":[{"type":"text","text":"Add a listener to the store. The listener will be notified when the state changes."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addListener","kind":"identifier"},{"text":"<","kind":"text"},{"text":"StateType","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"forStateType","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StateType","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"text":".Type, ","kind":"text"},{"text":"stateKey","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StateKey","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK8StateKeya"},{"text":"?, ","kind":"text"},{"text":"if","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FilterFunction","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK14FilterFunctiona"},{"text":"<","kind":"text"},{"text":"StateType","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"text":">?, ","kind":"text"},{"text":"callback","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"StateType","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"Subscription","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK12SubscriptionV"},{"text":"<","kind":"text"},{"text":"StateType","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"text":">","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store\/addListener(forStateType:stateKey:if:callback:)","title":"addListener(forStateType:stateKey:if:callback:)","role":"symbol"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/StateKey":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StateKey","kind":"identifier"}],"url":"\/documentation\/supportsdk\/statekey","navigatorTitle":[{"text":"StateKey","kind":"identifier"}],"abstract":[{"type":"text","text":"Store state is stored as a Dictionary of [StateKey: Any]"}],"title":"StateKey","type":"topic","kind":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/StateKey","role":"symbol"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Subscription":{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Subscription","title":"Subscription","kind":"symbol","abstract":[{"type":"text","text":"Subscription structure that represents a listener subscription."},{"type":"text","text":" "},{"type":"text","text":"When adding a listener you get a subscription back."},{"type":"text","text":" "},{"type":"text","text":"You can use this subscription to remove the listener, notify about the current state or link the listener lifecycle with an object."}],"url":"\/documentation\/supportsdk\/subscription","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Subscription"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Subscription"}]}}}