{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"EqualsFilter"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/FilterFunction","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK14FilterFunctiona","text":"FilterFunction"},{"kind":"text","text":"<"},{"kind":"keyword","text":"Any"},{"kind":"text","text":">"}]}],"kind":"declarations"},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"In order to use this filter block your state types has to implement ","type":"text"},{"code":"SuasDynamicEquatable","type":"codeVoice"},{"text":" protocol","type":"text"},{"text":" ","type":"text"},{"text":"Note: if you implement ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":" you can implement ","type":"text"},{"code":"SuasDynamicEquatable","type":"codeVoice"},{"text":" without any extra code.","type":"text"},{"text":" ","type":"text"},{"text":"You only have to include ","type":"text"},{"code":"SuasDynamicEquatable","type":"codeVoice"},{"text":" in the list of protocols for your type (check examples).","type":"text"}],"type":"paragraph"},{"text":"Example","level":1,"anchor":"Example","type":"heading"},{"text":"Implementing SuasDynamicEquatable manually","level":2,"anchor":"Implementing-SuasDynamicEquatable-manually","type":"heading"},{"inlineContent":[{"text":"Implementing SuasDynamicEquatable without Equatable","type":"text"}],"type":"paragraph"},{"code":["\/\/ Implement SuasDynamicEquatable manually","struct MyState: SuasDynamicEquatable {","  let value: Int","","  func isEqual(to other: Any) -> Bool {","    \/\/ Cast to same type","    guard let other = other as? MyState else { return false }","","    \/\/ Compare values","    return other.value == self.value","  }","}","","let subscription = store.addListener(forStateType: MyState.self, if: EqualsFilter) { newState in","  \/\/ use new state","}"],"type":"codeListing","syntax":null},{"text":"Implementing SuasDynamicEquatable as an extension","level":2,"anchor":"Implementing-SuasDynamicEquatable-as-an-extension","type":"heading"},{"inlineContent":[{"text":"If your type implement equatable","type":"text"}],"type":"paragraph"},{"code":["struct MyState: Equatable {","  let value: Int","  static func ==(lhs: MyState, rhs: MyState) -> Bool { ... }","}"],"type":"codeListing","syntax":null},{"inlineContent":[{"text":"You dont need to implement ","type":"text"},{"code":"SuasDynamicEquatable","type":"codeVoice"},{"text":" just add it as an extension to ","type":"text"},{"code":"MyState","type":"codeVoice"},{"text":". No extra code needed.","type":"text"}],"type":"paragraph"},{"code":["extension MyState: SuasDynamicEquatable { }"],"type":"codeListing","syntax":null},{"inlineContent":[{"code":"EqualsFilter","type":"codeVoice"},{"type":"text","text":" now works with "},{"code":"MyState","type":"codeVoice"}],"type":"paragraph"},{"code":["let subscription = store.addListener(forStateType: MyState.self, if: EqualsFilter) { newState in","  \/\/ use new state","}"],"type":"codeListing","syntax":null}],"kind":"content"}],"variants":[{"paths":["\/documentation\/supportsdk\/equalsfilter"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","abstract":[{"type":"text","text":"Listener filter callback that returns true if the old state and the new state are not equal."},{"type":"text","text":" "},{"type":"text","text":"You can use this filter function when adding a listener if you want your notification function to be called when the state changes."}],"metadata":{"symbolKind":"var","modules":[{"name":"SupportSDK"}],"role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EqualsFilter","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SupportSDK14FilterFunctiona","text":"FilterFunction","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Any","kind":"keyword"},{"text":">","kind":"text"}],"title":"EqualsFilter","roleHeading":"Global Variable","externalID":"s:10SupportSDK12EqualsFilterySbyp_yptcvp"},"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK"]]},"identifier":{"url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/EqualsFilter","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"title":"SupportSDK","kind":"symbol","abstract":[],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","type":"topic","url":"\/documentation\/supportsdk","role":"collection"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/FilterFunction":{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/FilterFunction","abstract":[{"type":"text","text":"Filter function that decides if the listener should be notified or not"}],"url":"\/documentation\/supportsdk\/filterfunction","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"FilterFunction"}],"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"FilterFunction"}],"title":"FilterFunction","role":"symbol"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/EqualsFilter":{"url":"\/documentation\/supportsdk\/equalsfilter","abstract":[{"type":"text","text":"Listener filter callback that returns true if the old state and the new state are not equal."},{"type":"text","text":" "},{"type":"text","text":"You can use this filter function when adding a listener if you want your notification function to be called when the state changes."}],"title":"EqualsFilter","type":"topic","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"EqualsFilter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK14FilterFunctiona","text":"FilterFunction"},{"kind":"text","text":"<"},{"kind":"keyword","text":"Any"},{"kind":"text","text":">"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/EqualsFilter"}}}