{"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/+(_:_:)-8bv54"},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"+","kind":"identifier"},{"kind":"text","text":" "},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"R2"},{"text":">(","kind":"text"},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"text":"R1","preciseIdentifier":"s:10SupportSDK1poiyAA15CombinedReducerCx_q_tAA0D0RzAaER_r0_lF2R1L_xmfp","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"text":"R2","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK1poiyAA15CombinedReducerCx_q_tAA0D0RzAaER_r0_lF2R2L_q_mfp"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:10SupportSDK15CombinedReducerC","text":"CombinedReducer","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/CombinedReducer","kind":"typeIdentifier"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"R1","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:10SupportSDK7ReducerP","text":"Reducer","kind":"typeIdentifier","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Reducer"},{"kind":"text","text":", "},{"text":"R2","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Reducer","preciseIdentifier":"s:10SupportSDK7ReducerP","text":"Reducer"}],"platforms":["iOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":1,"type":"heading","anchor":"Example","text":"Example"},{"type":"heading","anchor":"Combine-reducers","text":"Combine reducers","level":2},{"inlineContent":[{"type":"text","text":"If your application has two screens, you can model that with two states, for example "},{"code":"TodoList","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Settings","type":"codeVoice"},{"type":"text","text":" states."},{"type":"text","text":" "},{"text":"We can then create two reducers for each of these states.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let todoReducer = BlockReducer(state: TodoList.self) { state, action in","  guard let newState = state as? Int else { return state }","","  if action is SomeAction {","    return newState + 1","  }","","  return newState","}","","let settingsReducer = BlockReducer(state: Settings.self) { state, action in","  guard let newState = state as? Int else { return state }","","  if action is SomeAction {","    return newState + 1","  }","","  return newState","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"We can then combine these 2 reducers with:"}]},{"syntax":null,"type":"codeListing","code":["let store = Suas.createStore(","  reducer: todoReducer + settingsReducer",")"]},{"inlineContent":[{"type":"codeVoice","code":"todoReducer"},{"type":"text","text":" will handle the “TodoList” key of state and "},{"code":"settingsReducer","type":"codeVoice"},{"type":"text","text":" will handle the “Settings” portoon of the full Store state"}],"type":"paragraph"},{"text":"Combine reducers with custom state key","type":"heading","anchor":"Combine-reducers-with-custom-state-key","level":2},{"inlineContent":[{"text":"If a store has a state with two keys “key1” and “key2”. We can register a reducer for each one of these keys.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"We create two reducers with "},{"code":"stateKey","type":"codeVoice"},{"type":"text","text":"s of “key1” and “key2”"}]},{"syntax":null,"code":["let myReducer1 = BlockReducer(state: 1, key: \"key1\") { state, action in","  guard let newState = state as? Int else { return state }","","  if action is SomeAction {","    return newState + 1","  }","","  return newState","}","","let myReducer2 = BlockReducer(state: 1, key: \"key2\") { state, action in","  guard let newState = state as? Int else { return state }","","  if action is SomeAction {","    return newState + 1","  }","","  return newState","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"We can then combine these 2 reducers with:"}],"type":"paragraph"},{"code":["let store = Suas.createStore(","  reducer: myReducer1 + myReducer2",")"],"type":"codeListing","syntax":null},{"inlineContent":[{"type":"codeVoice","code":"myReducer1"},{"text":" will handle the “key1” key of state and ","type":"text"},{"type":"codeVoice","code":"myReducer2"},{"type":"text","text":" will handle the “key2” key of state"}],"type":"paragraph"}]}],"abstract":[{"type":"text","text":"Combines two reducers. The combined reducer calls each of its internal reducer for a each paricular state key."}],"sections":[],"metadata":{"symbolKind":"op","roleHeading":"Operator","role":"symbol","externalID":"s:10SupportSDK1poiyAA15CombinedReducerCx_q_tAA0D0RzAaER_r0_lF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"+"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R1"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"R2"},{"text":">(","kind":"text"},{"text":"R1","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK1poiyAA15CombinedReducerCx_q_tAA0D0RzAaER_r0_lF2R1L_xmfp"},{"kind":"text","text":", "},{"text":"R2","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK1poiyAA15CombinedReducerCx_q_tAA0D0RzAaER_r0_lF2R2L_q_mfp"},{"text":") -> ","kind":"text"},{"text":"CombinedReducer","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK15CombinedReducerC"}],"modules":[{"name":"SupportSDK"}],"title":"+(_:_:)"},"variants":[{"paths":["\/documentation\/supportsdk\/+(_:_:)-8bv54"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"url":"\/documentation\/supportsdk","title":"SupportSDK","kind":"symbol","abstract":[],"role":"collection","type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/+(_:_:)-8bv54":{"title":"+(_:_:)","kind":"symbol","abstract":[{"text":"Combines two reducers. The combined reducer calls each of its internal reducer for a each paricular state key.","type":"text"}],"url":"\/documentation\/supportsdk\/+(_:_:)-8bv54","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"+"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"R1","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"R2","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"R1","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK1poiyAA15CombinedReducerCx_q_tAA0D0RzAaER_r0_lF2R1L_xmfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK1poiyAA15CombinedReducerCx_q_tAA0D0RzAaER_r0_lF2R2L_q_mfp","text":"R2"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK15CombinedReducerC","text":"CombinedReducer"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/+(_:_:)-8bv54"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/CombinedReducer":{"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CombinedReducer"}],"title":"CombinedReducer","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/CombinedReducer","navigatorTitle":[{"text":"CombinedReducer","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Reducer that represents a combination of two reducers","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This reducers is not to be implemented by hand. You combine reducer by adding them with the "},{"type":"codeVoice","code":"+"},{"text":" operator.","type":"text"}],"type":"topic","url":"\/documentation\/supportsdk\/combinedreducer"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Reducer":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"title":"Reducer","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Reducer","navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"role":"symbol","abstract":[{"text":"Protocol that represents a reducer","type":"text"}],"url":"\/documentation\/supportsdk\/reducer","type":"topic"}}}