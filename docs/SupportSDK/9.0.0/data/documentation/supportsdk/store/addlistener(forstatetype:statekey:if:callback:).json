{"abstract":[{"type":"text","text":"Add a listener to the store. The listener will be notified when the state changes."}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store"]]},"metadata":{"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"addListener","kind":"identifier"},{"text":"<","kind":"text"},{"text":"StateType","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"forStateType","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StateType","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"text":".Type, ","kind":"text"},{"kind":"externalParam","text":"stateKey"},{"text":": ","kind":"text"},{"text":"StateKey","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK8StateKeya"},{"text":"?, ","kind":"text"},{"text":"if","kind":"externalParam"},{"kind":"text","text":": "},{"text":"FilterFunction","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK14FilterFunctiona"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp","text":"StateType"},{"text":">?, ","kind":"text"},{"text":"callback","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp","text":"StateType","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"text":"Subscription","preciseIdentifier":"s:10SupportSDK12SubscriptionV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp","kind":"typeIdentifier","text":"StateType"},{"text":">","kind":"text"}],"title":"addListener(forStateType:stateKey:if:callback:)","externalID":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF","extendedModule":"SupportSDK","symbolKind":"method","role":"symbol","modules":[{"name":"SupportSDK"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addListener","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"StateType"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"forStateType"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"kind":"text","text":".Type, "},{"text":"stateKey","kind":"externalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/StateKey","preciseIdentifier":"s:10SupportSDK8StateKeya","text":"StateKey","kind":"typeIdentifier"},{"text":"? = nil, ","kind":"text"},{"text":"if","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"filterBlock","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"FilterFunction","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/FilterFunction","preciseIdentifier":"s:10SupportSDK14FilterFunctiona"},{"kind":"text","text":"<"},{"text":"StateType","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"kind":"text","text":">? = nil, "},{"text":"callback","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"attribute","text":"@escaping"},{"text":" (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp","text":"StateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Subscription","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Subscription","preciseIdentifier":"s:10SupportSDK12SubscriptionV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp","text":"StateType"},{"kind":"text","text":">"}],"platforms":["iOS"]}]},{"parameters":[{"name":"type","content":[{"type":"paragraph","inlineContent":[{"text":"The type of the state to listen to. If the state type is not found, the listener will not be notified.","type":"text"}]}]},{"name":"stateKey","content":[{"inlineContent":[{"type":"text","text":"(Optional) the state key to listen to. When not passed (or passing nil) the type name from "},{"type":"codeVoice","code":"forStateType"},{"type":"text","text":" will be used."},{"type":"text","text":" "},{"type":"text","text":"Only pass when the state key for the state was changed in the reducer (99% of the times you dont need to set this parameter)"}],"type":"paragraph"}]},{"name":"filterBlock","content":[{"inlineContent":[{"type":"text","text":"(Optional) block that receives the old state and the new state."},{"type":"text","text":" "},{"type":"text","text":"It decides wether the notification for the listener should be sent or not."},{"text":" ","type":"text"},{"type":"text","text":"When not set, the listener is notified whenever the state changed."}],"type":"paragraph"}]},{"name":"callback","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Notification block called with the new state when the store’s state changed."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Listener’s subscription that can be used to remove the notification and for other listener related stuff."}]}]},{"content":[{"level":1,"type":"heading","text":"Example","anchor":"Example"},{"level":2,"type":"heading","anchor":"Adding-a-listener","text":"Adding a listener"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a simple listener for a "},{"type":"codeVoice","code":"MyState"},{"text":" state type","type":"text"}]},{"code":["let subscription = store.addListener(forStateType: MyState.self) { newState in","  \/\/ Do something with the state","}"],"syntax":null,"type":"codeListing"},{"type":"heading","text":"Adding a listener with a filterBlock","level":2,"anchor":"Adding-a-listener-with-a-filterBlock"},{"inlineContent":[{"text":"Adding a listener for a state of ","type":"text"},{"code":"TodoItemsState","type":"codeVoice"},{"text":" type with a filter block.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"In the filterBlock we check that the new state has more items than the old state."},{"type":"text","text":" "},{"text":"The Listener will be notified only if the filterBlock returns true.","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["let subscription = store.addListener(","  forStateType: TodoItemsState.self,","  if: { old, new in return old.todos.count > new.todos.count }) { newState in","    \/\/ Do something with the state","}"],"type":"codeListing"},{"anchor":"Adding-a-listener-with-a-state-key","type":"heading","level":2,"text":"Adding a listener with a state key"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Adding a listener for a state of "},{"type":"codeVoice","code":"TodoItemsState"},{"text":" type, the reducer registered the state key to “todos”","type":"text"}]},{"code":["let subscription = store.addListener(forStateType: TodoItemsState.self, stateKey: \"todos\") { newState in","  \/\/ Do something with the state","}"],"syntax":null,"type":"codeListing"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/supportsdk\/store\/addlistener(forstatetype:statekey:if:callback:)"]}],"kind":"symbol","identifier":{"url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store\/addListener(forStateType:stateKey:if:callback:)","interfaceLanguage":"swift"},"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/StateKey":{"kind":"symbol","url":"\/documentation\/supportsdk\/statekey","navigatorTitle":[{"text":"StateKey","kind":"identifier"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/StateKey","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"StateKey","kind":"identifier"}],"role":"symbol","title":"StateKey","type":"topic","abstract":[{"type":"text","text":"Store state is stored as a Dictionary of [StateKey: Any]"}]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/FilterFunction":{"url":"\/documentation\/supportsdk\/filterfunction","title":"FilterFunction","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"FilterFunction"}],"abstract":[{"text":"Filter function that decides if the listener should be notified or not","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/FilterFunction","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"FilterFunction","kind":"identifier"}]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Store/addListener(forStateType:stateKey:if:callback:)":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/supportsdk\/store\/addlistener(forstatetype:statekey:if:callback:)","title":"addListener(forStateType:stateKey:if:callback:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"addListener","kind":"identifier"},{"text":"<","kind":"text"},{"text":"StateType","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"forStateType"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"kind":"text","text":".Type, "},{"text":"stateKey","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StateKey","preciseIdentifier":"s:10SupportSDK8StateKeya","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"if"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK14FilterFunctiona","text":"FilterFunction"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp","text":"StateType"},{"text":">?, ","kind":"text"},{"kind":"externalParam","text":"callback"},{"kind":"text","text":": ("},{"text":"StateType","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"kind":"text","text":") -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK12SubscriptionV","text":"Subscription"},{"text":"<","kind":"text"},{"text":"StateType","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Add a listener to the store. The listener will be notified when the state changes."}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store\/addListener(forStateType:stateKey:if:callback:)"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Subscription":{"url":"\/documentation\/supportsdk\/subscription","role":"symbol","abstract":[{"type":"text","text":"Subscription structure that represents a listener subscription."},{"text":" ","type":"text"},{"text":"When adding a listener you get a subscription back.","type":"text"},{"text":" ","type":"text"},{"text":"You can use this subscription to remove the listener, notify about the current state or link the listener lifecycle with an object.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Subscription"}],"navigatorTitle":[{"text":"Subscription","kind":"identifier"}],"kind":"symbol","type":"topic","title":"Subscription","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Subscription"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"url":"\/documentation\/supportsdk","title":"SupportSDK","kind":"symbol","abstract":[],"role":"collection","type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Store":{"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}],"url":"\/documentation\/supportsdk\/store","type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store","navigatorTitle":[{"text":"Store","kind":"identifier"}],"title":"Store","role":"symbol","abstract":[{"type":"text","text":"Store that contains the application state, the reducer logic, the middleware and the listeners"}]}}}