{"variants":[{"paths":["\/documentation\/supportsdk\/store\/addlistener(if:stateselector:callback:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store\/addListener(if:stateSelector:callback:)"},"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"addListener"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"StateType"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"if"},{"kind":"text","text":" "},{"kind":"internalParam","text":"filterBlock"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SupportSDK14FilterFunctiona","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/FilterFunction","kind":"typeIdentifier","text":"FilterFunction"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/State","preciseIdentifier":"s:10SupportSDK5StateV","text":"State"},{"kind":"text","text":">? = nil, "},{"text":"stateSelector","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"text":" ","kind":"text"},{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/StateSelector","kind":"typeIdentifier","text":"StateSelector","preciseIdentifier":"s:10SupportSDK13StateSelectora"},{"kind":"text","text":"<"},{"text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"callback","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"text":" (","kind":"text"},{"preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp","kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":") -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:10SupportSDK12SubscriptionV","text":"Subscription","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Subscription","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp"},{"text":">","kind":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"(Optional) block that receives the old state and the new state."},{"type":"text","text":" "},{"text":"It decides wether the notification for the listener should be sent or not.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"When not set, the listener is notified whenever the state changed."}]}],"name":"filterBlock"},{"name":"stateSelector","content":[{"type":"paragraph","inlineContent":[{"text":"state selector block that selects a part of the full state","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Notification block called with the new state when the store’s state changed.","type":"text"}],"type":"paragraph"}],"name":"callback"}]},{"content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Listener’s subscription that can be used to remove the notification and for other listener related stuff."}]}],"kind":"content"},{"content":[{"type":"heading","text":"Example","anchor":"Example","level":1},{"text":"Adding a listener with a state selector","level":2,"anchor":"Adding-a-listener-with-a-state-selector","type":"heading"},{"inlineContent":[{"type":"text","text":"Add a simple listener for the full state with a state selector that selects part of it."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Create a state selector that selects and creates a ","type":"text"},{"type":"codeVoice","code":"TodoItemsState"},{"text":" from the full ","type":"text"},{"code":"Store","type":"codeVoice"},{"text":" state.","type":"text"}]},{"syntax":null,"type":"codeListing","code":["let stateSelector: StateSelector<TodoItemsState> = { state in","  \/\/ Read values from the store","  let value1 = state.value(forKeyOfType: SomeType.self)","  let value2 = state.value(forKey: \"someKey\")","","  \/\/ Create and return a TodoItemsState","  return TodoItemsState(.....)","}"]},{"type":"paragraph","inlineContent":[{"text":"Add a listener with the state selector and","type":"text"}]},{"code":["let subscription = store.addListener(stateSelector: stateSelector) { newState in","  \/\/ newState here is a TodoItemsState","}"],"type":"codeListing","syntax":null},{"level":2,"type":"heading","anchor":"Adding-a-listener-with-a-state-selector-and-a-filter-block","text":"Adding a listener with a state selector and a filter block"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a simple listener for the full state with a state selector that selects part of it and a filter block that decide when to notify."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a state selector that selects and creates a "},{"code":"TodoItemsState","type":"codeVoice"},{"type":"text","text":" from the full "},{"type":"codeVoice","code":"Store"},{"type":"text","text":" state."}]},{"type":"codeListing","code":["let stateSelector: StateSelector<TodoItemsState> = { state in","  \/\/ Read values from the store","  let value1 = state.value(forKeyOfType: SomeType.self)","  let value2 = state.value(forKey: \"someKey\")","","  \/\/ Create and return a TodoItemsState","  return TodoItemsState(.....)","}"],"syntax":null},{"inlineContent":[{"text":"Add a filter block that decides when to notify","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let filterBlock: FilterFunction<State> = { oldState, newState in","  \/\/ Read a string from the oldState and newState","  \/\/ oldState and newState are the full Store state","  let value1 = oldState.value(forKey: \"someKey\", ofType: String.self)","  let value2 = newState.value(forKey: \"someKey\", ofType: String.self)","","  \/\/ Compare","  return value1 != value2","}"]},{"type":"paragraph","inlineContent":[{"text":"Add a listener with the state selector and","type":"text"}]},{"syntax":null,"code":["let subscription = store.addListener(stateSelector: stateSelector) { newState in","  \/\/ newState here is a TodoItemsState","}"],"type":"codeListing"}],"kind":"content"}],"abstract":[{"text":"Add a listener to the store with a stateSelector","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"extendedModule":"SupportSDK","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addListener","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"StateType"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"if"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SupportSDK14FilterFunctiona","text":"FilterFunction","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StateV","text":"State"},{"text":">?, ","kind":"text"},{"text":"stateSelector","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SupportSDK13StateSelectora","kind":"typeIdentifier","text":"StateSelector"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp","text":"StateType"},{"kind":"text","text":">, "},{"text":"callback","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"StateType","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10SupportSDK12SubscriptionV","text":"Subscription","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"StateType","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp"},{"kind":"text","text":">"}],"externalID":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF","roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"SupportSDK"}],"title":"addListener(if:stateSelector:callback:)"},"kind":"symbol","sections":[],"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"url":"\/documentation\/supportsdk","title":"SupportSDK","kind":"symbol","abstract":[],"role":"collection","type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/StateSelector":{"url":"\/documentation\/supportsdk\/stateselector","role":"symbol","abstract":[{"text":"Function that selects part of the full state","type":"text"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StateSelector","kind":"identifier"}],"navigatorTitle":[{"text":"StateSelector","kind":"identifier"}],"kind":"symbol","title":"StateSelector","type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/StateSelector"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Subscription":{"url":"\/documentation\/supportsdk\/subscription","role":"symbol","abstract":[{"type":"text","text":"Subscription structure that represents a listener subscription."},{"text":" ","type":"text"},{"text":"When adding a listener you get a subscription back.","type":"text"},{"text":" ","type":"text"},{"text":"You can use this subscription to remove the listener, notify about the current state or link the listener lifecycle with an object.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Subscription"}],"navigatorTitle":[{"text":"Subscription","kind":"identifier"}],"kind":"symbol","type":"topic","title":"Subscription","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Subscription"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/FilterFunction":{"url":"\/documentation\/supportsdk\/filterfunction","title":"FilterFunction","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"FilterFunction"}],"abstract":[{"text":"Filter function that decides if the listener should be notified or not","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/FilterFunction","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"FilterFunction","kind":"identifier"}]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/State":{"type":"topic","role":"symbol","url":"\/documentation\/supportsdk\/state","kind":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/State","abstract":[{"type":"text","text":"Structure that represents the store state. The store state is kept as a "},{"type":"codeVoice","code":"Dictionary"},{"type":"text","text":" with "},{"code":"String","type":"codeVoice"},{"type":"text","text":" Keys and "},{"code":"Any","type":"codeVoice"},{"text":" Values (","type":"text"},{"code":"[String: Any]","type":"codeVoice"},{"text":")","type":"text"}],"title":"State","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"State"}],"navigatorTitle":[{"text":"State","kind":"identifier"}]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Store/addListener(if:stateSelector:callback:)":{"url":"\/documentation\/supportsdk\/store\/addlistener(if:stateselector:callback:)","role":"symbol","abstract":[{"text":"Add a listener to the store with a stateSelector","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"addListener","kind":"identifier"},{"text":"<","kind":"text"},{"text":"StateType","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"if","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FilterFunction","preciseIdentifier":"s:10SupportSDK14FilterFunctiona","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:10SupportSDK5StateV","kind":"typeIdentifier","text":"State"},{"text":">?, ","kind":"text"},{"kind":"externalParam","text":"stateSelector"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SupportSDK13StateSelectora","kind":"typeIdentifier","text":"StateSelector"},{"text":"<","kind":"text"},{"text":"StateType","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"callback"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp","text":"StateType","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10SupportSDK12SubscriptionV","kind":"typeIdentifier","text":"Subscription"},{"text":"<","kind":"text"},{"text":"StateType","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp"},{"text":">","kind":"text"}],"kind":"symbol","title":"addListener(if:stateSelector:callback:)","type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store\/addListener(if:stateSelector:callback:)"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Store":{"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}],"url":"\/documentation\/supportsdk\/store","type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store","navigatorTitle":[{"text":"Store","kind":"identifier"}],"title":"Store","role":"symbol","abstract":[{"type":"text","text":"Store that contains the application state, the reducer logic, the middleware and the listeners"}]}}}