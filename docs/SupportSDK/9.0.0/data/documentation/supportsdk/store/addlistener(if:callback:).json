{"metadata":{"externalID":"s:10SupportSDK5StoreC11addListener2if8callbackAA12SubscriptionVyAA5StateVGSbAJ_AJtcSg_yAJctF","title":"addListener(if:callback:)","extendedModule":"SupportSDK","role":"symbol","modules":[{"name":"SupportSDK"}],"symbolKind":"method","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"addListener"},{"text":"(","kind":"text"},{"text":"if","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FilterFunction","preciseIdentifier":"s:10SupportSDK14FilterFunctiona"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:10SupportSDK5StateV","text":"State","kind":"typeIdentifier"},{"text":">?, ","kind":"text"},{"text":"callback","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:10SupportSDK5StateV"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"text":"Subscription","preciseIdentifier":"s:10SupportSDK12SubscriptionV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","preciseIdentifier":"s:10SupportSDK5StateV","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store\/addListener(if:callback:)"},"abstract":[{"type":"text","text":"Add a listener to the store. The listener will be notified when the state changes."},{"text":" ","type":"text"},{"type":"text","text":"The listener will be notified with the full state when"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"addListener"},{"text":"(","kind":"text"},{"text":"if","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"filterBlock"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"FilterFunction","preciseIdentifier":"s:10SupportSDK14FilterFunctiona","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/FilterFunction"},{"text":"<","kind":"text"},{"text":"State","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/State","preciseIdentifier":"s:10SupportSDK5StateV","kind":"typeIdentifier"},{"kind":"text","text":">? = nil, "},{"kind":"externalParam","text":"callback"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"text":" (","kind":"text"},{"preciseIdentifier":"s:10SupportSDK5StateV","kind":"typeIdentifier","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/State","text":"State"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Subscription","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Subscription","preciseIdentifier":"s:10SupportSDK12SubscriptionV"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:10SupportSDK5StateV","kind":"typeIdentifier","text":"State","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/State"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["iOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"(Optional) block that receives the old state and the new state."},{"type":"text","text":" "},{"type":"text","text":"AnyObjectIt decides wether the notification for the listener should be sent or not."},{"type":"text","text":" "},{"type":"text","text":"When not set, the listener is notified whenever the state changed."}],"type":"paragraph"}],"name":"filterBlock"},{"name":"callback","content":[{"inlineContent":[{"type":"text","text":"Notification block called with the new state when the store’s state changed."}],"type":"paragraph"}]}]},{"content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"The Listener’s subscription that can be used to remove the notification and for other listener related stuff.","type":"text"}]}],"kind":"content"},{"content":[{"text":"Example","type":"heading","level":1,"anchor":"Example"},{"text":"Adding a listener","anchor":"Adding-a-listener","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a simple listener for the full state."}]},{"type":"codeListing","syntax":null,"code":["let subscription = addListener { newState in","  \/\/ Do something with the state","","  \/\/ Get value of Any? Type with key \"TheKey\"","  let value1 = newState.value(forKey: \"TheKey\")","","  \/\/ Get value of MyState? Type with key \"MyState\" (Key value = the type of the state we want)","  let value2 = newState.value(forKeyOfType: MyState.self)","","  \/\/ Get value of MyState? Type with key \"TheKey\"","  let value3 = newState.value(forKey: \"TheKey\", ofType: MyState.self)","}"]},{"level":2,"anchor":"Adding-a-listener-with-a-filterBlock","text":"Adding a listener with a filterBlock","type":"heading"},{"inlineContent":[{"type":"text","text":"Adding a listener for the full state with a filter block."},{"type":"text","text":" "},{"type":"text","text":"In the filterBlock we check that the new state has more than 10 items."},{"type":"text","text":" "},{"type":"text","text":"The Listener will be notified only if the filterBlock returns true."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let subscription = store.addListener(if: { oldState, newState in","","  \/\/ Read values from the oldState and the newState","  let old = oldState.value(forKeyOfType: TodoItemsState.self)!","  let new = newState.value(forKeyOfType: TodoItemsState.self)!","","  return new.todos.count > 10","}) { newState in","  \/\/ Do something with the state","}"]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/supportsdk\/store\/addlistener(if:callback:)"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/FilterFunction":{"url":"\/documentation\/supportsdk\/filterfunction","title":"FilterFunction","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"FilterFunction"}],"abstract":[{"text":"Filter function that decides if the listener should be notified or not","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/FilterFunction","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"FilterFunction","kind":"identifier"}]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Store/addListener(if:callback:)":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/supportsdk\/store\/addlistener(if:callback:)","title":"addListener(if:callback:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"addListener"},{"kind":"text","text":"("},{"text":"if","kind":"externalParam"},{"kind":"text","text":": "},{"text":"FilterFunction","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK14FilterFunctiona"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StateV","text":"State"},{"text":">?, ","kind":"text"},{"kind":"externalParam","text":"callback"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:10SupportSDK5StateV"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK12SubscriptionV","text":"Subscription"},{"kind":"text","text":"<"},{"text":"State","preciseIdentifier":"s:10SupportSDK5StateV","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Add a listener to the store. The listener will be notified when the state changes."},{"type":"text","text":" "},{"type":"text","text":"The listener will be notified with the full state when"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store\/addListener(if:callback:)"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Subscription":{"url":"\/documentation\/supportsdk\/subscription","role":"symbol","abstract":[{"type":"text","text":"Subscription structure that represents a listener subscription."},{"text":" ","type":"text"},{"text":"When adding a listener you get a subscription back.","type":"text"},{"text":" ","type":"text"},{"text":"You can use this subscription to remove the listener, notify about the current state or link the listener lifecycle with an object.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Subscription"}],"navigatorTitle":[{"text":"Subscription","kind":"identifier"}],"kind":"symbol","type":"topic","title":"Subscription","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Subscription"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"url":"\/documentation\/supportsdk","title":"SupportSDK","kind":"symbol","abstract":[],"role":"collection","type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Store":{"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}],"url":"\/documentation\/supportsdk\/store","type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store","navigatorTitle":[{"text":"Store","kind":"identifier"}],"title":"Store","role":"symbol","abstract":[{"type":"text","text":"Store that contains the application state, the reducer logic, the middleware and the listeners"}]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/State":{"type":"topic","role":"symbol","url":"\/documentation\/supportsdk\/state","kind":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/State","abstract":[{"type":"text","text":"Structure that represents the store state. The store state is kept as a "},{"type":"codeVoice","code":"Dictionary"},{"type":"text","text":" with "},{"code":"String","type":"codeVoice"},{"type":"text","text":" Keys and "},{"code":"Any","type":"codeVoice"},{"text":" Values (","type":"text"},{"code":"[String: Any]","type":"codeVoice"},{"text":")","type":"text"}],"title":"State","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"State"}],"navigatorTitle":[{"text":"State","kind":"identifier"}]}}}