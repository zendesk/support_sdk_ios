{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Middleware","kind":"identifier"}],"platforms":["iOS"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"A middleware can be used to implement:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Logging that logs the state before and after the reducer changes it"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Perform async network calls and dispatches actions representing the result when the network returns.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Other advanced usagesâ€¦"}]}]}],"type":"unorderedList"},{"level":1,"type":"heading","text":"Example","anchor":"Example"},{"inlineContent":[{"type":"text","text":"Implementing a logging middleware."}],"type":"paragraph"},{"code":["class LoggerMiddleware: Middleware {","  var api: MiddlewareAPI?","  var next: DispatchFunction?","","  func onAction(action: Action, getState: @escaping GetStateFunction, dispatch: @escaping DispatchFunction, next: @escaping NextFunction) {","    \/\/ Read the state before any reducer changes it","    print(\"The old state is \\(getState())\")","","    \/\/ Print the action","    print(\"The action is \\(action)\")","","    \/\/ Continue the dispatching process..until the reducer reduces the action","    \/\/ Not calling `next` will prevent the action from reaching the reducer","    next?(action)","","    \/\/ Read the state after any reducer changes it","    print(\"The new state is \\(api?.state)\")","  }","}"],"syntax":null,"type":"codeListing"}]}],"variants":[{"paths":["\/documentation\/supportsdk\/middleware"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"navigatorTitle":[{"text":"Middleware","kind":"identifier"}],"externalID":"s:10SupportSDK10MiddlewareP","modules":[{"name":"SupportSDK"}],"symbolKind":"protocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Middleware","kind":"identifier"}],"roleHeading":"Protocol","title":"Middleware","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK"]]},"identifier":{"url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware","interfaceLanguage":"swift"},"abstract":[{"text":"Middleware protocol that represents a suas store middleware","type":"text"},{"type":"text","text":" "},{"type":"text","text":"A middleware helps extending the dispatch logic of Suas."}],"topicSections":[{"identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware\/onAction(action:getState:dispatch:next:)"],"title":"Instance Methods"}],"sections":[],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"relationshipsSections":[{"identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncMiddleware","doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockMiddleware","doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/LoggerMiddleware"],"title":"Conforming Types","kind":"relationships","type":"conformingTypes"}],"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Middleware":{"url":"\/documentation\/supportsdk\/middleware","type":"topic","role":"symbol","kind":"symbol","abstract":[{"text":"Middleware protocol that represents a suas store middleware","type":"text"},{"type":"text","text":" "},{"type":"text","text":"A middleware helps extending the dispatch logic of Suas."}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware","title":"Middleware","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Middleware"}],"navigatorTitle":[{"text":"Middleware","kind":"identifier"}]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/LoggerMiddleware":{"url":"\/documentation\/supportsdk\/loggermiddleware","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/LoggerMiddleware","abstract":[{"type":"text","text":"LoggerMiddleware that logs the action and state when each action is received"},{"type":"text","text":" "},{"text":"When an action is dispatched, the LoggerMiddleware will print information related to it in the console.","type":"text"}],"title":"LoggerMiddleware","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LoggerMiddleware"}],"navigatorTitle":[{"text":"LoggerMiddleware","kind":"identifier"}]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"url":"\/documentation\/supportsdk","title":"SupportSDK","kind":"symbol","abstract":[],"role":"collection","type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/BlockMiddleware":{"kind":"symbol","url":"\/documentation\/supportsdk\/blockmiddleware","navigatorTitle":[{"kind":"identifier","text":"BlockMiddleware"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockMiddleware","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"BlockMiddleware","kind":"identifier"}],"role":"symbol","title":"BlockMiddleware","type":"topic","abstract":[{"text":"Create a middleware inline with a block.","type":"text"}]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Middleware/onAction(action:getState:dispatch:next:)":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/supportsdk\/middleware\/onaction(action:getstate:dispatch:next:)","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware\/onAction(action:getState:dispatch:next:)","title":"onAction(action:getState:dispatch:next:)","abstract":[{"type":"text","text":"Function called when an action is dispatched"}],"required":true,"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"onAction","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"action"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK6ActionP","text":"Action"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"getState"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK16GetStateFunctiona","text":"GetStateFunction"},{"kind":"text","text":", "},{"text":"dispatch","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK16DispatchFunctiona","text":"DispatchFunction"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"next"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NextFunction","preciseIdentifier":"s:10SupportSDK12NextFunctiona"},{"text":")","kind":"text"}]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/AsyncMiddleware":{"url":"\/documentation\/supportsdk\/asyncmiddleware","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncMiddleware"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncMiddleware","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncMiddleware"}],"role":"symbol","title":"AsyncMiddleware","type":"topic","abstract":[{"text":"Async Middleware handles actions of type ","type":"text"},{"type":"codeVoice","code":"AsyncAction"}]}}}