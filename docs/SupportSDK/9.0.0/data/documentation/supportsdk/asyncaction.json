{"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK"]]},"sections":[],"abstract":[{"type":"text","text":"Async action this type of action is intercepted by "},{"code":"AsyncMiddleware","type":"codeVoice"},{"type":"text","text":" and is not dispatched to the reducer."}],"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncAction\/execute(getState:dispatch:)"]}],"variants":[{"paths":["\/documentation\/supportsdk\/asyncaction"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncAction","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Action","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Action","preciseIdentifier":"s:10SupportSDK6ActionP","kind":"typeIdentifier"}],"platforms":["iOS"],"languages":["swift"]}]},{"content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"Recepie to use "},{"type":"codeVoice","code":"AsyncAction"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"Create an ","type":"text"},{"type":"codeVoice","code":"AsyncAction"},{"text":" action","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"In the block passed at init. Perform any operation (dispatching it on your queue)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"When result is ready, call ","type":"text"},{"type":"codeVoice","code":"dispatch"},{"type":"text","text":" passing a new action"}],"type":"paragraph"}]}],"type":"orderedList"},{"inlineContent":[{"text":"If the ","type":"text"},{"code":"AsyncMiddleware","type":"codeVoice"},{"text":" receives an ","type":"text"},{"type":"codeVoice","code":"AsyncAction"},{"text":" it does the following:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Call action.execute passing in the dispatch and get state functions","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Stops the action from propagating to other middlewares and reducers"}]}]}],"type":"orderedList"},{"level":1,"anchor":"Example","text":"Example","type":"heading"},{"type":"heading","text":"Performing an async loading from disk","anchor":"Performing-an-async-loading-from-disk","level":2},{"code":["struct MyDiskAsyncAction: AsyncAction {","","  func execute(getState: @escaping GetStateFunction, dispatch: @escaping DispatchFunction) {","    \/\/ Perform some work in a background thread","    DispatchQueue(label: \"MyQueue\").async {","      \/\/ Load from disk","      \/\/ Process loaded","      \/\/ Do more work","","      \/\/ Maybe consult the current state","      let currentState = api.state","","      \/\/ At a latter time dont forget to dispatch","      dispatch(DataLoadedAction(data: data))","    }","}","","store.dispatch(action: MyDiskAsyncAction())"],"syntax":null,"type":"codeListing"},{"text":"Performing an async network request","level":2,"type":"heading","anchor":"Performing-an-async-network-request"},{"syntax":null,"type":"codeListing","code":["struct MyURLAsyncAction: AsyncAction {","","  func execute(getState: @escaping GetStateFunction, dispatch: @escaping DispatchFunction) {","    \/\/ First dispatch some action syncrhonously","    dispatch(SomeAction(...))","","    let session = URLSession(configuration: .default)","    \/\/ perform a dataTask","    session.dataTask(with: urlRequest) { data, response, error in","","      if let data = data {","        \/\/ Do something with the data","         dispatch(RequestSucceeded(data: data))","","      } else if let error = error {","","         \/\/ Error happenend","         dispatch(RequestFaile(data: data))","      }","   }","}","","store.dispatch(action: MyURLAsyncAction())"]}],"kind":"content"}],"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AsyncAction","kind":"identifier"}],"modules":[{"name":"SupportSDK"}],"symbolKind":"protocol","externalID":"s:10SupportSDK11AsyncActionP","navigatorTitle":[{"text":"AsyncAction","kind":"identifier"}],"title":"AsyncAction","roleHeading":"Protocol"},"relationshipsSections":[{"identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Action"],"type":"inheritsFrom","kind":"relationships","title":"Inherits From"},{"title":"Conforming Types","type":"conformingTypes","kind":"relationships","identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockAsyncAction"]}],"identifier":{"url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncAction","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/AsyncAction/execute(getState:dispatch:)":{"url":"\/documentation\/supportsdk\/asyncaction\/execute(getstate:dispatch:)","required":true,"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"execute"},{"kind":"text","text":"("},{"text":"getState","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SupportSDK16GetStateFunctiona","text":"GetStateFunction","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"dispatch","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SupportSDK16DispatchFunctiona","kind":"typeIdentifier","text":"DispatchFunction"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncAction\/execute(getState:dispatch:)","abstract":[{"text":"Execution block that is executed in the ","type":"text"},{"code":"AsyncMiddleware","type":"codeVoice"},{"type":"text","text":" "},{"text":"If the ","type":"text"},{"code":"AsyncMiddleware","type":"codeVoice"},{"type":"text","text":" receives an "},{"type":"codeVoice","code":"AsyncAction"},{"text":" it does the following:","type":"text"}],"kind":"symbol","title":"execute(getState:dispatch:)","type":"topic"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Action":{"role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"text":"Action","kind":"identifier"}],"url":"\/documentation\/supportsdk\/action","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Action","title":"Action","abstract":[{"text":"Action to dispatch to the store","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Action"}]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/AsyncAction":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AsyncAction","kind":"identifier"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncAction","abstract":[{"text":"Async action this type of action is intercepted by ","type":"text"},{"type":"codeVoice","code":"AsyncMiddleware"},{"type":"text","text":" and is not dispatched to the reducer."}],"navigatorTitle":[{"text":"AsyncAction","kind":"identifier"}],"kind":"symbol","title":"AsyncAction","url":"\/documentation\/supportsdk\/asyncaction"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"url":"\/documentation\/supportsdk","title":"SupportSDK","kind":"symbol","abstract":[],"role":"collection","type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/BlockAsyncAction":{"url":"\/documentation\/supportsdk\/blockasyncaction","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BlockAsyncAction"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockAsyncAction","abstract":[{"text":"Create an ","type":"text"},{"type":"codeVoice","code":"AsyncAction"},{"type":"text","text":" inline by passing a block to the init"},{"text":" ","type":"text"},{"type":"text","text":"Check "},{"code":"AsyncAction","type":"codeVoice"},{"text":" for more info","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"BlockAsyncAction"}],"kind":"symbol","title":"BlockAsyncAction","type":"topic"}}}