{"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"addListener"},{"kind":"text","text":"<"},{"text":"StateType","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"forStateType"},{"kind":"text","text":" "},{"text":"type","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp","text":"StateType","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"stateKey","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StateKey","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/StateKey","preciseIdentifier":"s:10SupportSDK8StateKeya"},{"text":"? = nil, ","kind":"text"},{"text":"if","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"filterBlock"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SupportSDK14FilterFunctiona","kind":"typeIdentifier","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/FilterFunction","text":"FilterFunction"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp","text":"StateType"},{"kind":"text","text":">? = nil, "},{"text":"callback","kind":"externalParam"},{"kind":"text","text":": "},{"text":"@escaping","kind":"attribute"},{"kind":"text","text":" ("},{"preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp","text":"StateType","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Subscription","text":"Subscription","preciseIdentifier":"s:10SupportSDK12SubscriptionV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["iOS"]}]},{"parameters":[{"name":"type","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The type of the state to listen to. If the state type is not found, the listener will not be notified."}]}]},{"name":"stateKey","content":[{"type":"paragraph","inlineContent":[{"text":"(Optional) the state key to listen to. When not passed (or passing nil) the type name from ","type":"text"},{"code":"forStateType","type":"codeVoice"},{"text":" will be used.","type":"text"},{"type":"text","text":" "},{"text":"Only pass when the state key for the state was changed in the reducer (99% of the times you dont need to set this parameter)","type":"text"}]}]},{"name":"filterBlock","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"(Optional) block that receives the old state and the new state."},{"type":"text","text":" "},{"type":"text","text":"It decides wether the notification for the listener should be sent or not."},{"type":"text","text":" "},{"text":"When not set, the listener is notified whenever the state changed.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Notification block called with the new state when the store’s state changed.","type":"text"}]}],"name":"callback"}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Listener’s subscription that can be used to remove the notification and for other listener related stuff."}]}],"kind":"content"},{"kind":"content","content":[{"text":"Example","level":1,"type":"heading","anchor":"Example"},{"level":2,"anchor":"Adding-a-listener","type":"heading","text":"Adding a listener"},{"inlineContent":[{"text":"Add a simple listener for a ","type":"text"},{"type":"codeVoice","code":"MyState"},{"type":"text","text":" state type"}],"type":"paragraph"},{"type":"codeListing","code":["let subscription = store.addListener(forStateType: MyState.self) { newState in","  \/\/ Do something with the state","}"],"syntax":null},{"text":"Adding a listener with a filterBlock","level":2,"anchor":"Adding-a-listener-with-a-filterBlock","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Adding a listener for a state of "},{"code":"TodoItemsState","type":"codeVoice"},{"type":"text","text":" type with a filter block."},{"text":" ","type":"text"},{"text":"In the filterBlock we check that the new state has more items than the old state.","type":"text"},{"type":"text","text":" "},{"text":"The Listener will be notified only if the filterBlock returns true.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let subscription = store.addListener(","  forStateType: TodoItemsState.self,","  if: { old, new in return old.todos.count > new.todos.count }) { newState in","    \/\/ Do something with the state","}"]},{"level":2,"anchor":"Adding-a-listener-with-a-state-key","text":"Adding a listener with a state key","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Adding a listener for a state of "},{"code":"TodoItemsState","type":"codeVoice"},{"type":"text","text":" type, the reducer registered the state key to “todos”"}]},{"code":["let subscription = store.addListener(forStateType: TodoItemsState.self, stateKey: \"todos\") { newState in","  \/\/ Do something with the state","}"],"syntax":null,"type":"codeListing"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store\/addListener(forStateType:stateKey:if:callback:)"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store"]]},"abstract":[{"type":"text","text":"Add a listener to the store. The listener will be notified when the state changes."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/supportsdk\/store\/addlistener(forstatetype:statekey:if:callback:)"]}],"metadata":{"modules":[{"name":"SupportSDK"}],"title":"addListener(forStateType:stateKey:if:callback:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"addListener","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"StateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"forStateType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"kind":"text","text":".Type, "},{"text":"stateKey","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StateKey","preciseIdentifier":"s:10SupportSDK8StateKeya","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"if","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SupportSDK14FilterFunctiona","text":"FilterFunction","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp","text":"StateType"},{"text":">?, ","kind":"text"},{"kind":"externalParam","text":"callback"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp","text":"StateType"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":") -> ","kind":"text"},{"text":"Subscription","preciseIdentifier":"s:10SupportSDK12SubscriptionV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"text":">","kind":"text"}],"roleHeading":"Instance Method","symbolKind":"method","extendedModule":"SupportSDK","externalID":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF","role":"symbol"},"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/StateKey":{"url":"\/documentation\/supportsdk\/statekey","title":"StateKey","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"StateKey"}],"kind":"symbol","abstract":[{"type":"text","text":"Store state is stored as a Dictionary of [StateKey: Any]"}],"navigatorTitle":[{"text":"StateKey","kind":"identifier"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/StateKey"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"title":"SupportSDK","role":"collection","url":"\/documentation\/supportsdk","type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","abstract":[],"kind":"symbol"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Store":{"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Store","kind":"identifier"}],"abstract":[{"text":"Store that contains the application state, the reducer logic, the middleware and the listeners","type":"text"}],"type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"url":"\/documentation\/supportsdk\/store","title":"Store"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/FilterFunction":{"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FilterFunction"}],"abstract":[{"text":"Filter function that decides if the listener should be notified or not","type":"text"}],"type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/FilterFunction","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FilterFunction","kind":"identifier"}],"url":"\/documentation\/supportsdk\/filterfunction","title":"FilterFunction"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Subscription":{"url":"\/documentation\/supportsdk\/subscription","role":"symbol","navigatorTitle":[{"text":"Subscription","kind":"identifier"}],"abstract":[{"text":"Subscription structure that represents a listener subscription.","type":"text"},{"type":"text","text":" "},{"text":"When adding a listener you get a subscription back.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"You can use this subscription to remove the listener, notify about the current state or link the listener lifecycle with an object."}],"type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Subscription","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Subscription","kind":"identifier"}],"kind":"symbol","title":"Subscription"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Store/addListener(forStateType:stateKey:if:callback:)":{"abstract":[{"text":"Add a listener to the store. The listener will be notified when the state changes.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store\/addListener(forStateType:stateKey:if:callback:)","title":"addListener(forStateType:stateKey:if:callback:)","url":"\/documentation\/supportsdk\/store\/addlistener(forstatetype:statekey:if:callback:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"addListener"},{"kind":"text","text":"<"},{"text":"StateType","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"forStateType"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp","text":"StateType","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"stateKey","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StateKey","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK8StateKeya"},{"text":"?, ","kind":"text"},{"text":"if","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK14FilterFunctiona","text":"FilterFunction"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp","text":"StateType"},{"text":">?, ","kind":"text"},{"kind":"externalParam","text":"callback"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:10SupportSDK12SubscriptionV","kind":"typeIdentifier","text":"Subscription"},{"text":"<","kind":"text"},{"text":"StateType","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"text":">","kind":"text"}],"role":"symbol"}}}