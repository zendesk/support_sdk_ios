{"abstract":[{"type":"text","text":"Async action this type of action is intercepted by "},{"code":"AsyncMiddleware","type":"codeVoice"},{"text":" and is not dispatched to the reducer.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncAction"}],"title":"AsyncAction","roleHeading":"Protocol","symbolKind":"protocol","externalID":"s:10SupportSDK11AsyncActionP","modules":[{"name":"SupportSDK"}],"role":"symbol","navigatorTitle":[{"text":"AsyncAction","kind":"identifier"}]},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/supportsdk\/asyncaction"]}],"identifier":{"url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncAction","interfaceLanguage":"swift"},"sections":[],"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncAction\/execute(getState:dispatch:)"]}],"relationshipsSections":[{"title":"Inherits From","identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Action"],"kind":"relationships","type":"inheritsFrom"},{"kind":"relationships","title":"Conforming Types","type":"conformingTypes","identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockAsyncAction"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncAction","kind":"identifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Action","preciseIdentifier":"s:10SupportSDK6ActionP","text":"Action"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"inlineContent":[{"text":"Recepie to use ","type":"text"},{"type":"codeVoice","code":"AsyncAction"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Create an ","type":"text"},{"code":"AsyncAction","type":"codeVoice"},{"type":"text","text":" action"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"In the block passed at init. Perform any operation (dispatching it on your queue)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When result is ready, call "},{"code":"dispatch","type":"codeVoice"},{"text":" passing a new action","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the "},{"type":"codeVoice","code":"AsyncMiddleware"},{"type":"text","text":" receives an "},{"type":"codeVoice","code":"AsyncAction"},{"type":"text","text":" it does the following:"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Call action.execute passing in the dispatch and get state functions","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Stops the action from propagating to other middlewares and reducers"}],"type":"paragraph"}]}]},{"type":"heading","anchor":"Example","level":1,"text":"Example"},{"type":"heading","level":2,"text":"Performing an async loading from disk","anchor":"Performing-an-async-loading-from-disk"},{"code":["struct MyDiskAsyncAction: AsyncAction {","","  func execute(getState: @escaping GetStateFunction, dispatch: @escaping DispatchFunction) {","    \/\/ Perform some work in a background thread","    DispatchQueue(label: \"MyQueue\").async {","      \/\/ Load from disk","      \/\/ Process loaded","      \/\/ Do more work","","      \/\/ Maybe consult the current state","      let currentState = api.state","","      \/\/ At a latter time dont forget to dispatch","      dispatch(DataLoadedAction(data: data))","    }","}","","store.dispatch(action: MyDiskAsyncAction())"],"syntax":null,"type":"codeListing"},{"text":"Performing an async network request","type":"heading","anchor":"Performing-an-async-network-request","level":2},{"syntax":null,"code":["struct MyURLAsyncAction: AsyncAction {","","  func execute(getState: @escaping GetStateFunction, dispatch: @escaping DispatchFunction) {","    \/\/ First dispatch some action syncrhonously","    dispatch(SomeAction(...))","","    let session = URLSession(configuration: .default)","    \/\/ perform a dataTask","    session.dataTask(with: urlRequest) { data, response, error in","","      if let data = data {","        \/\/ Do something with the data","         dispatch(RequestSucceeded(data: data))","","      } else if let error = error {","","         \/\/ Error happenend","         dispatch(RequestFaile(data: data))","      }","   }","}","","store.dispatch(action: MyURLAsyncAction())"],"type":"codeListing"}]}],"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/BlockAsyncAction":{"abstract":[{"text":"Create an ","type":"text"},{"type":"codeVoice","code":"AsyncAction"},{"text":" inline by passing a block to the init","type":"text"},{"text":" ","type":"text"},{"text":"Check ","type":"text"},{"code":"AsyncAction","type":"codeVoice"},{"type":"text","text":" for more info"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"BlockAsyncAction","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"BlockAsyncAction"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockAsyncAction","title":"BlockAsyncAction","type":"topic","url":"\/documentation\/supportsdk\/blockasyncaction"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"title":"SupportSDK","role":"collection","url":"\/documentation\/supportsdk","type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","abstract":[],"kind":"symbol"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/AsyncAction/execute(getState:dispatch:)":{"abstract":[{"type":"text","text":"Execution block that is executed in the "},{"code":"AsyncMiddleware","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"If the "},{"code":"AsyncMiddleware","type":"codeVoice"},{"type":"text","text":" receives an "},{"type":"codeVoice","code":"AsyncAction"},{"text":" it does the following:","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"execute"},{"kind":"text","text":"("},{"text":"getState","kind":"externalParam"},{"kind":"text","text":": "},{"text":"GetStateFunction","preciseIdentifier":"s:10SupportSDK16GetStateFunctiona","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"dispatch","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"DispatchFunction","preciseIdentifier":"s:10SupportSDK16DispatchFunctiona"},{"kind":"text","text":")"}],"url":"\/documentation\/supportsdk\/asyncaction\/execute(getstate:dispatch:)","title":"execute(getState:dispatch:)","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncAction\/execute(getState:dispatch:)","role":"symbol","kind":"symbol","type":"topic","required":true},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/AsyncAction":{"abstract":[{"type":"text","text":"Async action this type of action is intercepted by "},{"code":"AsyncMiddleware","type":"codeVoice"},{"type":"text","text":" and is not dispatched to the reducer."}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncAction"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncAction"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncAction","title":"AsyncAction","type":"topic","url":"\/documentation\/supportsdk\/asyncaction"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Action":{"abstract":[{"text":"Action to dispatch to the store","type":"text"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Action"}],"kind":"symbol","navigatorTitle":[{"text":"Action","kind":"identifier"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Action","title":"Action","type":"topic","url":"\/documentation\/supportsdk\/action"}}}