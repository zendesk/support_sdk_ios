{"relationshipsSections":[{"type":"conformingTypes","kind":"relationships","identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncMiddleware","doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockMiddleware","doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/LoggerMiddleware"],"title":"Conforming Types"}],"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware\/onAction(action:getState:dispatch:next:)"]}],"identifier":{"url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware","interfaceLanguage":"swift"},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"Middleware"}],"symbolKind":"protocol","title":"Middleware","externalID":"s:10SupportSDK10MiddlewareP","roleHeading":"Protocol","modules":[{"name":"SupportSDK"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Middleware"}],"role":"symbol"},"kind":"symbol","abstract":[{"type":"text","text":"Middleware protocol that represents a suas store middleware"},{"text":" ","type":"text"},{"type":"text","text":"A middleware helps extending the dispatch logic of Suas."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Middleware","kind":"identifier"}],"languages":["swift"]}]},{"content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"inlineContent":[{"type":"text","text":"A middleware can be used to implement:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Logging that logs the state before and after the reducer changes it"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Perform async network calls and dispatches actions representing the result when the network returns."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Other advanced usagesâ€¦"}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"Example","level":1,"type":"heading","anchor":"Example"},{"inlineContent":[{"type":"text","text":"Implementing a logging middleware."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["class LoggerMiddleware: Middleware {","  var api: MiddlewareAPI?","  var next: DispatchFunction?","","  func onAction(action: Action, getState: @escaping GetStateFunction, dispatch: @escaping DispatchFunction, next: @escaping NextFunction) {","    \/\/ Read the state before any reducer changes it","    print(\"The old state is \\(getState())\")","","    \/\/ Print the action","    print(\"The action is \\(action)\")","","    \/\/ Continue the dispatching process..until the reducer reduces the action","    \/\/ Not calling `next` will prevent the action from reaching the reducer","    next?(action)","","    \/\/ Read the state after any reducer changes it","    print(\"The new state is \\(api?.state)\")","  }","}"]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/supportsdk\/middleware"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK"]]},"sections":[],"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/BlockMiddleware":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"BlockMiddleware","kind":"identifier"}],"abstract":[{"text":"Create a middleware inline with a block.","type":"text"}],"title":"BlockMiddleware","kind":"symbol","type":"topic","navigatorTitle":[{"text":"BlockMiddleware","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockMiddleware","url":"\/documentation\/supportsdk\/blockmiddleware"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/LoggerMiddleware":{"navigatorTitle":[{"kind":"identifier","text":"LoggerMiddleware"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"LoggerMiddleware","kind":"identifier"}],"url":"\/documentation\/supportsdk\/loggermiddleware","role":"symbol","abstract":[{"type":"text","text":"LoggerMiddleware that logs the action and state when each action is received"},{"type":"text","text":" "},{"text":"When an action is dispatched, the LoggerMiddleware will print information related to it in the console.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/LoggerMiddleware","title":"LoggerMiddleware","type":"topic"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/AsyncMiddleware":{"kind":"symbol","title":"AsyncMiddleware","role":"symbol","url":"\/documentation\/supportsdk\/asyncmiddleware","abstract":[{"text":"Async Middleware handles actions of type ","type":"text"},{"code":"AsyncAction","type":"codeVoice"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AsyncMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncMiddleware","type":"topic","navigatorTitle":[{"text":"AsyncMiddleware","kind":"identifier"}]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Middleware/onAction(action:getState:dispatch:next:)":{"abstract":[{"type":"text","text":"Function called when an action is dispatched"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onAction"},{"kind":"text","text":"("},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK6ActionP","text":"Action"},{"text":", ","kind":"text"},{"text":"getState","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SupportSDK16GetStateFunctiona","text":"GetStateFunction","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"dispatch"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SupportSDK16DispatchFunctiona","kind":"typeIdentifier","text":"DispatchFunction"},{"kind":"text","text":", "},{"kind":"externalParam","text":"next"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SupportSDK12NextFunctiona","kind":"typeIdentifier","text":"NextFunction"},{"kind":"text","text":")"}],"url":"\/documentation\/supportsdk\/middleware\/onaction(action:getstate:dispatch:next:)","title":"onAction(action:getState:dispatch:next:)","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware\/onAction(action:getState:dispatch:next:)","role":"symbol","kind":"symbol","type":"topic","required":true},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"title":"SupportSDK","role":"collection","url":"\/documentation\/supportsdk","type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","abstract":[],"kind":"symbol"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Middleware":{"navigatorTitle":[{"kind":"identifier","text":"Middleware"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware","title":"Middleware","url":"\/documentation\/supportsdk\/middleware","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Middleware protocol that represents a suas store middleware"},{"text":" ","type":"text"},{"type":"text","text":"A middleware helps extending the dispatch logic of Suas."}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Middleware"}]}}}