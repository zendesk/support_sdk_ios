{"abstract":[{"text":"Create a middleware inline with a block.","type":"text"}],"metadata":{"title":"BlockMiddleware","modules":[{"name":"SupportSDK"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"BlockMiddleware"}],"roleHeading":"Class","symbolKind":"class","navigatorTitle":[{"kind":"identifier","text":"BlockMiddleware"}],"role":"symbol","externalID":"s:10SupportSDK15BlockMiddlewareC"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/supportsdk\/blockmiddleware"]}],"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockMiddleware","interfaceLanguage":"swift"},"kind":"symbol","relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware"],"title":"Conforms To","type":"conformsTo"}],"topicSections":[{"identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockMiddleware\/init(actionFunction:)"],"title":"Initializers"},{"identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockMiddleware\/onAction(action:getState:dispatch:next:)"],"title":"Instance Methods"}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BlockMiddleware"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"Example","level":1,"text":"Example"},{"syntax":null,"type":"codeListing","code":["let middleware = BlockMiddleware { action, getState, dispatch, next in","  \/\/ Read the state before any reducer changes it","  print(\"The old state is \\(getState())\")","","  \/\/ Print the action","  print(\"The action is \\(action)\")","","  \/\/ Continue the dispatching process..until the reducer reduces the action","  \/\/ Not calling `next` will prevent the action from reaching the reducer","  next?(action)","","  \/\/ Read the state after any reducer changes it","  print(\"The new state is \\(api?.state)\")","}"]}]}],"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/BlockMiddleware/init(actionFunction:)":{"type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockMiddleware\/init(actionFunction:)","abstract":[{"type":"text","text":"Create a middleware with an onAction callback block"}],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"actionFunction"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SupportSDK18MiddlewareFunctiona","text":"MiddlewareFunction","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"init(actionFunction:)","kind":"symbol","url":"\/documentation\/supportsdk\/blockmiddleware\/init(actionfunction:)"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/BlockMiddleware/onAction(action:getState:dispatch:next:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onAction","kind":"identifier"},{"kind":"text","text":"("},{"text":"action","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK6ActionP","text":"Action"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"getState"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SupportSDK16GetStateFunctiona","text":"GetStateFunction","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"dispatch"},{"text":": ","kind":"text"},{"text":"DispatchFunction","preciseIdentifier":"s:10SupportSDK16DispatchFunctiona","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"next","kind":"externalParam"},{"kind":"text","text":": "},{"text":"NextFunction","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK12NextFunctiona"},{"kind":"text","text":")"}],"kind":"symbol","title":"onAction(action:getState:dispatch:next:)","abstract":[{"type":"text","text":"Function called when an action is dispatched"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockMiddleware\/onAction(action:getState:dispatch:next:)","url":"\/documentation\/supportsdk\/blockmiddleware\/onaction(action:getstate:dispatch:next:)"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"title":"SupportSDK","role":"collection","url":"\/documentation\/supportsdk","type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","abstract":[],"kind":"symbol"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/BlockMiddleware":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"BlockMiddleware","kind":"identifier"}],"abstract":[{"text":"Create a middleware inline with a block.","type":"text"}],"title":"BlockMiddleware","kind":"symbol","type":"topic","navigatorTitle":[{"text":"BlockMiddleware","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockMiddleware","url":"\/documentation\/supportsdk\/blockmiddleware"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Middleware":{"navigatorTitle":[{"kind":"identifier","text":"Middleware"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware","title":"Middleware","url":"\/documentation\/supportsdk\/middleware","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Middleware protocol that represents a suas store middleware"},{"text":" ","type":"text"},{"type":"text","text":"A middleware helps extending the dispatch logic of Suas."}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Middleware"}]}}}