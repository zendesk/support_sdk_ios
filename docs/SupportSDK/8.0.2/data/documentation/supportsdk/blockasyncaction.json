{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BlockAsyncAction","kind":"identifier"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SeeAlso:"}]},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"AsyncAction"}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"Example","type":"heading","level":1,"anchor":"Example"},{"type":"paragraph","inlineContent":[{"text":"Performing an async network request","type":"text"}]},{"code":["let action = BlockAsyncAction { getState, dispatch in","","  \/\/ Read the current state from the Store","  getState()","","  \/\/ First dispatch some action syncrhonously","  dispatch(SomeAction(...))","","  let session = URLSession(configuration: .default)","  \/\/ perform a dataTask","  session.dataTask(with: urlRequest) { data, response, error in","","    if let data = data {","      \/\/ Do something with the data","       dispatch(RequestSucceeded(data: data))","","    } else if let error = error {","","       \/\/ Error happenend","       dispatch(RequestFaile(data: data))","    }","  }","}","","store.dispatch(action: MyURLAsyncAction())"],"type":"codeListing","syntax":null}]}],"kind":"symbol","variants":[{"paths":["\/documentation\/supportsdk\/blockasyncaction"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"Structure","symbolKind":"struct","externalID":"s:10SupportSDK16BlockAsyncActionV","role":"symbol","navigatorTitle":[{"text":"BlockAsyncAction","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BlockAsyncAction"}],"modules":[{"name":"SupportSDK"}],"title":"BlockAsyncAction"},"identifier":{"url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockAsyncAction","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"Create an ","type":"text"},{"type":"codeVoice","code":"AsyncAction"},{"text":" inline by passing a block to the init","type":"text"},{"text":" ","type":"text"},{"text":"Check ","type":"text"},{"type":"codeVoice","code":"AsyncAction"},{"type":"text","text":" for more info"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockAsyncAction\/init(executionBlock:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockAsyncAction\/execute(getState:dispatch:)"]}],"sections":[],"relationshipsSections":[{"identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Action","doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncAction"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/BlockAsyncAction/init(executionBlock:)":{"abstract":[],"role":"symbol","url":"\/documentation\/supportsdk\/blockasyncaction\/init(executionblock:)","type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockAsyncAction\/init(executionBlock:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"executionBlock","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GetStateFunction","preciseIdentifier":"s:10SupportSDK16GetStateFunctiona"},{"kind":"text","text":", "},{"preciseIdentifier":"s:10SupportSDK16DispatchFunctiona","text":"DispatchFunction","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"title":"init(executionBlock:)"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/BlockAsyncAction/execute(getState:dispatch:)":{"abstract":[{"text":"Execution block that is executed in the ","type":"text"},{"type":"codeVoice","code":"AsyncMiddleware"},{"text":" ","type":"text"},{"text":"If the ","type":"text"},{"code":"AsyncMiddleware","type":"codeVoice"},{"type":"text","text":" receives an "},{"code":"AsyncAction","type":"codeVoice"},{"type":"text","text":" it does the following:"}],"role":"symbol","url":"\/documentation\/supportsdk\/blockasyncaction\/execute(getstate:dispatch:)","type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockAsyncAction\/execute(getState:dispatch:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"execute","kind":"identifier"},{"text":"(","kind":"text"},{"text":"getState","kind":"externalParam"},{"kind":"text","text":": "},{"text":"GetStateFunction","preciseIdentifier":"s:10SupportSDK16GetStateFunctiona","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"dispatch","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"DispatchFunction","preciseIdentifier":"s:10SupportSDK16DispatchFunctiona","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"execute(getState:dispatch:)"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"title":"SupportSDK","abstract":[],"role":"collection","kind":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","url":"\/documentation\/supportsdk","type":"topic"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/BlockAsyncAction":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"BlockAsyncAction","kind":"identifier"}],"abstract":[{"type":"text","text":"Create an "},{"code":"AsyncAction","type":"codeVoice"},{"type":"text","text":" inline by passing a block to the init"},{"type":"text","text":" "},{"type":"text","text":"Check "},{"type":"codeVoice","code":"AsyncAction"},{"text":" for more info","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"BlockAsyncAction"}],"title":"BlockAsyncAction","url":"\/documentation\/supportsdk\/blockasyncaction","type":"topic","kind":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockAsyncAction","role":"symbol"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Action":{"abstract":[{"type":"text","text":"Action to dispatch to the store"}],"kind":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Action","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Action","kind":"identifier"}],"title":"Action","url":"\/documentation\/supportsdk\/action","navigatorTitle":[{"text":"Action","kind":"identifier"}],"type":"topic"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/AsyncAction":{"kind":"symbol","role":"symbol","title":"AsyncAction","abstract":[{"text":"Async action this type of action is intercepted by ","type":"text"},{"type":"codeVoice","code":"AsyncMiddleware"},{"text":" and is not dispatched to the reducer.","type":"text"}],"url":"\/documentation\/supportsdk\/asyncaction","type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncAction","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncAction","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncAction","kind":"identifier"}]}}}