{"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncAction","interfaceLanguage":"swift"},"sections":[],"relationshipsSections":[{"type":"inheritsFrom","title":"Inherits From","kind":"relationships","identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Action"]},{"title":"Conforming Types","kind":"relationships","type":"conformingTypes","identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockAsyncAction"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncAction"},{"text":" : ","kind":"text"},{"text":"Action","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Action","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK6ActionP"}]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Recepie to use "},{"code":"AsyncAction","type":"codeVoice"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create an "},{"type":"codeVoice","code":"AsyncAction"},{"text":" action","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In the block passed at init. Perform any operation (dispatching it on your queue)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When result is ready, call "},{"code":"dispatch","type":"codeVoice"},{"type":"text","text":" passing a new action"}]}]}],"type":"orderedList"},{"type":"paragraph","inlineContent":[{"text":"If the ","type":"text"},{"code":"AsyncMiddleware","type":"codeVoice"},{"text":" receives an ","type":"text"},{"code":"AsyncAction","type":"codeVoice"},{"type":"text","text":" it does the following:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Call action.execute passing in the dispatch and get state functions"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Stops the action from propagating to other middlewares and reducers"}],"type":"paragraph"}]}],"type":"orderedList"},{"anchor":"Example","type":"heading","text":"Example","level":1},{"text":"Performing an async loading from disk","type":"heading","level":2,"anchor":"Performing-an-async-loading-from-disk"},{"syntax":null,"code":["struct MyDiskAsyncAction: AsyncAction {","","  func execute(getState: @escaping GetStateFunction, dispatch: @escaping DispatchFunction) {","    \/\/ Perform some work in a background thread","    DispatchQueue(label: \"MyQueue\").async {","      \/\/ Load from disk","      \/\/ Process loaded","      \/\/ Do more work","","      \/\/ Maybe consult the current state","      let currentState = api.state","","      \/\/ At a latter time dont forget to dispatch","      dispatch(DataLoadedAction(data: data))","    }","}","","store.dispatch(action: MyDiskAsyncAction())"],"type":"codeListing"},{"anchor":"Performing-an-async-network-request","level":2,"text":"Performing an async network request","type":"heading"},{"syntax":null,"type":"codeListing","code":["struct MyURLAsyncAction: AsyncAction {","","  func execute(getState: @escaping GetStateFunction, dispatch: @escaping DispatchFunction) {","    \/\/ First dispatch some action syncrhonously","    dispatch(SomeAction(...))","","    let session = URLSession(configuration: .default)","    \/\/ perform a dataTask","    session.dataTask(with: urlRequest) { data, response, error in","","      if let data = data {","        \/\/ Do something with the data","         dispatch(RequestSucceeded(data: data))","","      } else if let error = error {","","         \/\/ Error happenend","         dispatch(RequestFaile(data: data))","      }","   }","}","","store.dispatch(action: MyURLAsyncAction())"]}]}],"variants":[{"paths":["\/documentation\/supportsdk\/asyncaction"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncAction\/execute(getState:dispatch:)"],"title":"Instance Methods"}],"abstract":[{"text":"Async action this type of action is intercepted by ","type":"text"},{"type":"codeVoice","code":"AsyncMiddleware"},{"text":" and is not dispatched to the reducer.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK"]]},"metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncAction"}],"role":"symbol","roleHeading":"Protocol","title":"AsyncAction","navigatorTitle":[{"text":"AsyncAction","kind":"identifier"}],"modules":[{"name":"SupportSDK"}],"externalID":"s:10SupportSDK11AsyncActionP","symbolKind":"protocol"},"kind":"symbol","references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/BlockAsyncAction":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"BlockAsyncAction","kind":"identifier"}],"abstract":[{"type":"text","text":"Create an "},{"code":"AsyncAction","type":"codeVoice"},{"type":"text","text":" inline by passing a block to the init"},{"type":"text","text":" "},{"type":"text","text":"Check "},{"type":"codeVoice","code":"AsyncAction"},{"text":" for more info","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"BlockAsyncAction"}],"title":"BlockAsyncAction","url":"\/documentation\/supportsdk\/blockasyncaction","type":"topic","kind":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockAsyncAction","role":"symbol"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"title":"SupportSDK","abstract":[],"role":"collection","kind":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","url":"\/documentation\/supportsdk","type":"topic"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Action":{"abstract":[{"type":"text","text":"Action to dispatch to the store"}],"kind":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Action","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Action","kind":"identifier"}],"title":"Action","url":"\/documentation\/supportsdk\/action","navigatorTitle":[{"text":"Action","kind":"identifier"}],"type":"topic"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/AsyncAction/execute(getState:dispatch:)":{"kind":"symbol","role":"symbol","title":"execute(getState:dispatch:)","abstract":[{"type":"text","text":"Execution block that is executed in the "},{"code":"AsyncMiddleware","type":"codeVoice"},{"text":" ","type":"text"},{"text":"If the ","type":"text"},{"type":"codeVoice","code":"AsyncMiddleware"},{"text":" receives an ","type":"text"},{"type":"codeVoice","code":"AsyncAction"},{"type":"text","text":" it does the following:"}],"required":true,"url":"\/documentation\/supportsdk\/asyncaction\/execute(getstate:dispatch:)","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncAction\/execute(getState:dispatch:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"execute"},{"kind":"text","text":"("},{"kind":"externalParam","text":"getState"},{"text":": ","kind":"text"},{"text":"GetStateFunction","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK16GetStateFunctiona"},{"kind":"text","text":", "},{"text":"dispatch","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SupportSDK16DispatchFunctiona","kind":"typeIdentifier","text":"DispatchFunction"},{"text":")","kind":"text"}]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/AsyncAction":{"kind":"symbol","role":"symbol","title":"AsyncAction","abstract":[{"text":"Async action this type of action is intercepted by ","type":"text"},{"type":"codeVoice","code":"AsyncMiddleware"},{"text":" and is not dispatched to the reducer.","type":"text"}],"url":"\/documentation\/supportsdk\/asyncaction","type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncAction","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncAction","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncAction","kind":"identifier"}]}}}