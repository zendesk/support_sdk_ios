{"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK"]]},"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware"],"kind":"relationships"}],"abstract":[{"type":"text","text":"Create a middleware inline with a block."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BlockMiddleware","kind":"identifier"}],"languages":["swift"]}]},{"content":[{"anchor":"Example","level":1,"type":"heading","text":"Example"},{"type":"codeListing","syntax":null,"code":["let middleware = BlockMiddleware { action, getState, dispatch, next in","  \/\/ Read the state before any reducer changes it","  print(\"The old state is \\(getState())\")","","  \/\/ Print the action","  print(\"The action is \\(action)\")","","  \/\/ Continue the dispatching process..until the reducer reduces the action","  \/\/ Not calling `next` will prevent the action from reaching the reducer","  next?(action)","","  \/\/ Read the state after any reducer changes it","  print(\"The new state is \\(api?.state)\")","}"]}],"kind":"content"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockMiddleware\/init(actionFunction:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockMiddleware\/onAction(action:getState:dispatch:next:)"]}],"kind":"symbol","sections":[],"metadata":{"navigatorTitle":[{"text":"BlockMiddleware","kind":"identifier"}],"roleHeading":"Class","role":"symbol","title":"BlockMiddleware","externalID":"s:10SupportSDK15BlockMiddlewareC","symbolKind":"class","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BlockMiddleware"}],"modules":[{"name":"SupportSDK"}]},"identifier":{"url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockMiddleware","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/supportsdk\/blockmiddleware"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Middleware":{"abstract":[{"text":"Middleware protocol that represents a suas store middleware","type":"text"},{"type":"text","text":" "},{"text":"A middleware helps extending the dispatch logic of Suas.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Middleware"}],"title":"Middleware","url":"\/documentation\/supportsdk\/middleware","navigatorTitle":[{"text":"Middleware","kind":"identifier"}],"type":"topic"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/BlockMiddleware/onAction(action:getState:dispatch:next:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"onAction","kind":"identifier"},{"kind":"text","text":"("},{"text":"action","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:10SupportSDK6ActionP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"getState"},{"kind":"text","text":": "},{"text":"GetStateFunction","preciseIdentifier":"s:10SupportSDK16GetStateFunctiona","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"dispatch"},{"text":": ","kind":"text"},{"text":"DispatchFunction","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK16DispatchFunctiona"},{"kind":"text","text":", "},{"kind":"externalParam","text":"next"},{"text":": ","kind":"text"},{"text":"NextFunction","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK12NextFunctiona"},{"text":")","kind":"text"}],"abstract":[{"text":"Function called when an action is dispatched","type":"text"}],"title":"onAction(action:getState:dispatch:next:)","url":"\/documentation\/supportsdk\/blockmiddleware\/onaction(action:getstate:dispatch:next:)","kind":"symbol","type":"topic","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockMiddleware\/onAction(action:getState:dispatch:next:)","role":"symbol"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"title":"SupportSDK","abstract":[],"role":"collection","kind":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","url":"\/documentation\/supportsdk","type":"topic"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/BlockMiddleware/init(actionFunction:)":{"kind":"symbol","role":"symbol","title":"init(actionFunction:)","abstract":[{"type":"text","text":"Create a middleware with an onAction callback block"}],"url":"\/documentation\/supportsdk\/blockmiddleware\/init(actionfunction:)","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockMiddleware\/init(actionFunction:)","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"actionFunction"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SupportSDK18MiddlewareFunctiona","kind":"typeIdentifier","text":"MiddlewareFunction"},{"text":")","kind":"text"}]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/BlockMiddleware":{"kind":"symbol","role":"symbol","title":"BlockMiddleware","abstract":[{"type":"text","text":"Create a middleware inline with a block."}],"url":"\/documentation\/supportsdk\/blockmiddleware","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockMiddleware","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"BlockMiddleware","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"BlockMiddleware"}]}}}