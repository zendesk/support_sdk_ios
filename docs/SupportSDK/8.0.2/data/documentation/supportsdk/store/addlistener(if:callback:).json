{"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store\/addListener(if:callback:)"},"metadata":{"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"addListener","kind":"identifier"},{"text":"(","kind":"text"},{"text":"if","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FilterFunction","preciseIdentifier":"s:10SupportSDK14FilterFunctiona","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:10SupportSDK5StateV","text":"State","kind":"typeIdentifier"},{"kind":"text","text":">?, "},{"text":"callback","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:10SupportSDK5StateV","text":"State","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"Subscription","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK12SubscriptionV"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StateV"},{"text":">","kind":"text"}],"externalID":"s:10SupportSDK5StoreC11addListener2if8callbackAA12SubscriptionVyAA5StateVGSbAJ_AJtcSg_yAJctF","modules":[{"name":"SupportSDK"}],"role":"symbol","title":"addListener(if:callback:)","roleHeading":"Instance Method","extendedModule":"SupportSDK"},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"addListener"},{"kind":"text","text":"("},{"text":"if","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"filterBlock"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/FilterFunction","text":"FilterFunction","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK14FilterFunctiona"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:10SupportSDK5StateV","kind":"typeIdentifier","text":"State","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/State"},{"kind":"text","text":">? = nil, "},{"text":"callback","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" ("},{"text":"State","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/State","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StateV"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10SupportSDK12SubscriptionV","text":"Subscription","kind":"typeIdentifier","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Subscription"},{"kind":"text","text":"<"},{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/State","text":"State","preciseIdentifier":"s:10SupportSDK5StateV","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["iOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"filterBlock","content":[{"inlineContent":[{"text":"(Optional) block that receives the old state and the new state.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"AnyObjectIt decides wether the notification for the listener should be sent or not."},{"text":" ","type":"text"},{"text":"When not set, the listener is notified whenever the state changed.","type":"text"}],"type":"paragraph"}]},{"name":"callback","content":[{"type":"paragraph","inlineContent":[{"text":"Notification block called with the new state when the store’s state changed.","type":"text"}]}]}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"inlineContent":[{"type":"text","text":"The Listener’s subscription that can be used to remove the notification and for other listener related stuff."}],"type":"paragraph"}]},{"content":[{"level":1,"type":"heading","anchor":"Example","text":"Example"},{"level":2,"text":"Adding a listener","type":"heading","anchor":"Adding-a-listener"},{"type":"paragraph","inlineContent":[{"text":"Add a simple listener for the full state.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let subscription = addListener { newState in","  \/\/ Do something with the state","","  \/\/ Get value of Any? Type with key \"TheKey\"","  let value1 = newState.value(forKey: \"TheKey\")","","  \/\/ Get value of MyState? Type with key \"MyState\" (Key value = the type of the state we want)","  let value2 = newState.value(forKeyOfType: MyState.self)","","  \/\/ Get value of MyState? Type with key \"TheKey\"","  let value3 = newState.value(forKey: \"TheKey\", ofType: MyState.self)","}"]},{"level":2,"text":"Adding a listener with a filterBlock","anchor":"Adding-a-listener-with-a-filterBlock","type":"heading"},{"inlineContent":[{"text":"Adding a listener for the full state with a filter block.","type":"text"},{"type":"text","text":" "},{"text":"In the filterBlock we check that the new state has more than 10 items.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The Listener will be notified only if the filterBlock returns true."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let subscription = store.addListener(if: { oldState, newState in","","  \/\/ Read values from the oldState and the newState","  let old = oldState.value(forKeyOfType: TodoItemsState.self)!","  let new = newState.value(forKeyOfType: TodoItemsState.self)!","","  return new.todos.count > 10","}) { newState in","  \/\/ Do something with the state","}"]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store"]]},"abstract":[{"type":"text","text":"Add a listener to the store. The listener will be notified when the state changes."},{"text":" ","type":"text"},{"text":"The listener will be notified with the full state when","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/supportsdk\/store\/addlistener(if:callback:)"]}],"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/FilterFunction":{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/FilterFunction","url":"\/documentation\/supportsdk\/filterfunction","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FilterFunction"}],"type":"topic","kind":"symbol","role":"symbol","title":"FilterFunction","navigatorTitle":[{"kind":"identifier","text":"FilterFunction"}],"abstract":[{"type":"text","text":"Filter function that decides if the listener should be notified or not"}]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/State":{"navigatorTitle":[{"text":"State","kind":"identifier"}],"title":"State","abstract":[{"text":"Structure that represents the store state. The store state is kept as a ","type":"text"},{"type":"codeVoice","code":"Dictionary"},{"type":"text","text":" with "},{"type":"codeVoice","code":"String"},{"text":" Keys and ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" Values (","type":"text"},{"type":"codeVoice","code":"[String: Any]"},{"text":")","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/State","url":"\/documentation\/supportsdk\/state","type":"topic"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Store/addListener(if:callback:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"addListener","kind":"identifier"},{"kind":"text","text":"("},{"text":"if","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK14FilterFunctiona","text":"FilterFunction"},{"text":"<","kind":"text"},{"text":"State","preciseIdentifier":"s:10SupportSDK5StateV","kind":"typeIdentifier"},{"kind":"text","text":">?, "},{"text":"callback","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StateV"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:10SupportSDK12SubscriptionV","kind":"typeIdentifier","text":"Subscription"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StateV"},{"kind":"text","text":">"}],"type":"topic","title":"addListener(if:callback:)","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store\/addListener(if:callback:)","role":"symbol","abstract":[{"text":"Add a listener to the store. The listener will be notified when the state changes.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The listener will be notified with the full state when"}],"url":"\/documentation\/supportsdk\/store\/addlistener(if:callback:)"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Subscription":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Subscription"}],"type":"topic","title":"Subscription","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Subscription","role":"symbol","abstract":[{"text":"Subscription structure that represents a listener subscription.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"When adding a listener you get a subscription back."},{"text":" ","type":"text"},{"text":"You can use this subscription to remove the listener, notify about the current state or link the listener lifecycle with an object.","type":"text"}],"navigatorTitle":[{"text":"Subscription","kind":"identifier"}],"url":"\/documentation\/supportsdk\/subscription"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Store":{"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}],"type":"topic","title":"Store","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store","role":"symbol","abstract":[{"text":"Store that contains the application state, the reducer logic, the middleware and the listeners","type":"text"}],"navigatorTitle":[{"text":"Store","kind":"identifier"}],"url":"\/documentation\/supportsdk\/store"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"title":"SupportSDK","abstract":[],"role":"collection","kind":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","url":"\/documentation\/supportsdk","type":"topic"}}}