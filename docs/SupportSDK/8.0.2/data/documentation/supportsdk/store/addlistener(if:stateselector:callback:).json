{"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store"]]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/supportsdk\/store\/addlistener(if:stateselector:callback:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store\/addListener(if:stateSelector:callback:)"},"abstract":[{"text":"Add a listener to the store with a stateSelector","type":"text"}],"metadata":{"modules":[{"name":"SupportSDK"}],"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"addListener","kind":"identifier"},{"text":"<","kind":"text"},{"text":"StateType","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"if","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FilterFunction","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK14FilterFunctiona"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:10SupportSDK5StateV"},{"text":">?, ","kind":"text"},{"kind":"externalParam","text":"stateSelector"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK13StateSelectora","text":"StateSelector"},{"text":"<","kind":"text"},{"text":"StateType","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"callback"},{"kind":"text","text":": ("},{"text":"StateType","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Subscription","preciseIdentifier":"s:10SupportSDK12SubscriptionV"},{"text":"<","kind":"text"},{"text":"StateType","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp"},{"text":">","kind":"text"}],"role":"symbol","externalID":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF","title":"addListener(if:stateSelector:callback:)","symbolKind":"method","extendedModule":"SupportSDK"},"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"addListener","kind":"identifier"},{"text":"<","kind":"text"},{"text":"StateType","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"if"},{"text":" ","kind":"text"},{"text":"filterBlock","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/FilterFunction","text":"FilterFunction","preciseIdentifier":"s:10SupportSDK14FilterFunctiona"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/State","preciseIdentifier":"s:10SupportSDK5StateV","text":"State"},{"text":">? = nil, ","kind":"text"},{"text":"stateSelector","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"StateSelector","preciseIdentifier":"s:10SupportSDK13StateSelectora","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/StateSelector"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp","text":"StateType","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"callback"},{"kind":"text","text":": "},{"text":"@escaping","kind":"attribute"},{"kind":"text","text":" ("},{"preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp","text":"StateType","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Subscription","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK12SubscriptionV","text":"Subscription"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp","text":"StateType","kind":"typeIdentifier"},{"kind":"text","text":">"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"filterBlock","content":[{"type":"paragraph","inlineContent":[{"text":"(Optional) block that receives the old state and the new state.","type":"text"},{"type":"text","text":" "},{"text":"It decides wether the notification for the listener should be sent or not.","type":"text"},{"text":" ","type":"text"},{"text":"When not set, the listener is notified whenever the state changed.","type":"text"}]}]},{"name":"stateSelector","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"state selector block that selects a part of the full state"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Notification block called with the new state when the store’s state changed."}]}],"name":"callback"}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"inlineContent":[{"text":"The Listener’s subscription that can be used to remove the notification and for other listener related stuff.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"anchor":"Example","text":"Example","level":1,"type":"heading"},{"anchor":"Adding-a-listener-with-a-state-selector","type":"heading","text":"Adding a listener with a state selector","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a simple listener for the full state with a state selector that selects part of it."}]},{"inlineContent":[{"text":"Create a state selector that selects and creates a ","type":"text"},{"code":"TodoItemsState","type":"codeVoice"},{"text":" from the full ","type":"text"},{"code":"Store","type":"codeVoice"},{"text":" state.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let stateSelector: StateSelector<TodoItemsState> = { state in","  \/\/ Read values from the store","  let value1 = state.value(forKeyOfType: SomeType.self)","  let value2 = state.value(forKey: \"someKey\")","","  \/\/ Create and return a TodoItemsState","  return TodoItemsState(.....)","}"]},{"inlineContent":[{"type":"text","text":"Add a listener with the state selector and"}],"type":"paragraph"},{"syntax":null,"code":["let subscription = store.addListener(stateSelector: stateSelector) { newState in","  \/\/ newState here is a TodoItemsState","}"],"type":"codeListing"},{"text":"Adding a listener with a state selector and a filter block","anchor":"Adding-a-listener-with-a-state-selector-and-a-filter-block","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Add a simple listener for the full state with a state selector that selects part of it and a filter block that decide when to notify."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Create a state selector that selects and creates a ","type":"text"},{"code":"TodoItemsState","type":"codeVoice"},{"type":"text","text":" from the full "},{"code":"Store","type":"codeVoice"},{"text":" state.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let stateSelector: StateSelector<TodoItemsState> = { state in","  \/\/ Read values from the store","  let value1 = state.value(forKeyOfType: SomeType.self)","  let value2 = state.value(forKey: \"someKey\")","","  \/\/ Create and return a TodoItemsState","  return TodoItemsState(.....)","}"]},{"inlineContent":[{"type":"text","text":"Add a filter block that decides when to notify"}],"type":"paragraph"},{"type":"codeListing","code":["let filterBlock: FilterFunction<State> = { oldState, newState in","  \/\/ Read a string from the oldState and newState","  \/\/ oldState and newState are the full Store state","  let value1 = oldState.value(forKey: \"someKey\", ofType: String.self)","  let value2 = newState.value(forKey: \"someKey\", ofType: String.self)","","  \/\/ Compare","  return value1 != value2","}"],"syntax":null},{"inlineContent":[{"type":"text","text":"Add a listener with the state selector and"}],"type":"paragraph"},{"code":["let subscription = store.addListener(stateSelector: stateSelector) { newState in","  \/\/ newState here is a TodoItemsState","}"],"type":"codeListing","syntax":null}]}],"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/FilterFunction":{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/FilterFunction","url":"\/documentation\/supportsdk\/filterfunction","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FilterFunction"}],"type":"topic","kind":"symbol","role":"symbol","title":"FilterFunction","navigatorTitle":[{"kind":"identifier","text":"FilterFunction"}],"abstract":[{"type":"text","text":"Filter function that decides if the listener should be notified or not"}]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/StateSelector":{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/StateSelector","kind":"symbol","title":"StateSelector","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StateSelector"}],"navigatorTitle":[{"kind":"identifier","text":"StateSelector"}],"role":"symbol","url":"\/documentation\/supportsdk\/stateselector","abstract":[{"text":"Function that selects part of the full state","type":"text"}],"type":"topic"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Store/addListener(if:stateSelector:callback:)":{"url":"\/documentation\/supportsdk\/store\/addlistener(if:stateselector:callback:)","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store\/addListener(if:stateSelector:callback:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addListener","kind":"identifier"},{"kind":"text","text":"<"},{"text":"StateType","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"if","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FilterFunction","preciseIdentifier":"s:10SupportSDK14FilterFunctiona"},{"text":"<","kind":"text"},{"text":"State","preciseIdentifier":"s:10SupportSDK5StateV","kind":"typeIdentifier"},{"text":">?, ","kind":"text"},{"kind":"externalParam","text":"stateSelector"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StateSelector","preciseIdentifier":"s:10SupportSDK13StateSelectora"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp"},{"kind":"text","text":">, "},{"text":"callback","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp"},{"kind":"text","text":") -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"text":"Subscription","preciseIdentifier":"s:10SupportSDK12SubscriptionV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:10SupportSDK5StoreC11addListener2if13stateSelector8callbackAA12SubscriptionVyxGSbAA5StateV_ALtcSg_xSgALcyxctlF0K4TypeL_xmfp","kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">"}],"type":"topic","kind":"symbol","role":"symbol","title":"addListener(if:stateSelector:callback:)","abstract":[{"type":"text","text":"Add a listener to the store with a stateSelector"}]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"title":"SupportSDK","abstract":[],"role":"collection","kind":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","url":"\/documentation\/supportsdk","type":"topic"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Subscription":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Subscription"}],"type":"topic","title":"Subscription","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Subscription","role":"symbol","abstract":[{"text":"Subscription structure that represents a listener subscription.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"When adding a listener you get a subscription back."},{"text":" ","type":"text"},{"text":"You can use this subscription to remove the listener, notify about the current state or link the listener lifecycle with an object.","type":"text"}],"navigatorTitle":[{"text":"Subscription","kind":"identifier"}],"url":"\/documentation\/supportsdk\/subscription"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Store":{"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}],"type":"topic","title":"Store","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store","role":"symbol","abstract":[{"text":"Store that contains the application state, the reducer logic, the middleware and the listeners","type":"text"}],"navigatorTitle":[{"text":"Store","kind":"identifier"}],"url":"\/documentation\/supportsdk\/store"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/State":{"navigatorTitle":[{"text":"State","kind":"identifier"}],"title":"State","abstract":[{"text":"Structure that represents the store state. The store state is kept as a ","type":"text"},{"type":"codeVoice","code":"Dictionary"},{"type":"text","text":" with "},{"type":"codeVoice","code":"String"},{"text":" Keys and ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" Values (","type":"text"},{"type":"codeVoice","code":"[String: Any]"},{"text":")","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/State","url":"\/documentation\/supportsdk\/state","type":"topic"}}}