{"abstract":[{"text":"Add a listener to the store. The listener will be notified when the state changes.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store"]]},"metadata":{"extendedModule":"SupportSDK","roleHeading":"Instance Method","symbolKind":"method","title":"addListener(forStateType:stateKey:if:callback:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addListener"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"StateType"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"forStateType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"text":".Type, ","kind":"text"},{"text":"stateKey","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SupportSDK8StateKeya","text":"StateKey","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"if"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SupportSDK14FilterFunctiona","text":"FilterFunction","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp","kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">?, "},{"text":"callback","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp","text":"StateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10SupportSDK12SubscriptionV","text":"Subscription","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp","text":"StateType","kind":"typeIdentifier"},{"text":">","kind":"text"}],"externalID":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF","role":"symbol","modules":[{"name":"SupportSDK"}]},"identifier":{"url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store\/addListener(forStateType:stateKey:if:callback:)","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"addListener","kind":"identifier"},{"kind":"text","text":"<"},{"text":"StateType","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"forStateType","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"type"},{"kind":"text","text":": "},{"text":"StateType","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"kind":"text","text":".Type, "},{"text":"stateKey","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StateKey","preciseIdentifier":"s:10SupportSDK8StateKeya","kind":"typeIdentifier","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/StateKey"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"if"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"filterBlock"},{"kind":"text","text":": "},{"text":"FilterFunction","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/FilterFunction","preciseIdentifier":"s:10SupportSDK14FilterFunctiona","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp","kind":"typeIdentifier"},{"kind":"text","text":">? = nil, "},{"text":"callback","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"text":" (","kind":"text"},{"text":"StateType","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"kind":"text","text":") -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Subscription","preciseIdentifier":"s:10SupportSDK12SubscriptionV","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Subscription"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp","text":"StateType"},{"kind":"text","text":">"}],"platforms":["iOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The type of the state to listen to. If the state type is not found, the listener will not be notified."}],"type":"paragraph"}],"name":"type"},{"name":"stateKey","content":[{"type":"paragraph","inlineContent":[{"text":"(Optional) the state key to listen to. When not passed (or passing nil) the type name from ","type":"text"},{"code":"forStateType","type":"codeVoice"},{"type":"text","text":" will be used."},{"text":" ","type":"text"},{"type":"text","text":"Only pass when the state key for the state was changed in the reducer (99% of the times you dont need to set this parameter)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"(Optional) block that receives the old state and the new state.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"It decides wether the notification for the listener should be sent or not."},{"text":" ","type":"text"},{"type":"text","text":"When not set, the listener is notified whenever the state changed."}]}],"name":"filterBlock"},{"name":"callback","content":[{"inlineContent":[{"type":"text","text":"Notification block called with the new state when the store’s state changed."}],"type":"paragraph"}]}]},{"content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Listener’s subscription that can be used to remove the notification and for other listener related stuff."}]}],"kind":"content"},{"kind":"content","content":[{"anchor":"Example","type":"heading","text":"Example","level":1},{"text":"Adding a listener","anchor":"Adding-a-listener","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"Add a simple listener for a ","type":"text"},{"type":"codeVoice","code":"MyState"},{"text":" state type","type":"text"}]},{"type":"codeListing","code":["let subscription = store.addListener(forStateType: MyState.self) { newState in","  \/\/ Do something with the state","}"],"syntax":null},{"text":"Adding a listener with a filterBlock","type":"heading","anchor":"Adding-a-listener-with-a-filterBlock","level":2},{"type":"paragraph","inlineContent":[{"text":"Adding a listener for a state of ","type":"text"},{"type":"codeVoice","code":"TodoItemsState"},{"type":"text","text":" type with a filter block."},{"text":" ","type":"text"},{"type":"text","text":"In the filterBlock we check that the new state has more items than the old state."},{"type":"text","text":" "},{"type":"text","text":"The Listener will be notified only if the filterBlock returns true."}]},{"syntax":null,"type":"codeListing","code":["let subscription = store.addListener(","  forStateType: TodoItemsState.self,","  if: { old, new in return old.todos.count > new.todos.count }) { newState in","    \/\/ Do something with the state","}"]},{"anchor":"Adding-a-listener-with-a-state-key","level":2,"text":"Adding a listener with a state key","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Adding a listener for a state of ","type":"text"},{"type":"codeVoice","code":"TodoItemsState"},{"text":" type, the reducer registered the state key to “todos”","type":"text"}]},{"syntax":null,"code":["let subscription = store.addListener(forStateType: TodoItemsState.self, stateKey: \"todos\") { newState in","  \/\/ Do something with the state","}"],"type":"codeListing"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/supportsdk\/store\/addlistener(forstatetype:statekey:if:callback:)"]}],"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Subscription":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Subscription"}],"type":"topic","title":"Subscription","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Subscription","role":"symbol","abstract":[{"text":"Subscription structure that represents a listener subscription.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"When adding a listener you get a subscription back."},{"text":" ","type":"text"},{"text":"You can use this subscription to remove the listener, notify about the current state or link the listener lifecycle with an object.","type":"text"}],"navigatorTitle":[{"text":"Subscription","kind":"identifier"}],"url":"\/documentation\/supportsdk\/subscription"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"title":"SupportSDK","abstract":[],"role":"collection","kind":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","url":"\/documentation\/supportsdk","type":"topic"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Store":{"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}],"type":"topic","title":"Store","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store","role":"symbol","abstract":[{"text":"Store that contains the application state, the reducer logic, the middleware and the listeners","type":"text"}],"navigatorTitle":[{"text":"Store","kind":"identifier"}],"url":"\/documentation\/supportsdk\/store"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Store/addListener(forStateType:stateKey:if:callback:)":{"url":"\/documentation\/supportsdk\/store\/addlistener(forstatetype:statekey:if:callback:)","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store\/addListener(forStateType:stateKey:if:callback:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"addListener","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"StateType"},{"text":">(","kind":"text"},{"text":"forStateType","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StateType","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"text":".Type, ","kind":"text"},{"text":"stateKey","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StateKey","preciseIdentifier":"s:10SupportSDK8StateKeya"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"if"},{"kind":"text","text":": "},{"text":"FilterFunction","preciseIdentifier":"s:10SupportSDK14FilterFunctiona","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"kind":"text","text":">?, "},{"kind":"externalParam","text":"callback"},{"kind":"text","text":": ("},{"text":"StateType","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Subscription","preciseIdentifier":"s:10SupportSDK12SubscriptionV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp","text":"StateType"},{"text":">","kind":"text"}],"type":"topic","kind":"symbol","role":"symbol","title":"addListener(forStateType:stateKey:if:callback:)","abstract":[{"text":"Add a listener to the store. The listener will be notified when the state changes.","type":"text"}]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/StateKey":{"navigatorTitle":[{"kind":"identifier","text":"StateKey"}],"title":"StateKey","abstract":[{"type":"text","text":"Store state is stored as a Dictionary of [StateKey: Any]"}],"role":"symbol","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StateKey","kind":"identifier"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/StateKey","url":"\/documentation\/supportsdk\/statekey","type":"topic"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/FilterFunction":{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/FilterFunction","url":"\/documentation\/supportsdk\/filterfunction","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FilterFunction"}],"type":"topic","kind":"symbol","role":"symbol","title":"FilterFunction","navigatorTitle":[{"kind":"identifier","text":"FilterFunction"}],"abstract":[{"type":"text","text":"Filter function that decides if the listener should be notified or not"}]}}}