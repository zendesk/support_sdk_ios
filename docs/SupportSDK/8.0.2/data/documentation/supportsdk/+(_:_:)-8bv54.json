{"identifier":{"url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/+(_:_:)-8bv54","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/supportsdk\/+(_:_:)-8bv54"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Combines two reducers. The combined reducer calls each of its internal reducer for a each paricular state key."}],"sections":[],"metadata":{"roleHeading":"Operator","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"+","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"text":"R1","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"R2"},{"kind":"text","text":">("},{"text":"R1","preciseIdentifier":"s:10SupportSDK1poiyAA15CombinedReducerCx_q_tAA0D0RzAaER_r0_lF2R1L_xmfp","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"R2","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK1poiyAA15CombinedReducerCx_q_tAA0D0RzAaER_r0_lF2R2L_q_mfp"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"CombinedReducer","preciseIdentifier":"s:10SupportSDK15CombinedReducerC"}],"externalID":"s:10SupportSDK1poiyAA15CombinedReducerCx_q_tAA0D0RzAaER_r0_lF","modules":[{"name":"SupportSDK"}],"role":"symbol","title":"+(_:_:)","symbolKind":"op"},"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"+","kind":"identifier"},{"kind":"text","text":" "},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"R2"},{"text":">(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK1poiyAA15CombinedReducerCx_q_tAA0D0RzAaER_r0_lF2R1L_xmfp","text":"R1"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SupportSDK1poiyAA15CombinedReducerCx_q_tAA0D0RzAaER_r0_lF2R2L_q_mfp","text":"R2","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/CombinedReducer","text":"CombinedReducer","preciseIdentifier":"s:10SupportSDK15CombinedReducerC","kind":"typeIdentifier"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"R1","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Reducer","text":"Reducer","kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK7ReducerP"},{"text":", ","kind":"text"},{"text":"R2","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:10SupportSDK7ReducerP","text":"Reducer","kind":"typeIdentifier","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Reducer"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Example","type":"heading","anchor":"Example","level":1},{"type":"heading","text":"Combine reducers","anchor":"Combine-reducers","level":2},{"inlineContent":[{"text":"If your application has two screens, you can model that with two states, for example ","type":"text"},{"code":"TodoList","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Settings"},{"text":" states.","type":"text"},{"type":"text","text":" "},{"text":"We can then create two reducers for each of these states.","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let todoReducer = BlockReducer(state: TodoList.self) { state, action in","  guard let newState = state as? Int else { return state }","","  if action is SomeAction {","    return newState + 1","  }","","  return newState","}","","let settingsReducer = BlockReducer(state: Settings.self) { state, action in","  guard let newState = state as? Int else { return state }","","  if action is SomeAction {","    return newState + 1","  }","","  return newState","}"]},{"type":"paragraph","inlineContent":[{"text":"We can then combine these 2 reducers with:","type":"text"}]},{"code":["let store = Suas.createStore(","  reducer: todoReducer + settingsReducer",")"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"todoReducer"},{"text":" will handle the “TodoList” key of state and ","type":"text"},{"type":"codeVoice","code":"settingsReducer"},{"type":"text","text":" will handle the “Settings” portoon of the full Store state"}]},{"text":"Combine reducers with custom state key","type":"heading","level":2,"anchor":"Combine-reducers-with-custom-state-key"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If a store has a state with two keys “key1” and “key2”. We can register a reducer for each one of these keys."}]},{"type":"paragraph","inlineContent":[{"text":"We create two reducers with ","type":"text"},{"code":"stateKey","type":"codeVoice"},{"text":"s of “key1” and “key2”","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let myReducer1 = BlockReducer(state: 1, key: \"key1\") { state, action in","  guard let newState = state as? Int else { return state }","","  if action is SomeAction {","    return newState + 1","  }","","  return newState","}","","let myReducer2 = BlockReducer(state: 1, key: \"key2\") { state, action in","  guard let newState = state as? Int else { return state }","","  if action is SomeAction {","    return newState + 1","  }","","  return newState","}"]},{"inlineContent":[{"type":"text","text":"We can then combine these 2 reducers with:"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let store = Suas.createStore(","  reducer: myReducer1 + myReducer2",")"]},{"type":"paragraph","inlineContent":[{"code":"myReducer1","type":"codeVoice"},{"type":"text","text":" will handle the “key1” key of state and "},{"code":"myReducer2","type":"codeVoice"},{"text":" will handle the “key2” key of state","type":"text"}]}]}],"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/+(_:_:)-8bv54":{"title":"+(_:_:)","role":"symbol","url":"\/documentation\/supportsdk\/+(_:_:)-8bv54","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/+(_:_:)-8bv54","abstract":[{"type":"text","text":"Combines two reducers. The combined reducer calls each of its internal reducer for a each paricular state key."}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"+","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"R1","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"R2"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:10SupportSDK1poiyAA15CombinedReducerCx_q_tAA0D0RzAaER_r0_lF2R1L_xmfp","text":"R1","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"R2","preciseIdentifier":"s:10SupportSDK1poiyAA15CombinedReducerCx_q_tAA0D0RzAaER_r0_lF2R2L_q_mfp"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK15CombinedReducerC","text":"CombinedReducer"}]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/CombinedReducer":{"abstract":[{"type":"text","text":"Reducer that represents a combination of two reducers"},{"type":"text","text":" "},{"text":"This reducers is not to be implemented by hand. You combine reducer by adding them with the ","type":"text"},{"type":"codeVoice","code":"+"},{"text":" operator.","type":"text"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/CombinedReducer","title":"CombinedReducer","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"CombinedReducer","kind":"identifier"}],"type":"topic","url":"\/documentation\/supportsdk\/combinedreducer","navigatorTitle":[{"text":"CombinedReducer","kind":"identifier"}],"kind":"symbol"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"title":"SupportSDK","abstract":[],"role":"collection","kind":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","url":"\/documentation\/supportsdk","type":"topic"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Reducer":{"url":"\/documentation\/supportsdk\/reducer","title":"Reducer","type":"topic","abstract":[{"text":"Protocol that represents a reducer","type":"text"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Reducer","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}]}}}