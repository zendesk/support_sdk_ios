{"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/ActionSubscription"]]},"abstract":[{"type":"text","text":"Link the listener associated with this subscription with an object. When the object gets deallocated the listener is removed."},{"type":"text","text":" "},{"type":"text","text":"Useful when adding listeners that updates a UIView. You can link the listener lifecycle to the UIView’s lifecycle."},{"type":"text","text":" "},{"type":"text","text":"When the UIView is removed (deallocated) the listener will be removed and will stop it from being notified."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/supportsdk\/actionsubscription\/linklifecycleto(object:)"]}],"identifier":{"url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/ActionSubscription\/linkLifeCycleTo(object:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"linkLifeCycleTo","kind":"identifier"},{"text":"(","kind":"text"},{"text":"object","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"NSObject","preciseIdentifier":"c:objc(cs)NSObject"},{"text":")","kind":"text"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","text":"Example","level":1,"anchor":"Example"},{"code":["let view = SomeUIVIew()","","\/\/ Listener updates the view","let subscription = store.addActionListener(...)","","\/\/ Link the listener lifecycle to the view. No need to manually call `removeListener` anymore.","subscription.linkLifeCycleTo(object: view)"],"syntax":null,"type":"codeListing"}]}],"metadata":{"title":"linkLifeCycleTo(object:)","modules":[{"name":"SupportSDK"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"linkLifeCycleTo"},{"text":"(","kind":"text"},{"text":"object","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"NSObject","preciseIdentifier":"c:objc(cs)NSObject"},{"kind":"text","text":")"}],"role":"symbol","roleHeading":"Instance Method","symbolKind":"method","externalID":"s:10SupportSDK18ActionSubscriptionV15linkLifeCycleTo6objectySo8NSObjectC_tF"},"sections":[],"kind":"symbol","references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/ActionSubscription":{"role":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/ActionSubscription","title":"ActionSubscription","navigatorTitle":[{"text":"ActionSubscription","kind":"identifier"}],"url":"\/documentation\/supportsdk\/actionsubscription","abstract":[{"type":"text","text":"Subscription structure that represents a listener subscription."},{"type":"text","text":" "},{"text":"When adding a listener you get a subscription back.","type":"text"},{"text":" ","type":"text"},{"text":"You can use this subscription to remove the listener, notify about the current state or link the listener lifecycle with an object.","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ActionSubscription","kind":"identifier"}]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"title":"SupportSDK","abstract":[],"role":"collection","kind":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","url":"\/documentation\/supportsdk","type":"topic"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/ActionSubscription/linkLifeCycleTo(object:)":{"role":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/ActionSubscription\/linkLifeCycleTo(object:)","title":"linkLifeCycleTo(object:)","url":"\/documentation\/supportsdk\/actionsubscription\/linklifecycleto(object:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Link the listener associated with this subscription with an object. When the object gets deallocated the listener is removed."},{"text":" ","type":"text"},{"type":"text","text":"Useful when adding listeners that updates a UIView. You can link the listener lifecycle to the UIView’s lifecycle."},{"type":"text","text":" "},{"type":"text","text":"When the UIView is removed (deallocated) the listener will be removed and will stop it from being notified."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"linkLifeCycleTo","kind":"identifier"},{"text":"(","kind":"text"},{"text":"object","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"c:objc(cs)NSObject","kind":"typeIdentifier","text":"NSObject"},{"kind":"text","text":")"}]}}}