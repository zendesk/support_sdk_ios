{"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Middleware"}],"platforms":["iOS"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A middleware can be used to implement:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Logging that logs the state before and after the reducer changes it"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Perform async network calls and dispatches actions representing the result when the network returns.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Other advanced usagesâ€¦","type":"text"}],"type":"paragraph"}]}]},{"anchor":"Example","text":"Example","level":1,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Implementing a logging middleware."}]},{"syntax":null,"type":"codeListing","code":["class LoggerMiddleware: Middleware {","  var api: MiddlewareAPI?","  var next: DispatchFunction?","","  func onAction(action: Action, getState: @escaping GetStateFunction, dispatch: @escaping DispatchFunction, next: @escaping NextFunction) {","    \/\/ Read the state before any reducer changes it","    print(\"The old state is \\(getState())\")","","    \/\/ Print the action","    print(\"The action is \\(action)\")","","    \/\/ Continue the dispatching process..until the reducer reduces the action","    \/\/ Not calling `next` will prevent the action from reaching the reducer","    next?(action)","","    \/\/ Read the state after any reducer changes it","    print(\"The new state is \\(api?.state)\")","  }","}"]}]}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Middleware","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Middleware"}],"externalID":"s:10SupportSDK10MiddlewareP","title":"Middleware","modules":[{"name":"SupportSDK"}],"roleHeading":"Protocol","symbolKind":"protocol","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK"]]},"topicSections":[{"identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware\/onAction(action:getState:dispatch:next:)"],"title":"Instance Methods"}],"abstract":[{"type":"text","text":"Middleware protocol that represents a suas store middleware"},{"type":"text","text":" "},{"type":"text","text":"A middleware helps extending the dispatch logic of Suas."}],"relationshipsSections":[{"identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncMiddleware","doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockMiddleware","doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/LoggerMiddleware"],"kind":"relationships","type":"conformingTypes","title":"Conforming Types"}],"identifier":{"url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/supportsdk\/middleware"]}],"sections":[],"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Middleware":{"abstract":[{"text":"Middleware protocol that represents a suas store middleware","type":"text"},{"type":"text","text":" "},{"text":"A middleware helps extending the dispatch logic of Suas.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Middleware"}],"title":"Middleware","url":"\/documentation\/supportsdk\/middleware","navigatorTitle":[{"text":"Middleware","kind":"identifier"}],"type":"topic"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Middleware/onAction(action:getState:dispatch:next:)":{"abstract":[{"type":"text","text":"Function called when an action is dispatched"}],"kind":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware\/onAction(action:getState:dispatch:next:)","required":true,"role":"symbol","title":"onAction(action:getState:dispatch:next:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"onAction"},{"kind":"text","text":"("},{"text":"action","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SupportSDK6ActionP","kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"getState"},{"text":": ","kind":"text"},{"text":"GetStateFunction","preciseIdentifier":"s:10SupportSDK16GetStateFunctiona","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"dispatch"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SupportSDK16DispatchFunctiona","kind":"typeIdentifier","text":"DispatchFunction"},{"kind":"text","text":", "},{"text":"next","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SupportSDK12NextFunctiona","text":"NextFunction"},{"text":")","kind":"text"}],"url":"\/documentation\/supportsdk\/middleware\/onaction(action:getstate:dispatch:next:)","type":"topic"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"title":"SupportSDK","abstract":[],"role":"collection","kind":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","url":"\/documentation\/supportsdk","type":"topic"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/LoggerMiddleware":{"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/LoggerMiddleware","url":"\/documentation\/supportsdk\/loggermiddleware","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"LoggerMiddleware","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","title":"LoggerMiddleware","navigatorTitle":[{"kind":"identifier","text":"LoggerMiddleware"}],"abstract":[{"text":"LoggerMiddleware that logs the action and state when each action is received","type":"text"},{"text":" ","type":"text"},{"text":"When an action is dispatched, the LoggerMiddleware will print information related to it in the console.","type":"text"}]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/BlockMiddleware":{"kind":"symbol","role":"symbol","title":"BlockMiddleware","abstract":[{"type":"text","text":"Create a middleware inline with a block."}],"url":"\/documentation\/supportsdk\/blockmiddleware","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockMiddleware","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"BlockMiddleware","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"BlockMiddleware"}]},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/AsyncMiddleware":{"abstract":[{"text":"Async Middleware handles actions of type ","type":"text"},{"code":"AsyncAction","type":"codeVoice"}],"role":"symbol","navigatorTitle":[{"text":"AsyncMiddleware","kind":"identifier"}],"title":"AsyncMiddleware","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AsyncMiddleware","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncMiddleware","url":"\/documentation\/supportsdk\/asyncmiddleware"}}}